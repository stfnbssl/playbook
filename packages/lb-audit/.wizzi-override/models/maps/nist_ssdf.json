[
    {
      "SSDF_ID": "PO.1.1",
      "Task": "Identify and document all security requirements for the organization’s software development infrastructures and processes, and maintain the requirements over time.",
      "Practice": "Define Security Requirements for Software Development",
      "Group": "Prepare the Organization"
    },
    {
      "SSDF_ID": "PO.1.2",
      "Task": "Identify and document all security requirements for organization-developed software to meet, and maintain the requirements over time.",
      "Practice": "Define Security Requirements for Software Development",
      "Group": "Prepare the Organization"
    },
    {
      "SSDF_ID": "PO.1.3",
      "Task": "Communicate requirements to all third parties who will provide commercial software components to the organization for reuse by the organization’s own software. [Formerly PW.3.1]",
      "Practice": "Define Security Requirements for Software Development",
      "Group": "Prepare the Organization"
    },
    {
      "SSDF_ID": "PO.2.1",
      "Task": "Create new roles and alter responsibilities for existing roles as needed to encompass all parts of the SDLC. Periodically review and maintain the defined roles and responsibilities, updating them as needed.",
      "Practice": "Implement Roles and Responsibilities",
      "Group": "Prepare the Organization"
    },
    {
      "SSDF_ID": "PO.2.2",
      "Task": "Provide role-based training for all personnel with responsibilities that contribute to secure development. Periodically review personnel proficiency and role-based training, and update the training as needed.",
      "Practice": "Implement Roles and Responsibilities",
      "Group": "Prepare the Organization"
    },
    {
      "SSDF_ID": "PO.2.3",
      "Task": "Obtain upper management or authorizing official commitment to secure development, and convey that commitment to all with development-related roles and responsibilities.",
      "Practice": "Implement Roles and Responsibilities",
      "Group": "Prepare the Organization"
    },
    {
      "SSDF_ID": "PO.3.1",
      "Task": "Specify which tools or tool types must or should be included in each toolchain to mitigate identified risks, as well as how the toolchain components are to be integrated with each other.",
      "Practice": "Implement Supporting Toolchains",
      "Group": "Prepare the Organization"
    },
    {
      "SSDF_ID": "PO.3.2",
      "Task": "Follow recommended security practices to deploy, operate, and maintain tools and toolchains.",
      "Practice": "Implement Supporting Toolchains",
      "Group": "Prepare the Organization"
    },
    {
      "SSDF_ID": "PO.3.3",
      "Task": "Configure tools to generate artifacts  of their support of secure software development practices as defined by the organization.",
      "Practice": "Implement Supporting Toolchains",
      "Group": "Prepare the Organization"
    },
    {
      "SSDF_ID": "PO.4.1",
      "Task": "Define criteria for software security checks and track throughout the SDLC.",
      "Practice": "Define and Use Criteria for Software Security Checks",
      "Group": "Prepare the Organization"
    },
    {
      "SSDF_ID": "PO.4.2",
      "Task": "Implement processes, mechanisms, etc. to gather and safeguard the necessary information in support of the criteria.",
      "Practice": "Define and Use Criteria for Software Security Checks",
      "Group": "Prepare the Organization"
    },
    {
      "SSDF_ID": "PO.5.1",
      "Task": "Separate and protect each environment involved in software development.",
      "Practice": "Implement and Maintain Secure Environments for Software Development",
      "Group": "Prepare the Organization"
    },
    {
      "SSDF_ID": "PO.5.2",
      "Task": "Secure and harden development endpoints (i.e., endpoints for software designers, developers, testers, builders, etc.) to perform development-related tasks using a risk-based approach.",
      "Practice": "Implement and Maintain Secure Environments for Software Development",
      "Group": "Prepare the Organization"
    },
    {
      "SSDF_ID": "PS.1.1",
      "Task": "Store all forms of code – including source code, executable code, and configuration-as-code –  based on the principle of least privilege so that only authorized personnel, tools, services, etc. have access.",
      "Practice": "Protect All Forms of Code from Unauthorized Access and Tampering",
      "Group": "Protect the Software"
    },
    {
      "SSDF_ID": "PS.2.1",
      "Task": "Make software integrity verification information available to software acquirers.",
      "Practice": "Provide a Mechanism for Verifying Software Release Integrity",
      "Group": "Protect the Software"
    },
    {
      "SSDF_ID": "PS.3.1",
      "Task": "Securely archive the necessary files and supporting data (e.g., integrity verification information, provenance data) to be retained for each software release.",
      "Practice": "Archive and Protect Each Software Release",
      "Group": "Protect the Software"
    },
    {
      "SSDF_ID": "PS.3.2",
      "Task": "Collect, safeguard, maintain, and share provenance data for all components of each software release (e.g., in a software bill of materials [SBOM]).",
      "Practice": "Archive and Protect Each Software Release",
      "Group": "Protect the Software"
    },
    {
      "SSDF_ID": "PW.1.1",
      "Task": "Use forms of risk modeling – such as threat modeling, attack modeling, or attack surface mapping – to help assess the security risk for the software.",
      "Practice": "Design Software to Meet Security Requirements and Mitigate Security Risks",
      "Group": "Produce Well-Secured Software"
    },
    {
      "SSDF_ID": "PW.1.2",
      "Task": "Track and maintain the software’s security requirements, risks, and design decisions.",
      "Practice": "Design Software to Meet Security Requirements and Mitigate Security Risks",
      "Group": "Produce Well-Secured Software"
    },
    {
      "SSDF_ID": "PW.1.3",
      "Task": "Where appropriate, build in support for using standardized security features and services (e.g., enabling software to integrate with existing log management, identity management, access control, and vulnerability management systems) instead of creating proprietary implementations of security features and services. [Formerly PW.4.3]",
      "Practice": "Design Software to Meet Security Requirements and Mitigate Security Risks",
      "Group": "Produce Well-Secured Software"
    },
    {
      "SSDF_ID": "PW.2.1",
      "Task": "Have 1) a qualified person (or people) who were not involved with the design and/or 2) automated processes instantiated in the toolchain review the software design to confirm and enforce that it meets all of the security requirements and satisfactorily addresses the identified risk information.",
      "Practice": "Review the Software Design to Verify Compliance with Security Requirements and Risk Information",
      "Group": "Produce Well-Secured Software"
    },
    {
      "SSDF_ID": "PW.4.1",
      "Task": "Acquire and maintain well-secured software components (e.g., software libraries, modules, middleware, frameworks) from commercial, open-source, and other third-party developers for use by the organization’s software.",
      "Practice": "Reuse Existing, Well-Secured Software When Feasible Instead of Duplicating Functionality",
      "Group": "Produce Well-Secured Software"
    },
    {
      "SSDF_ID": "PW.4.2",
      "Task": "Create and maintain well-secured software components in-house following SDLC processes to meet common internal software development needs that cannot be better met by third-party software components.",
      "Practice": "Reuse Existing, Well-Secured Software When Feasible Instead of Duplicating Functionality",
      "Group": "Produce Well-Secured Software"
    },
    {
      "SSDF_ID": "PW.4.4",
      "Task": "Verify that acquired commercial, open-source, and all other third-party software components comply with the requirements, as defined by the organization, throughout their life cycles.",
      "Practice": "Reuse Existing, Well-Secured Software When Feasible Instead of Duplicating Functionality",
      "Group": "Produce Well-Secured Software"
    },
    {
      "SSDF_ID": "PW.5.1",
      "Task": "Follow all secure coding practices that are appropriate to the development languages and environment to meet the organization’s requirements.",
      "Practice": "Create Source Code by Adhering to Secure Coding Practices",
      "Group": "Produce Well-Secured Software"
    },
    {
      "SSDF_ID": "PW.6.1",
      "Task": "Use compiler, interpreter, and build tools that offer features to improve executable security.",
      "Practice": "Configure the Compilation, Interpreter, and Build Processes to Improve Executable Security",
      "Group": "Produce Well-Secured Software"
    },
    {
      "SSDF_ID": "PW.6.2",
      "Task": "Determine which compiler, interpreter, and build tool features should be used and how each should be configured, then implement and use the approved configurations.",
      "Practice": "Configure the Compilation, Interpreter, and Build Processes to Improve Executable Security",
      "Group": "Produce Well-Secured Software"
    },
    {
      "SSDF_ID": "PW.7.1",
      "Task": "Determine whether code review (a person looks directly at the code to find issues) and/or code analysis (tools are used to find issues in code, either in a fully automated way or in conjunction with a person) should be used, as defined by the organization.",
      "Practice": "Review and/or Analyze Human-Readable Code to Identify Vulnerabilities and Verify Compliance with Security Requirements",
      "Group": "Produce Well-Secured Software"
    },
    {
      "SSDF_ID": "PW.7.2",
      "Task": "Perform the code review and/or code analysis based on the organization’s secure coding standards, and record and triage all discovered issues and recommended remediations in the development team’s workflow or issue tracking system.",
      "Practice": "Review and/or Analyze Human-Readable Code to Identify Vulnerabilities and Verify Compliance with Security Requirements",
      "Group": "Produce Well-Secured Software"
    },
    {
      "SSDF_ID": "PW.8.1",
      "Task": "Determine whether executable code testing should be performed to find vulnerabilities not identified by previous reviews, analysis, or testing and, if so, which types of testing should be used.",
      "Practice": "Test Executable Code to Identify Vulnerabilities and Verify Compliance with Security Requirements",
      "Group": "Produce Well-Secured Software"
    },
    {
      "SSDF_ID": "PW.8.2",
      "Task": "Scope the testing, design the tests, perform the testing, and document the results, including recording and triaging all discovered issues and recommended remediations in the development team’s workflow or issue tracking system.",
      "Practice": "Test Executable Code to Identify Vulnerabilities and Verify Compliance with Security Requirements",
      "Group": "Produce Well-Secured Software"
    },
    {
      "SSDF_ID": "PW.9.1",
      "Task": "Define a secure baseline by determining how to configure each setting that has an effect on security or a security-related setting so that the default settings are secure and do not weaken the security functions provided by the platform, network infrastructure, or services.",
      "Practice": "Configure Software to Have Secure Settings by Default",
      "Group": "Produce Well-Secured Software"
    },
    {
      "SSDF_ID": "PW.9.2",
      "Task": "Implement the default settings (or groups of default settings, if applicable), and document each setting for software administrators.",
      "Practice": "Configure Software to Have Secure Settings by Default",
      "Group": "Produce Well-Secured Software"
    },
    {
      "SSDF_ID": "RV.1.1",
      "Task": "Gather information from software acquirers, users, and public sources on potential vulnerabilities in the software and third-party components that the software uses, and investigate all credible reports.",
      "Practice": "Identify and Confirm Vulnerabilities on an Ongoing Basis",
      "Group": "Respond to Vulnerabilities"
    },
    {
      "SSDF_ID": "RV.1.2",
      "Task": "Review, analyze, and/or test the software’s code to identify or confirm the presence of previously undetected vulnerabilities.",
      "Practice": "Identify and Confirm Vulnerabilities on an Ongoing Basis",
      "Group": "Respond to Vulnerabilities"
    },
    {
      "SSDF_ID": "RV.1.3",
      "Task": "Have a policy that addresses vulnerability disclosure and remediation, and implement the roles, responsibilities, and processes needed to support that policy.",
      "Practice": "Identify and Confirm Vulnerabilities on an Ongoing Basis",
      "Group": "Respond to Vulnerabilities"
    },
    {
      "SSDF_ID": "RV.2.1",
      "Task": "Analyze each vulnerability to gather sufficient information about risk to plan its remediation or other risk response.",
      "Practice": "Assess, Prioritize, and Remediate Vulnerabilities",
      "Group": "Respond to Vulnerabilities"
    },
    {
      "SSDF_ID": "RV.2.2",
      "Task": "Plan and implement risk responses for vulnerabilities.",
      "Practice": "Assess, Prioritize, and Remediate Vulnerabilities",
      "Group": "Respond to Vulnerabilities"
    },
    {
      "SSDF_ID": "RV.3.1",
      "Task": "Analyze identified vulnerabilities to determine their root causes.",
      "Practice": "Analyze Vulnerabilities to Identify Their Root Causes",
      "Group": "Respond to Vulnerabilities"
    },
    {
      "SSDF_ID": "RV.3.2",
      "Task": "Analyze the root causes over time to identify patterns, such as a particular secure coding practice not being followed consistently.",
      "Practice": "Analyze Vulnerabilities to Identify Their Root Causes",
      "Group": "Respond to Vulnerabilities"
    },
    {
      "SSDF_ID": "RV.3.3",
      "Task": "Review the software for similar vulnerabilities to eradicate a class of vulnerabilities, and proactively fix them rather than waiting for external reports.",
      "Practice": "Analyze Vulnerabilities to Identify Their Root Causes",
      "Group": "Respond to Vulnerabilities"
    },
    {
      "SSDF_ID": "RV.3.4",
      "Task": "Review the SDLC process, and update it if appropriate to prevent (or reduce the likelihood of) the root cause recurring in updates to the software or in new software that is created.",
      "Practice": "Analyze Vulnerabilities to Identify Their Root Causes",
      "Group": "Respond to Vulnerabilities"
    }
  ]