{ 
    [ chunks
        { 
            chunk_id "IEC-62443-4-1:2020/SM-1"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-1"
            parent_id null
            group_id "IEC-62443-4-1:2020/SM-1[p21]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A general product development/maintenance/support process shall be documented and enforced that is consistent and integrated with commonly accepted product development processes that include, but are not limited to:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "1f5e9c6b92dffdcaf9f8ad0e1c550eb15e4e6b2b659482a01645a79d582d9758"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-1/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-1"
            parent_id "IEC-62443-4-1:2020/SM-1"
            group_id "IEC-62443-4-1:2020/SM-1[p21]"
            seq 2
            normative true
            text_normative "A general product development/maintenance/support process shall be documented and enforced that is consistent and integrated with commonly accepted product development processes that include, but are not limited to: a) configuration management with change controls and audit logging;"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SM-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Development process"
                rationale "This process is required to ensure that the product supplier has well-defined and proven product development processes in place that can be extended to support the requirements specified by this document. The required processes defined by this document assume the existence of a mature product development life-cycle. Secure product development life-cycles cannot be effective without these processes and rely upon them being in place. Examples of commonly accepted product development processes include ISO 9001 [13] and ISO/IEC 27034 [34] compliant processes. Having this process means that the product supplier uses techniques during the product development life-cycle that support, as a minimum, configuration management, requirements definition, design, implementation and testing."
                clause "5.2"
                page "21"
            sha256 "141819743d371d50a29c22586d9f7b9692c69163bcf27f932371c748b796ba87"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-1/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-1"
            parent_id "IEC-62443-4-1:2020/SM-1"
            group_id "IEC-62443-4-1:2020/SM-1[p21]"
            seq 3
            normative true
            text_normative "A general product development/maintenance/support process shall be documented and enforced that is consistent and integrated with commonly accepted product development processes that include, but are not limited to: b) product description and requirements definition with requirements traceability;"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SM-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Development process"
                rationale "This process is required to ensure that the product supplier has well-defined and proven product development processes in place that can be extended to support the requirements specified by this document. The required processes defined by this document assume the existence of a mature product development life-cycle. Secure product development life-cycles cannot be effective without these processes and rely upon them being in place. Examples of commonly accepted product development processes include ISO 9001 [13] and ISO/IEC 27034 [34] compliant processes. Having this process means that the product supplier uses techniques during the product development life-cycle that support, as a minimum, configuration management, requirements definition, design, implementation and testing."
                clause "5.2"
                page "21"
            sha256 "76b4b5d20ba899331a8fc2df38fadcbf6122014b2ce061999a983a35140095b1"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-1/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-1"
            parent_id "IEC-62443-4-1:2020/SM-1"
            group_id "IEC-62443-4-1:2020/SM-1[p21]"
            seq 4
            normative true
            text_normative "A general product development/maintenance/support process shall be documented and enforced that is consistent and integrated with commonly accepted product development processes that include, but are not limited to: c) software or hardware design and implementation practices, such as modular design;"
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/SM-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Development process"
                rationale "This process is required to ensure that the product supplier has well-defined and proven product development processes in place that can be extended to support the requirements specified by this document. The required processes defined by this document assume the existence of a mature product development life-cycle. Secure product development life-cycles cannot be effective without these processes and rely upon them being in place. Examples of commonly accepted product development processes include ISO 9001 [13] and ISO/IEC 27034 [34] compliant processes. Having this process means that the product supplier uses techniques during the product development life-cycle that support, as a minimum, configuration management, requirements definition, design, implementation and testing."
                clause "5.2"
                page "21"
            sha256 "ef980c850c1d9d1cf5bddd110a2e7e768539e470309a7e3059819f357947cb45"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-1/d"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-1"
            parent_id "IEC-62443-4-1:2020/SM-1"
            group_id "IEC-62443-4-1:2020/SM-1[p21]"
            seq 5
            normative true
            text_normative "A general product development/maintenance/support process shall be documented and enforced that is consistent and integrated with commonly accepted product development processes that include, but are not limited to: d) repeatable testing verification and validation process;"
            ordinal "d"
            inherits_from "IEC-62443-4-1:2020/SM-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Development process"
                rationale "This process is required to ensure that the product supplier has well-defined and proven product development processes in place that can be extended to support the requirements specified by this document. The required processes defined by this document assume the existence of a mature product development life-cycle. Secure product development life-cycles cannot be effective without these processes and rely upon them being in place. Examples of commonly accepted product development processes include ISO 9001 [13] and ISO/IEC 27034 [34] compliant processes. Having this process means that the product supplier uses techniques during the product development life-cycle that support, as a minimum, configuration management, requirements definition, design, implementation and testing."
                clause "5.2"
                page "21"
            sha256 "09e32c533aaf25c46c7a182656060a98611d9052959861a41a8d4d14cc2b5241"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-1/e"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-1"
            parent_id "IEC-62443-4-1:2020/SM-1"
            group_id "IEC-62443-4-1:2020/SM-1[p21]"
            seq 6
            normative true
            text_normative "A general product development/maintenance/support process shall be documented and enforced that is consistent and integrated with commonly accepted product development processes that include, but are not limited to: e) review and approval of all development process records;"
            ordinal "e"
            inherits_from "IEC-62443-4-1:2020/SM-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Development process"
                rationale "This process is required to ensure that the product supplier has well-defined and proven product development processes in place that can be extended to support the requirements specified by this document. The required processes defined by this document assume the existence of a mature product development life-cycle. Secure product development life-cycles cannot be effective without these processes and rely upon them being in place. Examples of commonly accepted product development processes include ISO 9001 [13] and ISO/IEC 27034 [34] compliant processes. Having this process means that the product supplier uses techniques during the product development life-cycle that support, as a minimum, configuration management, requirements definition, design, implementation and testing."
                clause "5.2"
                page "21"
            sha256 "5d584de678834e8ecc5529cb7216872e1ff6a8f6103ebd97975654dcb752f4bd"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-1/f"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-1"
            parent_id "IEC-62443-4-1:2020/SM-1"
            group_id "IEC-62443-4-1:2020/SM-1[p21]"
            seq 7
            normative true
            text_normative "A general product development/maintenance/support process shall be documented and enforced that is consistent and integrated with commonly accepted product development processes that include, but are not limited to: f) life-cycle support."
            ordinal "f"
            inherits_from "IEC-62443-4-1:2020/SM-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Development process"
                rationale "This process is required to ensure that the product supplier has well-defined and proven product development processes in place that can be extended to support the requirements specified by this document. The required processes defined by this document assume the existence of a mature product development life-cycle. Secure product development life-cycles cannot be effective without these processes and rely upon them being in place. Examples of commonly accepted product development processes include ISO 9001 [13] and ISO/IEC 27034 [34] compliant processes. Having this process means that the product supplier uses techniques during the product development life-cycle that support, as a minimum, configuration management, requirements definition, design, implementation and testing."
                clause "5.2"
                page "21"
            sha256 "c6726fb5db40c58962d0fbbf966f95b34b8905ebd7760dbaef8d05dc138f4f0c"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-2"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-2"
            parent_id null
            group_id "IEC-62443-4-1:2020/SM-2[p21]"
            seq 1
            normative true
            informative false
            text_normative "A process shall be employed that identifies the organizational roles and personnel responsible for each of the processes required by this document."
            context_note null
            { context
                name "Identification of responsibilities"
                rationale "This process is required to ensure that responsibilities are assigned to elements of the product supplier's organization for performing and completing the processes required by this document. Having this process means that the product supplier's development, maintenance and product support processes required by this document each identify the organizational roles and personnel that are responsible for performing and completing them. The organization and personnel can be within the developer’s organization or external to it."
                clause "5.4"
                page "21"
            sha256 "23773472f8366bce4b5f74856d7ca2f130a8cd9df5c96a2f67793998fe5a59ca"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-3"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-3"
            parent_id null
            group_id "IEC-62443-4-1:2020/SM-3[p21]"
            seq 1
            normative true
            informative false
            text_normative "A process shall be employed for identifying products (or parts of products) to which this document applies."
            context_note null
            { context
                name "Identification of applicability"
                rationale "This process is required to ensure that the processes in scope as part of this document are applied to the appropriate products as needed and that the correct level of detail is applied. Having this process means that the product supplier has criteria for identifying which of its products are to be developed, maintained and supported using the processes required by this document. It is envisioned that a product supplier may apply this specification to selected products based on a number of factors, including the marketplace for which a product is intended and whether or not the product requires security to be built in to the product and fully evaluated. As an example, certain products or components may not have a security context or provide anonymous access and therefore may not require security to be built in to the product. An organization may also base the criteria on the particular features being developed to enhance a product for target markets as long as the common features for all markets remain subject to this standard. Organizations may also use criteria such as applicable security requirements or security risk. These requirements may be applied to externally provided components or custom developed components from third party suppliers. See 5.11 and 5.12 for more details."
                clause "5.5"
                page "21"
            sha256 "db95ac55d8685115b8ea3eef4579ffa6ba8d43adf3930e16c39cd3639e06507a"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-4"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-4"
            parent_id null
            group_id "IEC-62443-4-1:2020/SM-4[p22]"
            seq 1
            normative true
            informative false
            text_normative "A process shall be employed for identifying and providing security training and assessment programs to ensure that personnel assigned to the organizational roles and duties specified in 5.4, have demonstrated security expertise appropriate for those processes."
            context_note null
            { context
                name "Security expertise"
                rationale "This process is required to ensure that personnel involved in security-related processes have adequate expertise for the specific tasks to which they are assigned. Expertise can have been gained by training, experience, seminars, conferences, certifications, etc. this includes technical expertise in defense in depth strategies and related security techniques, and also in the practices, including best practices, required to develop and mainta in the product. Having this process means that personnel assigned to security-related processes have evidence that shows their relevant qualifications. This includes knowledge not only of security, but also for the use of any security-related standards (for example, coding standards), techniques (for example, best practices), and tools (for example, static analysis tools). While security awareness training is vital for everyone involved in the secure product life-cycle, it is generally insufficient for personnel involved in security requirements analysis, design reviews, etc. The security training is role-specific and can vary in formality from informal to formal. Similarly, the personnel assigned to security-related processes have experience (for example, past projects and number of years) that matches the specific security tasks and their specific role."
                clause "5.6"
                page "22"
            sha256 "cf48d0c6293f940a8ff1a7217c5d5f8af565dc90b29d5918e55f3c7ad93ce1ad"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-5"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-5"
            parent_id null
            group_id "IEC-62443-4-1:2020/SM-5[p22]"
            seq 1
            normative true
            informative false
            text_normative "A process, that includes justification by documented security analysis, shall be employed to identify the parts of this document that are applicable to a selected product development project. Justification for scoping the level of compliance of a project to this document shall be subject to review and approval by personnel with the appropriate security expertise (see 5.6)."
            context_note null
            { context
                name "Process scoping"
                rationale "Examples include: a) The product does not include software therefore process requirements applicable to software are out of scope. b) The threat model indicates that the product does not have any external interfaces or sources of untrusted input (for example, a product with no external connections that can only be accessed in a room with high physical security). In this case, for example, the requirement for fuzz testing external interfaces would not apply."
                clause "5.7"
                page "22"
            sha256 "c75f7fa36ec409ba1f3bfa1f5adb2d7d0d839420d94ec798c16d201bf6ab3ecb"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-6"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-6"
            parent_id null
            group_id "IEC-62443-4-1:2020/SM-6[p23]"
            seq 1
            normative true
            informative false
            text_normative "A process shall be employed to provide an integrity verification mechanism for all scripts, executables and other important files included in a product."
            context_note null
            { context
                name "File integrity"
                rationale "This process is required to ensure that product users can verify that executables, scripts, and other important files received from the supplier have not been altered. Common methods of meeting this requirement include cryptographic hashes and digital signatures (which also provide proof of origin)."
                clause "5.8"
                page "23"
            sha256 "cafdb31a249e3060fe4397d3413095528befa585276851d74ab6ac383693b14c"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-7"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-7"
            parent_id null
            group_id "IEC-62443-4-1:2020/SM-7[p23]"
            seq 1
            normative true
            informative false
            text_normative "A process that includes procedural and technical controls shall be employed for protecting the product during development, production and delivery. This includes protecting the product or product update (patch) during design, implementation, testing and release."
            context_note null
            { context
                name "Development environment security"
                rationale "This process is required to ensure that the product has not been altered or disclosed in any way during the development process, unless allowed by policy. Loss of integrity of any aspect of the development environment (e. g., the product design and implementation, code signing in frastructure, and software build environment) can negatively affect fielded versions of the product without the knowledge of the organization or its customers. For example, the ability of an attacker to insert an infection in the binary code of a product could lead to that infection being distributed as part of the released product. Having this process means that the product supplier has mechanisms in place to protect the integrity of design documents, the product implementation (for example, code and user manuals), configuration settings and private keys used for signing software images. For example, application of ISO/IEC 27001 [20] and ISO/IEC 27002 [19] policies and controls can reduce the likelihood of unauthorized access to source code or corruption of source code. They can also reduce the likelihood of unauthorized disclosure of product designs and test results that could be used to compromise fielded versions of the product. Items to specially safeguard include authenticators (e. g., passwords, access control lists, code signing certificates and exploit records collected during defect management)."
                clause "5.9"
                page "23"
            sha256 "e9b795e5806cca9c468c36f4477ed688993cf5974744a41bb59c4f8025f5ed1d"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-8"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-8"
            parent_id null
            group_id "IEC-62443-4-1:2020/SM-8[p23]"
            seq 1
            normative true
            informative false
            text_normative "The supplier shall have procedural and technical controls in place to protect private keys used for code signing from unauthorized access or modification."
            context_note null
            { context
                name "Controls for private keys"
                rationale "Private keys are the root of trust, so they require extra protection to ensure that they are not stolen or modified."
                clause "5.10"
                page "23"
            sha256 "bf6aeec129eaa8e17efaee7e37b67c9768956782f41043ee03a964428a82d752"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-9"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-9"
            parent_id null
            group_id "IEC-62443-4-1:2020/SM-9[p23]"
            seq 1
            normative true
            informative false
            text_normative "A process shall be employed to identify and manage the security risks of all externally provided components used within the product."
            context_note null
            { context
                name "Security requirements for externally provided components"
                rationale "This process is required to ensure that supply chain security is addressed for equivalent security practices, latest security updates, security deployment guides and the supplier’s ability to respond if a vulnerability is discovered. Supply chain security applies to components which are included within the product and are provided external to the development team responsible for a given product, but do not meet the definition described in 5.12. The security provided by such third-party components is directly related to their role in the product's secure design and defense in depth strategy (see Clause 7). Having this process means that the product supplier is able to identify when one or more of the following characteristics apply to the use of third-party components in the product: a) the degree to which the component aligns with the product’s security context (see Clause 6) and defense in depth strategy (see Clause 7); b) the degree of rigor applied to the component’s implementation (see Clause 8); c) the degree of security verification and validation performed on the component by the product supplier or the component supplier (see Clause 9); d) how to receive and/or monitor notifications about security-related issues from the component supplier (see Clause 10) and patches (see Clause 11); and e) the sufficiency of security documentation for the component (see Clause 12). f) the degree that the software is currently supported by the supplier or open source community. Examples of work items that would satisfy some elements of this requirement include: – identifying known vulnerabilities in specific versions of open source software components and updating the version of the open source components to the version that fixes the vulnerability; – evaluating the compliance of vendors of commercial off the shelf (COTS) components to this document or a similar SDL standard; and – employing compensating mechanisms for known vulnerabilities on COTS or open source components (such as static code analysis). It is recommended that there be an inventory of components from third party suppliers in order to facilitate defect management (see Clause 6). For related supply chain requirements, see ISO/IEC 27036-3 [21 ]."
                clause "5.11"
                page "23"
            sha256 "e0c448d7e9d62083816c087395d5839922cd814358084ed849876a71fb8f503f"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-10"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-10"
            parent_id null
            group_id "IEC-62443-4-1:2020/SM-10[p24]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed to ensure that product development life-cycle processes for components from a third-party supplier conform to the requirements used in this document when they meet the following criteria:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "4251080a9d32209af80141d39b1b0daf0fca023b377326ea6bac7b2a6f62e93f"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-10/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-10"
            parent_id "IEC-62443-4-1:2020/SM-10"
            group_id "IEC-62443-4-1:2020/SM-10[p24]"
            seq 2
            normative true
            text_normative "A process shall be employed to ensure that product development life-cycle processes for components from a third-party supplier conform to the requirements used in this document when they meet the following criteria: a) the components are developed specifically for a single supplier for a specific purpose; and"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SM-10"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Custom developed components from third-party suppliers"
                rationale "This requirement applies when a supplier subcontracts a third-party to specifically develop a component for them which can have security implications. Threat modelling is usually used to determine which components will have security implications."
                clause "5.12"
                page "24"
            sha256 "e326d022e529450f04311f7890cb9799f13f05b126137cf8f84511876f871dff"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-10/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-10"
            parent_id "IEC-62443-4-1:2020/SM-10"
            group_id "IEC-62443-4-1:2020/SM-10[p24]"
            seq 3
            normative true
            text_normative "A process shall be employed to ensure that product development life-cycle processes for components from a third-party supplier conform to the requirements used in this document when they meet the following criteria: b) the components can have an impact on security."
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SM-10"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Custom developed components from third-party suppliers"
                rationale "This requirement applies when a supplier subcontracts a third-party to specifically develop a component for them which can have security implications. Threat modelling is usually used to determine which components will have security implications."
                clause "5.12"
                page "24"
            sha256 "ebf9b474799516e8fbbfdac34a3916f70f4cb57c552d729058b15f6f26f13b91"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-11"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-11"
            parent_id null
            group_id "IEC-62443-4-1:2020/SM-11[p24]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed for verifying that a product or a patch is not released until its security related issues have been addressed and tracked to closure (see 10.5, DM-4: Addressing security related issues). This includes issues associated with:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "5f228705c6816d3c3c21c32a000a8675f6ac57fb59a4b37b9429ee0834fde56b"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-11/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-11"
            parent_id "IEC-62443-4-1:2020/SM-11"
            group_id "IEC-62443-4-1:2020/SM-11[p24]"
            seq 2
            normative true
            text_normative "A process shall be employed for verifying that a product or a patch is not released until its security related issues have been addressed and tracked to closure (see 10.5, DM-4: Addressing security related issues). This includes issues associated with: a) requirements (see Clause 6, Practice 2 – Specification of security requirements);"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SM-11"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Assessing and addressing security-related issues"
                rationale "This process is required to ensure that the product is not released with security-related issues that have been discovered and whose resolution is not complete and whose severity as defined by a vulnerability scoring system, such as the Common vulnerability Scoring System (CVSS), is calculated as above the residual risk acceptable within the product security context. Having this process means that any security-related issue identified during the development and support of a product is documented and addressed to allow the effective security of the product to be determined prior to product release. This would include issues found in all phases such as design review, code review, verification and validation testing, use of static analysis tools, etc."
                clause "5.13"
                page "24"
            sha256 "9964bbc28459cb29b192a8ba367f6484350d26fdd2e84d22b0720e109bdf6354"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-11/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-11"
            parent_id "IEC-62443-4-1:2020/SM-11"
            group_id "IEC-62443-4-1:2020/SM-11[p24]"
            seq 3
            normative true
            text_normative "A process shall be employed for verifying that a product or a patch is not released until its security related issues have been addressed and tracked to closure (see 10.5, DM-4: Addressing security related issues). This includes issues associated with: b) secure by design (see Clause 7, Practice 3 – Secure by design);"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SM-11"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Assessing and addressing security-related issues"
                rationale "This process is required to ensure that the product is not released with security-related issues that have been discovered and whose resolution is not complete and whose severity as defined by a vulnerability scoring system, such as the Common vulnerability Scoring System (CVSS), is calculated as above the residual risk acceptable within the product security context. Having this process means that any security-related issue identified during the development and support of a product is documented and addressed to allow the effective security of the product to be determined prior to product release. This would include issues found in all phases such as design review, code review, verification and validation testing, use of static analysis tools, etc."
                clause "5.13"
                page "24"
            sha256 "6196f61af004e8329f0b778651a50a27a5c9e83dbd618acffa8b63f1876549fe"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-11/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-11"
            parent_id "IEC-62443-4-1:2020/SM-11"
            group_id "IEC-62443-4-1:2020/SM-11[p24]"
            seq 4
            normative true
            text_normative "A process shall be employed for verifying that a product or a patch is not released until its security related issues have been addressed and tracked to closure (see 10.5, DM-4: Addressing security related issues). This includes issues associated with: c) implementation (see Clause 8, Practice 4 – Secure implementation);"
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/SM-11"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Assessing and addressing security-related issues"
                rationale "This process is required to ensure that the product is not released with security-related issues that have been discovered and whose resolution is not complete and whose severity as defined by a vulnerability scoring system, such as the Common vulnerability Scoring System (CVSS), is calculated as above the residual risk acceptable within the product security context. Having this process means that any security-related issue identified during the development and support of a product is documented and addressed to allow the effective security of the product to be determined prior to product release. This would include issues found in all phases such as design review, code review, verification and validation testing, use of static analysis tools, etc."
                clause "5.13"
                page "24"
            sha256 "ac38aabc049345ea8b55598463cb9f8d5fa8082e8519a5528db925a80c05c398"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-11/d"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-11"
            parent_id "IEC-62443-4-1:2020/SM-11"
            group_id "IEC-62443-4-1:2020/SM-11[p24]"
            seq 5
            normative true
            text_normative "A process shall be employed for verifying that a product or a patch is not released until its security related issues have been addressed and tracked to closure (see 10.5, DM-4: Addressing security related issues). This includes issues associated with: d) verification/validation (see Clause 9, Practice 5 – Security verification and validation testing);"
            ordinal "d"
            inherits_from "IEC-62443-4-1:2020/SM-11"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Assessing and addressing security-related issues"
                rationale "This process is required to ensure that the product is not released with security-related issues that have been discovered and whose resolution is not complete and whose severity as defined by a vulnerability scoring system, such as the Common vulnerability Scoring System (CVSS), is calculated as above the residual risk acceptable within the product security context. Having this process means that any security-related issue identified during the development and support of a product is documented and addressed to allow the effective security of the product to be determined prior to product release. This would include issues found in all phases such as design review, code review, verification and validation testing, use of static analysis tools, etc."
                clause "5.13"
                page "24"
            sha256 "6fba09363a6c8df82930f8134c02c9294efff65932d806fdc5e57766dda694f7"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-11/e"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-11"
            parent_id "IEC-62443-4-1:2020/SM-11"
            group_id "IEC-62443-4-1:2020/SM-11[p24]"
            seq 6
            normative true
            text_normative "A process shall be employed for verifying that a product or a patch is not released until its security related issues have been addressed and tracked to closure (see 10.5, DM-4: Addressing security related issues). This includes issues associated with: e) defect management (see Clause 10, Practice 6 – Management of security-related issues)."
            ordinal "e"
            inherits_from "IEC-62443-4-1:2020/SM-11"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Assessing and addressing security-related issues"
                rationale "This process is required to ensure that the product is not released with security-related issues that have been discovered and whose resolution is not complete and whose severity as defined by a vulnerability scoring system, such as the Common vulnerability Scoring System (CVSS), is calculated as above the residual risk acceptable within the product security context. Having this process means that any security-related issue identified during the development and support of a product is documented and addressed to allow the effective security of the product to be determined prior to product release. This would include issues found in all phases such as design review, code review, verification and validation testing, use of static analysis tools, etc."
                clause "5.13"
                page "24"
            sha256 "c5a0fec20e3e07c601f1cfa64e495e3efcfeaab3ac6e99e4f02b81ecb0c9ce9a"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-12"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-12"
            parent_id null
            group_id "IEC-62443-4-1:2020/SM-12[p24]"
            seq 1
            normative true
            informative false
            text_normative "A process shall be employed for verifying that, prior to product release, all applicable security-related processes required by this specification (see 5.7)  have been completed with records documenting the completion of each process."
            context_note null
            { context
                name "Process verification"
                rationale "This process is required to ensure that key security practices are being executed."
                clause "5.14"
                page "24"
            sha256 "c3fba3070c32b0e0bf676ba8f1e2f870392c4932c12c245eb902b72c2168cea7"
        { 
            chunk_id "IEC-62443-4-1:2020/SM-13"
            doc_id "IEC-62443-4-1:2020"
            section_path "SM-13"
            parent_id null
            group_id "IEC-62443-4-1:2020/SM-13[p25]"
            seq 1
            normative true
            informative false
            text_normative "A process shall be employed for continuously improving the SDL. This process shall include the analysis of security defects in component/subsystem/system technologies that escape to the field."
            context_note null
            { context
                name "Continuous improvement"
                rationale "This process is required to ensure that product suppliers improve the rigor of their SDL over time. New security threats are constantly being identified and exploited by attackers so it is important product suppliers help compensate for this by continuously improving their SDL. Continuous improvement is a well-established and proven method of improving product quality. Since product security issues are a type of quality issue, conti nuous improvement methodologies are applicable to an SDL. See Annex A for potential metrics related to SDL effectiveness and improvement. Having this process means that the supplier has a procedure in place to review the process and security defects that escape to the field on a periodic basis and that this procedure includes making improvements to the process as a result of these reviews. Some examples of activities that would help improve a product supplier’s SDL are included in Table 2. Ultimately it is up to suppliers to implement their own means of continuously improving their SDL. Table 2 – Example SDL continuous improvement activities Activity SDL / security benefits Use a known security vulnerability database to help improve the threat model. For example, if the threat model indicates that the product uses the TLS protocol for transport security, review known vulnerabilities in TLS implementations and ensure these are mitigated in the design. Improves the threat model by keeping it current with actual security issues observed in the field. Attend external security / SDL conferences or participate in industry SDL groups such as OWASP Helps a product supplier stay current with emerging threats and SDL best practices. Conduct internal SDL conferences or sessions for sharing of SDL expertise and best practices within the product supplier’s organization. Improve the overall SDL expertise of the product supplier’ s employees and hel p them stay current with emerg ing security threats and SDL best practices. Perform SDL root cause analysis for security vulnerabilities found externally in a supplier’ s product and identify p l us implement correcti ve action. Al l SDL practices shou ld be in scope for this analysis. Root cause analysis and corrective action is a well-established method for improving product quality. Since security issues are quality issues it works well for an SDL too. Combine manual penetration testing with automated tool base testing or use multiple similar security testing tools for SVV-3 vulnerability testing. Improves test coverage relative to using a single automated tool. This becomes especially valuable after the existing automated tool stops finding new vulnerabilities. Create fuzzing tools for any protocols for which tools are not available. Help avoid the scenario where an attacker develops its own fuzzing tool and uses it to find and exploit security vulnerabilities in a product. Train and use dedicated security testing experts for SVV-3 vulnerability testing. Since security vulnerability requires extensive and constantly growing expertise, developing and using dedicated experts will improve security test coverage."
                clause "5.15"
                page "25"
            sha256 "75a129da9c47b44e2b19fac7d846439e6d7d55bd72fab3618bf84d418da181cc"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-1"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-1"
            parent_id null
            group_id "IEC-62443-4-1:2020/SR-1[p24]"
            seq 1
            normative true
            informative false
            text_normative "A process shall be employed to ensure that the intended product security context is documented."
            context_note null
            { context
                name "Product security context"
                rationale "This process is required to ensure that the minimum requirements of the environment and the assumptions about that environment are documented in order to ach ieve the security level for which the product was designed. The purpose of defin ing this in formation is so that both the developers of the product and the product users have the same understand ing about how the product is intended to be used. this will he lp the developers make appropriate design decis ions and the users to use the product as it was intended. security context could include: a) l ocation in the network; b) physical or cyber security provided by the environment where the product will be deployed; c) isolation (from a network perspective); and d) if known, potential impact to the environment (for example, loss of life, injury, loss of production, etc.). For example, it is important to document whether physical security is required. If no physical security is expected to be present, then that may add a number of related requirements such as not allowing push button configuration on the product. Another example is if the product is expected to be protected by a user supplied firewall that connects it to the plant network, the product would typically not require a firewall of its own. Documenting these external security features for the product (its security context) allows developers to design a defense in depth strategy that complements this security context and testers to validate and verify the security of a product in an environment similar to how it shou ld be deployed. Having this process means that the deployment environment in which the product is intended to be used is correctly represented in all processes involved in the development and testing of this product and are documented."
                clause "6.2"
                page "24"
            sha256 "2802d3ffb6746ec7d67c5cf2b550717eef11884f2243af5bb01f03d128838b3b"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-2"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-2"
            parent_id null
            group_id "IEC-62443-4-1:2020/SR-2[p24]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed to ensure that all products shall have a threat model specific to the current development scope of the product with the following characteristics (where applicable):"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "4a05546489bce1ea831b2089cb752950c2fc83deecd5d29bb9e84492511f5926"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-2/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-2"
            parent_id "IEC-62443-4-1:2020/SR-2"
            group_id "IEC-62443-4-1:2020/SR-2[p24]"
            seq 2
            normative true
            text_normative "A process shall be employed to ensure that all products shall have a threat model specific to the current development scope of the product with the following characteristics (where applicable): a) correct flow of categorized information throughout the system;"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SR-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Threat model"
                rationale "This process is required to ensure that security threats for the product are identified, validated, documented, addressed and tested by the product's project team according to the defense in depth strategy. Having this process means that a threat model for the product is defined and maintained throughout the product life-cycle (for example, as a result of changing threats or updates to the defense in depth strategy) that identifies and describes threats that can occur within the product security context, and against which product is expected to defend itself. External dependencies are external components or systems that the product depends upon for security. As an example, a product could depend on power for physical security. Or a product could depend on the session management of a web server to be secure. In these examples, failure of the external dependency could lead to a security vulnerability in the product, so mitigations need to be put in place to minimize the chances of such failures. So for the power example, the mitigation could be the installation of an un interruptable power supply (UPS). In the example of a web server, security should be considered when choosing a web server, and if a secure web server cannot be found, then other compensating measures need to be considered. Third-party code is an external dependency that can present significant challenges in determining where the threats can occur. If deeply embedded there might not be access to/from this code that crosses a trust boundary. If there is access to the trust boundary, a deeper inspection of the third-party code can be needed."
                clause "6.3"
                page "24"
            sha256 "3bdab4dbc835a2d908c8842d6a3b777dd00c7d1a581729f6c2fdacf395a9eb7e"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-2/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-2"
            parent_id "IEC-62443-4-1:2020/SR-2"
            group_id "IEC-62443-4-1:2020/SR-2[p24]"
            seq 3
            normative true
            text_normative "A process shall be employed to ensure that all products shall have a threat model specific to the current development scope of the product with the following characteristics (where applicable): b) trust boundaries;"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SR-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Threat model"
                rationale "This process is required to ensure that security threats for the product are identified, validated, documented, addressed and tested by the product's project team according to the defense in depth strategy. Having this process means that a threat model for the product is defined and maintained throughout the product life-cycle (for example, as a result of changing threats or updates to the defense in depth strategy) that identifies and describes threats that can occur within the product security context, and against which product is expected to defend itself. External dependencies are external components or systems that the product depends upon for security. As an example, a product could depend on power for physical security. Or a product could depend on the session management of a web server to be secure. In these examples, failure of the external dependency could lead to a security vulnerability in the product, so mitigations need to be put in place to minimize the chances of such failures. So for the power example, the mitigation could be the installation of an un interruptable power supply (UPS). In the example of a web server, security should be considered when choosing a web server, and if a secure web server cannot be found, then other compensating measures need to be considered. Third-party code is an external dependency that can present significant challenges in determining where the threats can occur. If deeply embedded there might not be access to/from this code that crosses a trust boundary. If there is access to the trust boundary, a deeper inspection of the third-party code can be needed."
                clause "6.3"
                page "24"
            sha256 "5f61535104284eb0d590268f263fc03287bdba6e6418a57566a2fb0c8ff847b7"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-2/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-2"
            parent_id "IEC-62443-4-1:2020/SR-2"
            group_id "IEC-62443-4-1:2020/SR-2[p24]"
            seq 4
            normative true
            text_normative "A process shall be employed to ensure that all products shall have a threat model specific to the current development scope of the product with the following characteristics (where applicable): c) processes;"
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/SR-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Threat model"
                rationale "This process is required to ensure that security threats for the product are identified, validated, documented, addressed and tested by the product's project team according to the defense in depth strategy. Having this process means that a threat model for the product is defined and maintained throughout the product life-cycle (for example, as a result of changing threats or updates to the defense in depth strategy) that identifies and describes threats that can occur within the product security context, and against which product is expected to defend itself. External dependencies are external components or systems that the product depends upon for security. As an example, a product could depend on power for physical security. Or a product could depend on the session management of a web server to be secure. In these examples, failure of the external dependency could lead to a security vulnerability in the product, so mitigations need to be put in place to minimize the chances of such failures. So for the power example, the mitigation could be the installation of an un interruptable power supply (UPS). In the example of a web server, security should be considered when choosing a web server, and if a secure web server cannot be found, then other compensating measures need to be considered. Third-party code is an external dependency that can present significant challenges in determining where the threats can occur. If deeply embedded there might not be access to/from this code that crosses a trust boundary. If there is access to the trust boundary, a deeper inspection of the third-party code can be needed."
                clause "6.3"
                page "24"
            sha256 "f73ae2efc55137565b2eb404287104537afc9f78759f72446c6487a5012580fb"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-2/d"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-2"
            parent_id "IEC-62443-4-1:2020/SR-2"
            group_id "IEC-62443-4-1:2020/SR-2[p24]"
            seq 5
            normative true
            text_normative "A process shall be employed to ensure that all products shall have a threat model specific to the current development scope of the product with the following characteristics (where applicable): d) data stores;"
            ordinal "d"
            inherits_from "IEC-62443-4-1:2020/SR-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Threat model"
                rationale "This process is required to ensure that security threats for the product are identified, validated, documented, addressed and tested by the product's project team according to the defense in depth strategy. Having this process means that a threat model for the product is defined and maintained throughout the product life-cycle (for example, as a result of changing threats or updates to the defense in depth strategy) that identifies and describes threats that can occur within the product security context, and against which product is expected to defend itself. External dependencies are external components or systems that the product depends upon for security. As an example, a product could depend on power for physical security. Or a product could depend on the session management of a web server to be secure. In these examples, failure of the external dependency could lead to a security vulnerability in the product, so mitigations need to be put in place to minimize the chances of such failures. So for the power example, the mitigation could be the installation of an un interruptable power supply (UPS). In the example of a web server, security should be considered when choosing a web server, and if a secure web server cannot be found, then other compensating measures need to be considered. Third-party code is an external dependency that can present significant challenges in determining where the threats can occur. If deeply embedded there might not be access to/from this code that crosses a trust boundary. If there is access to the trust boundary, a deeper inspection of the third-party code can be needed."
                clause "6.3"
                page "24"
            sha256 "070c4643ea014db69bbae772138a08c813c0923c442b9e20fb9b4afca5e8339b"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-2/e"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-2"
            parent_id "IEC-62443-4-1:2020/SR-2"
            group_id "IEC-62443-4-1:2020/SR-2[p24]"
            seq 6
            normative true
            text_normative "A process shall be employed to ensure that all products shall have a threat model specific to the current development scope of the product with the following characteristics (where applicable): e) interacting external entities;"
            ordinal "e"
            inherits_from "IEC-62443-4-1:2020/SR-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Threat model"
                rationale "This process is required to ensure that security threats for the product are identified, validated, documented, addressed and tested by the product's project team according to the defense in depth strategy. Having this process means that a threat model for the product is defined and maintained throughout the product life-cycle (for example, as a result of changing threats or updates to the defense in depth strategy) that identifies and describes threats that can occur within the product security context, and against which product is expected to defend itself. External dependencies are external components or systems that the product depends upon for security. As an example, a product could depend on power for physical security. Or a product could depend on the session management of a web server to be secure. In these examples, failure of the external dependency could lead to a security vulnerability in the product, so mitigations need to be put in place to minimize the chances of such failures. So for the power example, the mitigation could be the installation of an un interruptable power supply (UPS). In the example of a web server, security should be considered when choosing a web server, and if a secure web server cannot be found, then other compensating measures need to be considered. Third-party code is an external dependency that can present significant challenges in determining where the threats can occur. If deeply embedded there might not be access to/from this code that crosses a trust boundary. If there is access to the trust boundary, a deeper inspection of the third-party code can be needed."
                clause "6.3"
                page "24"
            sha256 "5093d30c3607101a87e558c144b36c708e2a0a3b1763ec8302626439b48f3b0f"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-2/f"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-2"
            parent_id "IEC-62443-4-1:2020/SR-2"
            group_id "IEC-62443-4-1:2020/SR-2[p24]"
            seq 7
            normative true
            text_normative "A process shall be employed to ensure that all products shall have a threat model specific to the current development scope of the product with the following characteristics (where applicable): f) internal and external communication protocols implemented in the product;"
            ordinal "f"
            inherits_from "IEC-62443-4-1:2020/SR-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Threat model"
                rationale "This process is required to ensure that security threats for the product are identified, validated, documented, addressed and tested by the product's project team according to the defense in depth strategy. Having this process means that a threat model for the product is defined and maintained throughout the product life-cycle (for example, as a result of changing threats or updates to the defense in depth strategy) that identifies and describes threats that can occur within the product security context, and against which product is expected to defend itself. External dependencies are external components or systems that the product depends upon for security. As an example, a product could depend on power for physical security. Or a product could depend on the session management of a web server to be secure. In these examples, failure of the external dependency could lead to a security vulnerability in the product, so mitigations need to be put in place to minimize the chances of such failures. So for the power example, the mitigation could be the installation of an un interruptable power supply (UPS). In the example of a web server, security should be considered when choosing a web server, and if a secure web server cannot be found, then other compensating measures need to be considered. Third-party code is an external dependency that can present significant challenges in determining where the threats can occur. If deeply embedded there might not be access to/from this code that crosses a trust boundary. If there is access to the trust boundary, a deeper inspection of the third-party code can be needed."
                clause "6.3"
                page "24"
            sha256 "d9778a57a8cbd5514af361b0ed05d8a40c76b1c14a0e0cd1fecd084b772973bc"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-2/g"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-2"
            parent_id "IEC-62443-4-1:2020/SR-2"
            group_id "IEC-62443-4-1:2020/SR-2[p24]"
            seq 8
            normative true
            text_normative "A process shall be employed to ensure that all products shall have a threat model specific to the current development scope of the product with the following characteristics (where applicable): g) externally accessible physical ports including debug ports;"
            ordinal "g"
            inherits_from "IEC-62443-4-1:2020/SR-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Threat model"
                rationale "This process is required to ensure that security threats for the product are identified, validated, documented, addressed and tested by the product's project team according to the defense in depth strategy. Having this process means that a threat model for the product is defined and maintained throughout the product life-cycle (for example, as a result of changing threats or updates to the defense in depth strategy) that identifies and describes threats that can occur within the product security context, and against which product is expected to defend itself. External dependencies are external components or systems that the product depends upon for security. As an example, a product could depend on power for physical security. Or a product could depend on the session management of a web server to be secure. In these examples, failure of the external dependency could lead to a security vulnerability in the product, so mitigations need to be put in place to minimize the chances of such failures. So for the power example, the mitigation could be the installation of an un interruptable power supply (UPS). In the example of a web server, security should be considered when choosing a web server, and if a secure web server cannot be found, then other compensating measures need to be considered. Third-party code is an external dependency that can present significant challenges in determining where the threats can occur. If deeply embedded there might not be access to/from this code that crosses a trust boundary. If there is access to the trust boundary, a deeper inspection of the third-party code can be needed."
                clause "6.3"
                page "24"
            sha256 "82da41688e92b26940c0d20228fa8bb47d2db9bc824b81d36d2750728057115a"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-2/h"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-2"
            parent_id "IEC-62443-4-1:2020/SR-2"
            group_id "IEC-62443-4-1:2020/SR-2[p24]"
            seq 9
            normative true
            text_normative "A process shall be employed to ensure that all products shall have a threat model specific to the current development scope of the product with the following characteristics (where applicable): h) circuit board connections such as Joint Test Action Group (JTAG) connections or debug headers which might be used to attack the hardware;"
            ordinal "h"
            inherits_from "IEC-62443-4-1:2020/SR-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Threat model"
                rationale "This process is required to ensure that security threats for the product are identified, validated, documented, addressed and tested by the product's project team according to the defense in depth strategy. Having this process means that a threat model for the product is defined and maintained throughout the product life-cycle (for example, as a result of changing threats or updates to the defense in depth strategy) that identifies and describes threats that can occur within the product security context, and against which product is expected to defend itself. External dependencies are external components or systems that the product depends upon for security. As an example, a product could depend on power for physical security. Or a product could depend on the session management of a web server to be secure. In these examples, failure of the external dependency could lead to a security vulnerability in the product, so mitigations need to be put in place to minimize the chances of such failures. So for the power example, the mitigation could be the installation of an un interruptable power supply (UPS). In the example of a web server, security should be considered when choosing a web server, and if a secure web server cannot be found, then other compensating measures need to be considered. Third-party code is an external dependency that can present significant challenges in determining where the threats can occur. If deeply embedded there might not be access to/from this code that crosses a trust boundary. If there is access to the trust boundary, a deeper inspection of the third-party code can be needed."
                clause "6.3"
                page "24"
            sha256 "190715b4f679d97279163e2a2bf5122ded6b44065c8d17d90dde7d4a6ae3f8cc"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-2/i"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-2"
            parent_id "IEC-62443-4-1:2020/SR-2"
            group_id "IEC-62443-4-1:2020/SR-2[p24]"
            seq 10
            normative true
            text_normative "A process shall be employed to ensure that all products shall have a threat model specific to the current development scope of the product with the following characteristics (where applicable): i) potential attack vectors including attacks on the hardware, if applicable;"
            ordinal "i"
            inherits_from "IEC-62443-4-1:2020/SR-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Threat model"
                rationale "This process is required to ensure that security threats for the product are identified, validated, documented, addressed and tested by the product's project team according to the defense in depth strategy. Having this process means that a threat model for the product is defined and maintained throughout the product life-cycle (for example, as a result of changing threats or updates to the defense in depth strategy) that identifies and describes threats that can occur within the product security context, and against which product is expected to defend itself. External dependencies are external components or systems that the product depends upon for security. As an example, a product could depend on power for physical security. Or a product could depend on the session management of a web server to be secure. In these examples, failure of the external dependency could lead to a security vulnerability in the product, so mitigations need to be put in place to minimize the chances of such failures. So for the power example, the mitigation could be the installation of an un interruptable power supply (UPS). In the example of a web server, security should be considered when choosing a web server, and if a secure web server cannot be found, then other compensating measures need to be considered. Third-party code is an external dependency that can present significant challenges in determining where the threats can occur. If deeply embedded there might not be access to/from this code that crosses a trust boundary. If there is access to the trust boundary, a deeper inspection of the third-party code can be needed."
                clause "6.3"
                page "24"
            sha256 "17304e515ea88ca8cb31d8cbf6ed7dbb85d0a98b86732537790d02504ac8d860"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-2/j"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-2"
            parent_id "IEC-62443-4-1:2020/SR-2"
            group_id "IEC-62443-4-1:2020/SR-2[p24]"
            seq 11
            normative true
            text_normative "A process shall be employed to ensure that all products shall have a threat model specific to the current development scope of the product with the following characteristics (where applicable): j) potential threats and their severity as defined by a vulnerability scoring system (for example, CVSS);"
            ordinal "j"
            inherits_from "IEC-62443-4-1:2020/SR-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Threat model"
                rationale "This process is required to ensure that security threats for the product are identified, validated, documented, addressed and tested by the product's project team according to the defense in depth strategy. Having this process means that a threat model for the product is defined and maintained throughout the product life-cycle (for example, as a result of changing threats or updates to the defense in depth strategy) that identifies and describes threats that can occur within the product security context, and against which product is expected to defend itself. External dependencies are external components or systems that the product depends upon for security. As an example, a product could depend on power for physical security. Or a product could depend on the session management of a web server to be secure. In these examples, failure of the external dependency could lead to a security vulnerability in the product, so mitigations need to be put in place to minimize the chances of such failures. So for the power example, the mitigation could be the installation of an un interruptable power supply (UPS). In the example of a web server, security should be considered when choosing a web server, and if a secure web server cannot be found, then other compensating measures need to be considered. Third-party code is an external dependency that can present significant challenges in determining where the threats can occur. If deeply embedded there might not be access to/from this code that crosses a trust boundary. If there is access to the trust boundary, a deeper inspection of the third-party code can be needed."
                clause "6.3"
                page "24"
            sha256 "79c00cfa5a3e79bc6bcbda05f515d9efb2136f097c20cc0403474ccc0739f36f"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-2/k"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-2"
            parent_id "IEC-62443-4-1:2020/SR-2"
            group_id "IEC-62443-4-1:2020/SR-2[p24]"
            seq 12
            normative true
            text_normative "A process shall be employed to ensure that all products shall have a threat model specific to the current development scope of the product with the following characteristics (where applicable): k) mitigations and/or dispositions for each threat;"
            ordinal "k"
            inherits_from "IEC-62443-4-1:2020/SR-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Threat model"
                rationale "This process is required to ensure that security threats for the product are identified, validated, documented, addressed and tested by the product's project team according to the defense in depth strategy. Having this process means that a threat model for the product is defined and maintained throughout the product life-cycle (for example, as a result of changing threats or updates to the defense in depth strategy) that identifies and describes threats that can occur within the product security context, and against which product is expected to defend itself. External dependencies are external components or systems that the product depends upon for security. As an example, a product could depend on power for physical security. Or a product could depend on the session management of a web server to be secure. In these examples, failure of the external dependency could lead to a security vulnerability in the product, so mitigations need to be put in place to minimize the chances of such failures. So for the power example, the mitigation could be the installation of an un interruptable power supply (UPS). In the example of a web server, security should be considered when choosing a web server, and if a secure web server cannot be found, then other compensating measures need to be considered. Third-party code is an external dependency that can present significant challenges in determining where the threats can occur. If deeply embedded there might not be access to/from this code that crosses a trust boundary. If there is access to the trust boundary, a deeper inspection of the third-party code can be needed."
                clause "6.3"
                page "24"
            sha256 "043f82a576cdfadd3af0c0f5f0d3e1d0a643d1c1c84a18ec490c9db31526933e"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-2/l"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-2"
            parent_id "IEC-62443-4-1:2020/SR-2"
            group_id "IEC-62443-4-1:2020/SR-2[p24]"
            seq 13
            normative true
            text_normative "A process shall be employed to ensure that all products shall have a threat model specific to the current development scope of the product with the following characteristics (where applicable): l) security-related issues identified; and"
            ordinal "l"
            inherits_from "IEC-62443-4-1:2020/SR-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Threat model"
                rationale "This process is required to ensure that security threats for the product are identified, validated, documented, addressed and tested by the product's project team according to the defense in depth strategy. Having this process means that a threat model for the product is defined and maintained throughout the product life-cycle (for example, as a result of changing threats or updates to the defense in depth strategy) that identifies and describes threats that can occur within the product security context, and against which product is expected to defend itself. External dependencies are external components or systems that the product depends upon for security. As an example, a product could depend on power for physical security. Or a product could depend on the session management of a web server to be secure. In these examples, failure of the external dependency could lead to a security vulnerability in the product, so mitigations need to be put in place to minimize the chances of such failures. So for the power example, the mitigation could be the installation of an un interruptable power supply (UPS). In the example of a web server, security should be considered when choosing a web server, and if a secure web server cannot be found, then other compensating measures need to be considered. Third-party code is an external dependency that can present significant challenges in determining where the threats can occur. If deeply embedded there might not be access to/from this code that crosses a trust boundary. If there is access to the trust boundary, a deeper inspection of the third-party code can be needed."
                clause "6.3"
                page "24"
            sha256 "09b2065798fb8f414e6cfcc393a12c875f6685362b0031e057116396d3849510"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-2/m"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-2"
            parent_id "IEC-62443-4-1:2020/SR-2"
            group_id "IEC-62443-4-1:2020/SR-2[p24]"
            seq 14
            normative true
            text_normative "A process shall be employed to ensure that all products shall have a threat model specific to the current development scope of the product with the following characteristics (where applicable): m) external dependencies in the form of drivers or third-party applications (code that is not developed by the supplier) that are linked into the application."
            ordinal "m"
            inherits_from "IEC-62443-4-1:2020/SR-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Threat model"
                rationale "This process is required to ensure that security threats for the product are identified, validated, documented, addressed and tested by the product's project team according to the defense in depth strategy. Having this process means that a threat model for the product is defined and maintained throughout the product life-cycle (for example, as a result of changing threats or updates to the defense in depth strategy) that identifies and describes threats that can occur within the product security context, and against which product is expected to defend itself. External dependencies are external components or systems that the product depends upon for security. As an example, a product could depend on power for physical security. Or a product could depend on the session management of a web server to be secure. In these examples, failure of the external dependency could lead to a security vulnerability in the product, so mitigations need to be put in place to minimize the chances of such failures. So for the power example, the mitigation could be the installation of an un interruptable power supply (UPS). In the example of a web server, security should be considered when choosing a web server, and if a secure web server cannot be found, then other compensating measures need to be considered. Third-party code is an external dependency that can present significant challenges in determining where the threats can occur. If deeply embedded there might not be access to/from this code that crosses a trust boundary. If there is access to the trust boundary, a deeper inspection of the third-party code can be needed."
                clause "6.3"
                page "24"
            sha256 "83f9bf63ca43bb7df481c2bdab3079b92ed3709ee0b02145b2b7265fb7517da1"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-3"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-3"
            parent_id null
            group_id "IEC-62443-4-1:2020/SR-3[p28]"
            seq 1
            normative true
            informative false
            text_normative "A process shall be employed for ensuring that security requirements are documented for the product/feature under development including requirements for security capabilities related to installation, operation, maintenance and decommissioning."
            context_note null
            { context
                name "Product security requirements"
                rationale "This process is required to ensure that security requirements specific to the product are defined. This includes both technical security requirements (for example, password complexity) and business-oriented security requirements (for example, sensitive data, user authorizations and separation of duties). Having this process means that the product supplier defines and documents all product security requirements that apply to the life-cycle of the product, including: a) security privileges required to install, operate, and maintain the product; b) security options, including removal of default passwords, used to install, configure, operate and mainta in the product; and c) security considerations/actions associated with removing the product from use (for example, removing sensi ti ve data)."
                clause "6.4"
                page "28"
            sha256 "a59b563a5b87086ece1bc62677845e2ffc2cd089483fccba7ca27ac3408ee923"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-4"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-4"
            parent_id null
            group_id "IEC-62443-4-1:2020/SR-4[p29]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed for ensuring that security requirements include the following information:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "3e11d845dd521c504d2ce4cf163a297c6c74b4236c69f7f827bb202c0ab996fd"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-4/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-4"
            parent_id "IEC-62443-4-1:2020/SR-4"
            group_id "IEC-62443-4-1:2020/SR-4[p29]"
            seq 2
            normative true
            text_normative "A process shall be employed for ensuring that security requirements include the following information: a) the scope and boundaries of the component or system, in general terms in both a physical and a logical way; and"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SR-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Product security requirements content"
                rationale "If the product is targeted to meet a certain security capability level, it is important to document this as a requirement because it implies that certain security capabilities need to be included in the product. Note that capability security levels and required security capabilities for products are defined in IEC 62443-4-2 [11] and IEC 62443-3-3 [10]."
                clause "6.5"
                page "29"
            sha256 "b2b7ddc269f8925a8e3bbd1225c3c273efc9130c00e827d0851d21c69baf5a03"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-4/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-4"
            parent_id "IEC-62443-4-1:2020/SR-4"
            group_id "IEC-62443-4-1:2020/SR-4[p29]"
            seq 3
            normative true
            text_normative "A process shall be employed for ensuring that security requirements include the following information: b) the required capability security level (SL-C) of the product."
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SR-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Product security requirements content"
                rationale "If the product is targeted to meet a certain security capability level, it is important to document this as a requirement because it implies that certain security capabilities need to be included in the product. Note that capability security levels and required security capabilities for products are defined in IEC 62443-4-2 [11] and IEC 62443-3-3 [10]."
                clause "6.5"
                page "29"
            sha256 "e6cb1fc4b5ca8cca63290c8fc757fd542e2798543812b207dfb0c2891a889013"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-5"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-5"
            parent_id null
            group_id "IEC-62443-4-1:2020/SR-5[p29]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed to ensure that security requirements are reviewed, updated as necessary and approved to ensure clarity, validity, alignment with the threat model (discussed in 6.3 SR-2: Threat model), and their ability to be verified. Each of the following representative disciplines shall participate in this process. Personnel may be assigned to more than one discipline except for testers, who shall remain independent."
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "ba837b30df636da115f852643110b435aaf367221bc73e7be61ada1ed3aac8e9"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-5/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-5"
            parent_id "IEC-62443-4-1:2020/SR-5"
            group_id "IEC-62443-4-1:2020/SR-5[p29]"
            seq 2
            normative true
            text_normative "A process shall be employed to ensure that security requirements are reviewed, updated as necessary and approved to ensure clarity, validity, alignment with the threat model (discussed in 6.3 SR-2: Threat model), and their ability to be verified. Each of the following representative disciplines shall participate in this process. Personnel may be assigned to more than one discipline except for testers, who shall remain independent. a) architects/developers (those who will implement the requirements);"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SR-5"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security requirements review"
                rationale "This process is required to ensure that security requirements are valid, understood and testable (or otherwise verifiable). Having this process means that the product supplier conducts reviews of all security requirements and revises/deletes those that are invalid or that are untestable/unverifiable."
                clause "6.6"
                page "29"
            sha256 "a0f4dc3d7710c0b535eb0eaae512efa7d62b874c0f7a7afed61ed82935c2e34e"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-5/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-5"
            parent_id "IEC-62443-4-1:2020/SR-5"
            group_id "IEC-62443-4-1:2020/SR-5[p29]"
            seq 3
            normative true
            text_normative "A process shall be employed to ensure that security requirements are reviewed, updated as necessary and approved to ensure clarity, validity, alignment with the threat model (discussed in 6.3 SR-2: Threat model), and their ability to be verified. Each of the following representative disciplines shall participate in this process. Personnel may be assigned to more than one discipline except for testers, who shall remain independent. b) testers (those who will validate that the requirements have been met);"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SR-5"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security requirements review"
                rationale "This process is required to ensure that security requirements are valid, understood and testable (or otherwise verifiable). Having this process means that the product supplier conducts reviews of all security requirements and revises/deletes those that are invalid or that are untestable/unverifiable."
                clause "6.6"
                page "29"
            sha256 "6ad449c5a7b02477d2591a5ad16ff6e07693055fde409346f22927d6ac6cb568"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-5/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-5"
            parent_id "IEC-62443-4-1:2020/SR-5"
            group_id "IEC-62443-4-1:2020/SR-5[p29]"
            seq 4
            normative true
            text_normative "A process shall be employed to ensure that security requirements are reviewed, updated as necessary and approved to ensure clarity, validity, alignment with the threat model (discussed in 6.3 SR-2: Threat model), and their ability to be verified. Each of the following representative disciplines shall participate in this process. Personnel may be assigned to more than one discipline except for testers, who shall remain independent. c) customer advocate (such as sales, marketing, product management or customer support); and"
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/SR-5"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security requirements review"
                rationale "This process is required to ensure that security requirements are valid, understood and testable (or otherwise verifiable). Having this process means that the product supplier conducts reviews of all security requirements and revises/deletes those that are invalid or that are untestable/unverifiable."
                clause "6.6"
                page "29"
            sha256 "1e8c71a3adfc031eddc774f734b4cab71e9875c28e745d03cbef3ef02dc6ebf0"
        { 
            chunk_id "IEC-62443-4-1:2020/SR-5/d"
            doc_id "IEC-62443-4-1:2020"
            section_path "SR-5"
            parent_id "IEC-62443-4-1:2020/SR-5"
            group_id "IEC-62443-4-1:2020/SR-5[p29]"
            seq 5
            normative true
            text_normative "A process shall be employed to ensure that security requirements are reviewed, updated as necessary and approved to ensure clarity, validity, alignment with the threat model (discussed in 6.3 SR-2: Threat model), and their ability to be verified. Each of the following representative disciplines shall participate in this process. Personnel may be assigned to more than one discipline except for testers, who shall remain independent. d) security advisor"
            ordinal "d"
            inherits_from "IEC-62443-4-1:2020/SR-5"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security requirements review"
                rationale "This process is required to ensure that security requirements are valid, understood and testable (or otherwise verifiable). Having this process means that the product supplier conducts reviews of all security requirements and revises/deletes those that are invalid or that are untestable/unverifiable."
                clause "6.6"
                page "29"
            sha256 "2eda13eeed0283209ec00902a5706c42498537b1b71cf8539f24c998cc5cdfcb"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-1"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-1"
            parent_id null
            group_id "IEC-62443-4-1:2020/SD-1[p30]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed for developing and documenting a secure design that identifies and characterizes each interface of the product, including physical and logical interfaces, to include:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "b46f64b2920832eebf6d452e524e9d4a17c29a554ca9c2cb8d059034bdd09b21"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-1/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-1"
            parent_id "IEC-62443-4-1:2020/SD-1"
            group_id "IEC-62443-4-1:2020/SD-1[p30]"
            seq 2
            normative true
            text_normative "A process shall be employed for developing and documenting a secure design that identifies and characterizes each interface of the product, including physical and logical interfaces, to include: a) an indication of whether the interface is externally accessible (by other products), or internally accessible (by other components of the product), or both;"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SD-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure design principles"
                rationale "This process is required to ensure that security for access to assets is comprehensively addressed from the perspective of external and internal interfaces of the product through which attacks can be mounted. Having this process means that interfaces of the product are identified and characterized by the interactions that take place over them (for example, data and control flows), the security mechanisms designed to protect them and the assets that can be compromised if not adequately protected. Interfaces include physical and wireless connections to networks (for example, Ethernet) and devices (for example, keyboards, monitors and USB/compact disc [CD]/digital versatile disc [DVD] media). Logical interfaces support data control flows (for example, application messaging) between product components and include mechanisms such as application programming interfaces (for example, structured queryl anguage [SQL]) and communications protocols (for example, the transmission control protocol [TCP]). Protection mechanisms include general hardening capabilities (for example, security policy settings), user access controls (for example, account management), and security event detection and reporting, among others. Viewing interfaces within the setting provided by the product security context allows the secure design to focus on the specific environment in which the product is expected to operate, including both protections offered by the product security context and vulnerabilities resulting from it (for example, where it can be open to attack). For an internal component of the design, the concept of the product security context is extended to include the security context provided by surround ing product components. For example, the product security context of an application program running on a workstation that is part of an industrial control system product includes the network(s) to which the workstation connects and the software environment of the workstation in which the application runs. Identifying threats, users, assets and trust boundaries associated withinterfaces specifies who is expected to use the interfaces, and indicates where threats and unknown subjects potentially can ga in access to the interface and the assets that can be accessed through it. This allows the reduction of the number of interfaces where possible and to provide the appropriate safeguards for the remaining interfaces and the assets that can be accessed through them. Identifying trust boundaries also supports future definition of zones and conduits (see IEC 62443-3-2 [9]), and thus is a primary component in the definition of the security architecture of the product. Sample data assets (resources) include: a) databases and database tables; b) configuration files; c) cryptographic key stores; d) access control lists (ACLs); e) registry keys; f) web pages (static and dynamic); g) audit logs; h) network sockets / network media; i) inter-process communications (IPC), services and remote procedure call (RPC) resources; j) any other files and directories; and k) any other memory resource. Based on analysis of the product security requirements, the product security context and trust boundary considerations, the design can be developed for interfaces that include the definition of user roles, privileges and authorization/access permissions required to use the interfaces as well as specific security capabilities (for example, authentication, encryption and logging) that provide additional safeguards. As part of the design of the defense in depth strategy, the expected use of compensating mechanisms and third-party hardware or software components will aid in the assessment of the adequacy of the defense in depth strategy (see 7.4). Finally, preparing documentation for the use of externally accessible interfaces (for example, by users and third-parties) reduces the potential for accidental misuse."
                clause "7.2"
                page "30"
            sha256 "f9f5bd800fb999d22bb86710c814c32612b745373f684f61cd672d640027cb25"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-1/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-1"
            parent_id "IEC-62443-4-1:2020/SD-1"
            group_id "IEC-62443-4-1:2020/SD-1[p30]"
            seq 3
            normative true
            text_normative "A process shall be employed for developing and documenting a secure design that identifies and characterizes each interface of the product, including physical and logical interfaces, to include: b) security implications of the product security context (see Clause 6, Practice 2 – Specification of security requirements) on the external interface;"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SD-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure design principles"
                rationale "This process is required to ensure that security for access to assets is comprehensively addressed from the perspective of external and internal interfaces of the product through which attacks can be mounted. Having this process means that interfaces of the product are identified and characterized by the interactions that take place over them (for example, data and control flows), the security mechanisms designed to protect them and the assets that can be compromised if not adequately protected. Interfaces include physical and wireless connections to networks (for example, Ethernet) and devices (for example, keyboards, monitors and USB/compact disc [CD]/digital versatile disc [DVD] media). Logical interfaces support data control flows (for example, application messaging) between product components and include mechanisms such as application programming interfaces (for example, structured queryl anguage [SQL]) and communications protocols (for example, the transmission control protocol [TCP]). Protection mechanisms include general hardening capabilities (for example, security policy settings), user access controls (for example, account management), and security event detection and reporting, among others. Viewing interfaces within the setting provided by the product security context allows the secure design to focus on the specific environment in which the product is expected to operate, including both protections offered by the product security context and vulnerabilities resulting from it (for example, where it can be open to attack). For an internal component of the design, the concept of the product security context is extended to include the security context provided by surround ing product components. For example, the product security context of an application program running on a workstation that is part of an industrial control system product includes the network(s) to which the workstation connects and the software environment of the workstation in which the application runs. Identifying threats, users, assets and trust boundaries associated withinterfaces specifies who is expected to use the interfaces, and indicates where threats and unknown subjects potentially can ga in access to the interface and the assets that can be accessed through it. This allows the reduction of the number of interfaces where possible and to provide the appropriate safeguards for the remaining interfaces and the assets that can be accessed through them. Identifying trust boundaries also supports future definition of zones and conduits (see IEC 62443-3-2 [9]), and thus is a primary component in the definition of the security architecture of the product. Sample data assets (resources) include: a) databases and database tables; b) configuration files; c) cryptographic key stores; d) access control lists (ACLs); e) registry keys; f) web pages (static and dynamic); g) audit logs; h) network sockets / network media; i) inter-process communications (IPC), services and remote procedure call (RPC) resources; j) any other files and directories; and k) any other memory resource. Based on analysis of the product security requirements, the product security context and trust boundary considerations, the design can be developed for interfaces that include the definition of user roles, privileges and authorization/access permissions required to use the interfaces as well as specific security capabilities (for example, authentication, encryption and logging) that provide additional safeguards. As part of the design of the defense in depth strategy, the expected use of compensating mechanisms and third-party hardware or software components will aid in the assessment of the adequacy of the defense in depth strategy (see 7.4). Finally, preparing documentation for the use of externally accessible interfaces (for example, by users and third-parties) reduces the potential for accidental misuse."
                clause "7.2"
                page "30"
            sha256 "8ab20c157ea568343e7c9e5aa7807800dcbd067fe3318357c81a9f034269d6b0"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-1/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-1"
            parent_id "IEC-62443-4-1:2020/SD-1"
            group_id "IEC-62443-4-1:2020/SD-1[p30]"
            seq 4
            normative true
            text_normative "A process shall be employed for developing and documenting a secure design that identifies and characterizes each interface of the product, including physical and logical interfaces, to include: c) potential users of the interface and the assets that can be accessed through it (directly or indirectly);"
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/SD-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure design principles"
                rationale "This process is required to ensure that security for access to assets is comprehensively addressed from the perspective of external and internal interfaces of the product through which attacks can be mounted. Having this process means that interfaces of the product are identified and characterized by the interactions that take place over them (for example, data and control flows), the security mechanisms designed to protect them and the assets that can be compromised if not adequately protected. Interfaces include physical and wireless connections to networks (for example, Ethernet) and devices (for example, keyboards, monitors and USB/compact disc [CD]/digital versatile disc [DVD] media). Logical interfaces support data control flows (for example, application messaging) between product components and include mechanisms such as application programming interfaces (for example, structured queryl anguage [SQL]) and communications protocols (for example, the transmission control protocol [TCP]). Protection mechanisms include general hardening capabilities (for example, security policy settings), user access controls (for example, account management), and security event detection and reporting, among others. Viewing interfaces within the setting provided by the product security context allows the secure design to focus on the specific environment in which the product is expected to operate, including both protections offered by the product security context and vulnerabilities resulting from it (for example, where it can be open to attack). For an internal component of the design, the concept of the product security context is extended to include the security context provided by surround ing product components. For example, the product security context of an application program running on a workstation that is part of an industrial control system product includes the network(s) to which the workstation connects and the software environment of the workstation in which the application runs. Identifying threats, users, assets and trust boundaries associated withinterfaces specifies who is expected to use the interfaces, and indicates where threats and unknown subjects potentially can ga in access to the interface and the assets that can be accessed through it. This allows the reduction of the number of interfaces where possible and to provide the appropriate safeguards for the remaining interfaces and the assets that can be accessed through them. Identifying trust boundaries also supports future definition of zones and conduits (see IEC 62443-3-2 [9]), and thus is a primary component in the definition of the security architecture of the product. Sample data assets (resources) include: a) databases and database tables; b) configuration files; c) cryptographic key stores; d) access control lists (ACLs); e) registry keys; f) web pages (static and dynamic); g) audit logs; h) network sockets / network media; i) inter-process communications (IPC), services and remote procedure call (RPC) resources; j) any other files and directories; and k) any other memory resource. Based on analysis of the product security requirements, the product security context and trust boundary considerations, the design can be developed for interfaces that include the definition of user roles, privileges and authorization/access permissions required to use the interfaces as well as specific security capabilities (for example, authentication, encryption and logging) that provide additional safeguards. As part of the design of the defense in depth strategy, the expected use of compensating mechanisms and third-party hardware or software components will aid in the assessment of the adequacy of the defense in depth strategy (see 7.4). Finally, preparing documentation for the use of externally accessible interfaces (for example, by users and third-parties) reduces the potential for accidental misuse."
                clause "7.2"
                page "30"
            sha256 "c47bc3385df5caf60a5a511c217240487004386dc5e9f7a46a36fcc3645df1ec"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-1/d"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-1"
            parent_id "IEC-62443-4-1:2020/SD-1"
            group_id "IEC-62443-4-1:2020/SD-1[p30]"
            seq 5
            normative true
            text_normative "A process shall be employed for developing and documenting a secure design that identifies and characterizes each interface of the product, including physical and logical interfaces, to include: d) a determination of whether access to the interface crosses a trust boundary;"
            ordinal "d"
            inherits_from "IEC-62443-4-1:2020/SD-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure design principles"
                rationale "This process is required to ensure that security for access to assets is comprehensively addressed from the perspective of external and internal interfaces of the product through which attacks can be mounted. Having this process means that interfaces of the product are identified and characterized by the interactions that take place over them (for example, data and control flows), the security mechanisms designed to protect them and the assets that can be compromised if not adequately protected. Interfaces include physical and wireless connections to networks (for example, Ethernet) and devices (for example, keyboards, monitors and USB/compact disc [CD]/digital versatile disc [DVD] media). Logical interfaces support data control flows (for example, application messaging) between product components and include mechanisms such as application programming interfaces (for example, structured queryl anguage [SQL]) and communications protocols (for example, the transmission control protocol [TCP]). Protection mechanisms include general hardening capabilities (for example, security policy settings), user access controls (for example, account management), and security event detection and reporting, among others. Viewing interfaces within the setting provided by the product security context allows the secure design to focus on the specific environment in which the product is expected to operate, including both protections offered by the product security context and vulnerabilities resulting from it (for example, where it can be open to attack). For an internal component of the design, the concept of the product security context is extended to include the security context provided by surround ing product components. For example, the product security context of an application program running on a workstation that is part of an industrial control system product includes the network(s) to which the workstation connects and the software environment of the workstation in which the application runs. Identifying threats, users, assets and trust boundaries associated withinterfaces specifies who is expected to use the interfaces, and indicates where threats and unknown subjects potentially can ga in access to the interface and the assets that can be accessed through it. This allows the reduction of the number of interfaces where possible and to provide the appropriate safeguards for the remaining interfaces and the assets that can be accessed through them. Identifying trust boundaries also supports future definition of zones and conduits (see IEC 62443-3-2 [9]), and thus is a primary component in the definition of the security architecture of the product. Sample data assets (resources) include: a) databases and database tables; b) configuration files; c) cryptographic key stores; d) access control lists (ACLs); e) registry keys; f) web pages (static and dynamic); g) audit logs; h) network sockets / network media; i) inter-process communications (IPC), services and remote procedure call (RPC) resources; j) any other files and directories; and k) any other memory resource. Based on analysis of the product security requirements, the product security context and trust boundary considerations, the design can be developed for interfaces that include the definition of user roles, privileges and authorization/access permissions required to use the interfaces as well as specific security capabilities (for example, authentication, encryption and logging) that provide additional safeguards. As part of the design of the defense in depth strategy, the expected use of compensating mechanisms and third-party hardware or software components will aid in the assessment of the adequacy of the defense in depth strategy (see 7.4). Finally, preparing documentation for the use of externally accessible interfaces (for example, by users and third-parties) reduces the potential for accidental misuse."
                clause "7.2"
                page "30"
            sha256 "c8ebcd348f65d8ce2025fb6cc4f632070f849504701ce0b4cf1f4d768e15eb67"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-1/e"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-1"
            parent_id "IEC-62443-4-1:2020/SD-1"
            group_id "IEC-62443-4-1:2020/SD-1[p30]"
            seq 6
            normative true
            text_normative "A process shall be employed for developing and documenting a secure design that identifies and characterizes each interface of the product, including physical and logical interfaces, to include: e) security considerations, assumptions and/or constraints associated with the use of the interface within the product security context, including applicable threats;"
            ordinal "e"
            inherits_from "IEC-62443-4-1:2020/SD-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure design principles"
                rationale "This process is required to ensure that security for access to assets is comprehensively addressed from the perspective of external and internal interfaces of the product through which attacks can be mounted. Having this process means that interfaces of the product are identified and characterized by the interactions that take place over them (for example, data and control flows), the security mechanisms designed to protect them and the assets that can be compromised if not adequately protected. Interfaces include physical and wireless connections to networks (for example, Ethernet) and devices (for example, keyboards, monitors and USB/compact disc [CD]/digital versatile disc [DVD] media). Logical interfaces support data control flows (for example, application messaging) between product components and include mechanisms such as application programming interfaces (for example, structured queryl anguage [SQL]) and communications protocols (for example, the transmission control protocol [TCP]). Protection mechanisms include general hardening capabilities (for example, security policy settings), user access controls (for example, account management), and security event detection and reporting, among others. Viewing interfaces within the setting provided by the product security context allows the secure design to focus on the specific environment in which the product is expected to operate, including both protections offered by the product security context and vulnerabilities resulting from it (for example, where it can be open to attack). For an internal component of the design, the concept of the product security context is extended to include the security context provided by surround ing product components. For example, the product security context of an application program running on a workstation that is part of an industrial control system product includes the network(s) to which the workstation connects and the software environment of the workstation in which the application runs. Identifying threats, users, assets and trust boundaries associated withinterfaces specifies who is expected to use the interfaces, and indicates where threats and unknown subjects potentially can ga in access to the interface and the assets that can be accessed through it. This allows the reduction of the number of interfaces where possible and to provide the appropriate safeguards for the remaining interfaces and the assets that can be accessed through them. Identifying trust boundaries also supports future definition of zones and conduits (see IEC 62443-3-2 [9]), and thus is a primary component in the definition of the security architecture of the product. Sample data assets (resources) include: a) databases and database tables; b) configuration files; c) cryptographic key stores; d) access control lists (ACLs); e) registry keys; f) web pages (static and dynamic); g) audit logs; h) network sockets / network media; i) inter-process communications (IPC), services and remote procedure call (RPC) resources; j) any other files and directories; and k) any other memory resource. Based on analysis of the product security requirements, the product security context and trust boundary considerations, the design can be developed for interfaces that include the definition of user roles, privileges and authorization/access permissions required to use the interfaces as well as specific security capabilities (for example, authentication, encryption and logging) that provide additional safeguards. As part of the design of the defense in depth strategy, the expected use of compensating mechanisms and third-party hardware or software components will aid in the assessment of the adequacy of the defense in depth strategy (see 7.4). Finally, preparing documentation for the use of externally accessible interfaces (for example, by users and third-parties) reduces the potential for accidental misuse."
                clause "7.2"
                page "30"
            sha256 "88127c4d1147851ef8aa91520aefa0dfd7d7052a104ad7666a608852f61012b6"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-1/f"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-1"
            parent_id "IEC-62443-4-1:2020/SD-1"
            group_id "IEC-62443-4-1:2020/SD-1[p30]"
            seq 7
            normative true
            text_normative "A process shall be employed for developing and documenting a secure design that identifies and characterizes each interface of the product, including physical and logical interfaces, to include: f) the security roles, privileges/rights and access control permissions needed to use the interface and to access the assets defined in c) above;"
            ordinal "f"
            inherits_from "IEC-62443-4-1:2020/SD-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure design principles"
                rationale "This process is required to ensure that security for access to assets is comprehensively addressed from the perspective of external and internal interfaces of the product through which attacks can be mounted. Having this process means that interfaces of the product are identified and characterized by the interactions that take place over them (for example, data and control flows), the security mechanisms designed to protect them and the assets that can be compromised if not adequately protected. Interfaces include physical and wireless connections to networks (for example, Ethernet) and devices (for example, keyboards, monitors and USB/compact disc [CD]/digital versatile disc [DVD] media). Logical interfaces support data control flows (for example, application messaging) between product components and include mechanisms such as application programming interfaces (for example, structured queryl anguage [SQL]) and communications protocols (for example, the transmission control protocol [TCP]). Protection mechanisms include general hardening capabilities (for example, security policy settings), user access controls (for example, account management), and security event detection and reporting, among others. Viewing interfaces within the setting provided by the product security context allows the secure design to focus on the specific environment in which the product is expected to operate, including both protections offered by the product security context and vulnerabilities resulting from it (for example, where it can be open to attack). For an internal component of the design, the concept of the product security context is extended to include the security context provided by surround ing product components. For example, the product security context of an application program running on a workstation that is part of an industrial control system product includes the network(s) to which the workstation connects and the software environment of the workstation in which the application runs. Identifying threats, users, assets and trust boundaries associated withinterfaces specifies who is expected to use the interfaces, and indicates where threats and unknown subjects potentially can ga in access to the interface and the assets that can be accessed through it. This allows the reduction of the number of interfaces where possible and to provide the appropriate safeguards for the remaining interfaces and the assets that can be accessed through them. Identifying trust boundaries also supports future definition of zones and conduits (see IEC 62443-3-2 [9]), and thus is a primary component in the definition of the security architecture of the product. Sample data assets (resources) include: a) databases and database tables; b) configuration files; c) cryptographic key stores; d) access control lists (ACLs); e) registry keys; f) web pages (static and dynamic); g) audit logs; h) network sockets / network media; i) inter-process communications (IPC), services and remote procedure call (RPC) resources; j) any other files and directories; and k) any other memory resource. Based on analysis of the product security requirements, the product security context and trust boundary considerations, the design can be developed for interfaces that include the definition of user roles, privileges and authorization/access permissions required to use the interfaces as well as specific security capabilities (for example, authentication, encryption and logging) that provide additional safeguards. As part of the design of the defense in depth strategy, the expected use of compensating mechanisms and third-party hardware or software components will aid in the assessment of the adequacy of the defense in depth strategy (see 7.4). Finally, preparing documentation for the use of externally accessible interfaces (for example, by users and third-parties) reduces the potential for accidental misuse."
                clause "7.2"
                page "30"
            sha256 "06e6a4963be5fe6eedf4cf24e46aa7c1635cc0c41ea8c825c11423b36c0b01da"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-1/g"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-1"
            parent_id "IEC-62443-4-1:2020/SD-1"
            group_id "IEC-62443-4-1:2020/SD-1[p30]"
            seq 8
            normative true
            text_normative "A process shall be employed for developing and documenting a secure design that identifies and characterizes each interface of the product, including physical and logical interfaces, to include: g) the security capabilities and/or compensating mechanisms used to safeguard the interface and the assets defined in c) above, including input validation as well as output and error handling;"
            ordinal "g"
            inherits_from "IEC-62443-4-1:2020/SD-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure design principles"
                rationale "This process is required to ensure that security for access to assets is comprehensively addressed from the perspective of external and internal interfaces of the product through which attacks can be mounted. Having this process means that interfaces of the product are identified and characterized by the interactions that take place over them (for example, data and control flows), the security mechanisms designed to protect them and the assets that can be compromised if not adequately protected. Interfaces include physical and wireless connections to networks (for example, Ethernet) and devices (for example, keyboards, monitors and USB/compact disc [CD]/digital versatile disc [DVD] media). Logical interfaces support data control flows (for example, application messaging) between product components and include mechanisms such as application programming interfaces (for example, structured queryl anguage [SQL]) and communications protocols (for example, the transmission control protocol [TCP]). Protection mechanisms include general hardening capabilities (for example, security policy settings), user access controls (for example, account management), and security event detection and reporting, among others. Viewing interfaces within the setting provided by the product security context allows the secure design to focus on the specific environment in which the product is expected to operate, including both protections offered by the product security context and vulnerabilities resulting from it (for example, where it can be open to attack). For an internal component of the design, the concept of the product security context is extended to include the security context provided by surround ing product components. For example, the product security context of an application program running on a workstation that is part of an industrial control system product includes the network(s) to which the workstation connects and the software environment of the workstation in which the application runs. Identifying threats, users, assets and trust boundaries associated withinterfaces specifies who is expected to use the interfaces, and indicates where threats and unknown subjects potentially can ga in access to the interface and the assets that can be accessed through it. This allows the reduction of the number of interfaces where possible and to provide the appropriate safeguards for the remaining interfaces and the assets that can be accessed through them. Identifying trust boundaries also supports future definition of zones and conduits (see IEC 62443-3-2 [9]), and thus is a primary component in the definition of the security architecture of the product. Sample data assets (resources) include: a) databases and database tables; b) configuration files; c) cryptographic key stores; d) access control lists (ACLs); e) registry keys; f) web pages (static and dynamic); g) audit logs; h) network sockets / network media; i) inter-process communications (IPC), services and remote procedure call (RPC) resources; j) any other files and directories; and k) any other memory resource. Based on analysis of the product security requirements, the product security context and trust boundary considerations, the design can be developed for interfaces that include the definition of user roles, privileges and authorization/access permissions required to use the interfaces as well as specific security capabilities (for example, authentication, encryption and logging) that provide additional safeguards. As part of the design of the defense in depth strategy, the expected use of compensating mechanisms and third-party hardware or software components will aid in the assessment of the adequacy of the defense in depth strategy (see 7.4). Finally, preparing documentation for the use of externally accessible interfaces (for example, by users and third-parties) reduces the potential for accidental misuse."
                clause "7.2"
                page "30"
            sha256 "644a1354c61cac925d1d4dac919a2de370a232ff0879b03da48a2f2673ec60cb"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-1/h"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-1"
            parent_id "IEC-62443-4-1:2020/SD-1"
            group_id "IEC-62443-4-1:2020/SD-1[p30]"
            seq 9
            normative true
            text_normative "A process shall be employed for developing and documenting a secure design that identifies and characterizes each interface of the product, including physical and logical interfaces, to include: h) the use of third-party products to implement the interface and their security capabilities;"
            ordinal "h"
            inherits_from "IEC-62443-4-1:2020/SD-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure design principles"
                rationale "This process is required to ensure that security for access to assets is comprehensively addressed from the perspective of external and internal interfaces of the product through which attacks can be mounted. Having this process means that interfaces of the product are identified and characterized by the interactions that take place over them (for example, data and control flows), the security mechanisms designed to protect them and the assets that can be compromised if not adequately protected. Interfaces include physical and wireless connections to networks (for example, Ethernet) and devices (for example, keyboards, monitors and USB/compact disc [CD]/digital versatile disc [DVD] media). Logical interfaces support data control flows (for example, application messaging) between product components and include mechanisms such as application programming interfaces (for example, structured queryl anguage [SQL]) and communications protocols (for example, the transmission control protocol [TCP]). Protection mechanisms include general hardening capabilities (for example, security policy settings), user access controls (for example, account management), and security event detection and reporting, among others. Viewing interfaces within the setting provided by the product security context allows the secure design to focus on the specific environment in which the product is expected to operate, including both protections offered by the product security context and vulnerabilities resulting from it (for example, where it can be open to attack). For an internal component of the design, the concept of the product security context is extended to include the security context provided by surround ing product components. For example, the product security context of an application program running on a workstation that is part of an industrial control system product includes the network(s) to which the workstation connects and the software environment of the workstation in which the application runs. Identifying threats, users, assets and trust boundaries associated withinterfaces specifies who is expected to use the interfaces, and indicates where threats and unknown subjects potentially can ga in access to the interface and the assets that can be accessed through it. This allows the reduction of the number of interfaces where possible and to provide the appropriate safeguards for the remaining interfaces and the assets that can be accessed through them. Identifying trust boundaries also supports future definition of zones and conduits (see IEC 62443-3-2 [9]), and thus is a primary component in the definition of the security architecture of the product. Sample data assets (resources) include: a) databases and database tables; b) configuration files; c) cryptographic key stores; d) access control lists (ACLs); e) registry keys; f) web pages (static and dynamic); g) audit logs; h) network sockets / network media; i) inter-process communications (IPC), services and remote procedure call (RPC) resources; j) any other files and directories; and k) any other memory resource. Based on analysis of the product security requirements, the product security context and trust boundary considerations, the design can be developed for interfaces that include the definition of user roles, privileges and authorization/access permissions required to use the interfaces as well as specific security capabilities (for example, authentication, encryption and logging) that provide additional safeguards. As part of the design of the defense in depth strategy, the expected use of compensating mechanisms and third-party hardware or software components will aid in the assessment of the adequacy of the defense in depth strategy (see 7.4). Finally, preparing documentation for the use of externally accessible interfaces (for example, by users and third-parties) reduces the potential for accidental misuse."
                clause "7.2"
                page "30"
            sha256 "e17cb7ba490e3a2c95ef7a67ad4717f33e20383375b82ced22b4f31fce57c23a"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-1/i"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-1"
            parent_id "IEC-62443-4-1:2020/SD-1"
            group_id "IEC-62443-4-1:2020/SD-1[p30]"
            seq 10
            normative true
            text_normative "A process shall be employed for developing and documenting a secure design that identifies and characterizes each interface of the product, including physical and logical interfaces, to include: i) documentation that describes how to use the interface if it is externally accessible ; and"
            ordinal "i"
            inherits_from "IEC-62443-4-1:2020/SD-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure design principles"
                rationale "This process is required to ensure that security for access to assets is comprehensively addressed from the perspective of external and internal interfaces of the product through which attacks can be mounted. Having this process means that interfaces of the product are identified and characterized by the interactions that take place over them (for example, data and control flows), the security mechanisms designed to protect them and the assets that can be compromised if not adequately protected. Interfaces include physical and wireless connections to networks (for example, Ethernet) and devices (for example, keyboards, monitors and USB/compact disc [CD]/digital versatile disc [DVD] media). Logical interfaces support data control flows (for example, application messaging) between product components and include mechanisms such as application programming interfaces (for example, structured queryl anguage [SQL]) and communications protocols (for example, the transmission control protocol [TCP]). Protection mechanisms include general hardening capabilities (for example, security policy settings), user access controls (for example, account management), and security event detection and reporting, among others. Viewing interfaces within the setting provided by the product security context allows the secure design to focus on the specific environment in which the product is expected to operate, including both protections offered by the product security context and vulnerabilities resulting from it (for example, where it can be open to attack). For an internal component of the design, the concept of the product security context is extended to include the security context provided by surround ing product components. For example, the product security context of an application program running on a workstation that is part of an industrial control system product includes the network(s) to which the workstation connects and the software environment of the workstation in which the application runs. Identifying threats, users, assets and trust boundaries associated withinterfaces specifies who is expected to use the interfaces, and indicates where threats and unknown subjects potentially can ga in access to the interface and the assets that can be accessed through it. This allows the reduction of the number of interfaces where possible and to provide the appropriate safeguards for the remaining interfaces and the assets that can be accessed through them. Identifying trust boundaries also supports future definition of zones and conduits (see IEC 62443-3-2 [9]), and thus is a primary component in the definition of the security architecture of the product. Sample data assets (resources) include: a) databases and database tables; b) configuration files; c) cryptographic key stores; d) access control lists (ACLs); e) registry keys; f) web pages (static and dynamic); g) audit logs; h) network sockets / network media; i) inter-process communications (IPC), services and remote procedure call (RPC) resources; j) any other files and directories; and k) any other memory resource. Based on analysis of the product security requirements, the product security context and trust boundary considerations, the design can be developed for interfaces that include the definition of user roles, privileges and authorization/access permissions required to use the interfaces as well as specific security capabilities (for example, authentication, encryption and logging) that provide additional safeguards. As part of the design of the defense in depth strategy, the expected use of compensating mechanisms and third-party hardware or software components will aid in the assessment of the adequacy of the defense in depth strategy (see 7.4). Finally, preparing documentation for the use of externally accessible interfaces (for example, by users and third-parties) reduces the potential for accidental misuse."
                clause "7.2"
                page "30"
            sha256 "986fe7241347df957292fcbbcbabe043e15ad93689b655b9d44867e8984e01ab"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-1/j"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-1"
            parent_id "IEC-62443-4-1:2020/SD-1"
            group_id "IEC-62443-4-1:2020/SD-1[p30]"
            seq 11
            normative true
            text_normative "A process shall be employed for developing and documenting a secure design that identifies and characterizes each interface of the product, including physical and logical interfaces, to include: j) description of how the design mitigates the threats identified in the threat model."
            ordinal "j"
            inherits_from "IEC-62443-4-1:2020/SD-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure design principles"
                rationale "This process is required to ensure that security for access to assets is comprehensively addressed from the perspective of external and internal interfaces of the product through which attacks can be mounted. Having this process means that interfaces of the product are identified and characterized by the interactions that take place over them (for example, data and control flows), the security mechanisms designed to protect them and the assets that can be compromised if not adequately protected. Interfaces include physical and wireless connections to networks (for example, Ethernet) and devices (for example, keyboards, monitors and USB/compact disc [CD]/digital versatile disc [DVD] media). Logical interfaces support data control flows (for example, application messaging) between product components and include mechanisms such as application programming interfaces (for example, structured queryl anguage [SQL]) and communications protocols (for example, the transmission control protocol [TCP]). Protection mechanisms include general hardening capabilities (for example, security policy settings), user access controls (for example, account management), and security event detection and reporting, among others. Viewing interfaces within the setting provided by the product security context allows the secure design to focus on the specific environment in which the product is expected to operate, including both protections offered by the product security context and vulnerabilities resulting from it (for example, where it can be open to attack). For an internal component of the design, the concept of the product security context is extended to include the security context provided by surround ing product components. For example, the product security context of an application program running on a workstation that is part of an industrial control system product includes the network(s) to which the workstation connects and the software environment of the workstation in which the application runs. Identifying threats, users, assets and trust boundaries associated withinterfaces specifies who is expected to use the interfaces, and indicates where threats and unknown subjects potentially can ga in access to the interface and the assets that can be accessed through it. This allows the reduction of the number of interfaces where possible and to provide the appropriate safeguards for the remaining interfaces and the assets that can be accessed through them. Identifying trust boundaries also supports future definition of zones and conduits (see IEC 62443-3-2 [9]), and thus is a primary component in the definition of the security architecture of the product. Sample data assets (resources) include: a) databases and database tables; b) configuration files; c) cryptographic key stores; d) access control lists (ACLs); e) registry keys; f) web pages (static and dynamic); g) audit logs; h) network sockets / network media; i) inter-process communications (IPC), services and remote procedure call (RPC) resources; j) any other files and directories; and k) any other memory resource. Based on analysis of the product security requirements, the product security context and trust boundary considerations, the design can be developed for interfaces that include the definition of user roles, privileges and authorization/access permissions required to use the interfaces as well as specific security capabilities (for example, authentication, encryption and logging) that provide additional safeguards. As part of the design of the defense in depth strategy, the expected use of compensating mechanisms and third-party hardware or software components will aid in the assessment of the adequacy of the defense in depth strategy (see 7.4). Finally, preparing documentation for the use of externally accessible interfaces (for example, by users and third-parties) reduces the potential for accidental misuse."
                clause "7.2"
                page "30"
            sha256 "e75667a102a27e56ac287443ee40ca93f58d0430d60dfd0ce7272c34984c7f10"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-2"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-2"
            parent_id null
            group_id "IEC-62443-4-1:2020/SD-2[p31]"
            seq 1
            normative true
            informative false
            text_normative "A process shall be employed to implement multiple layers of defense using a risk based approach based on the threat model. This process shall be employed for assign ing responsibilities to each layer of defense."
            context_note null
            { context
                name "Defense in depth design"
                rationale "For example, the TCP/IP s tack could check for i nvalid packets, an HTTP server could authenticate input and then another layer could validate that the input and audit logs are produced for administrative changes. Each layer provides an additional "defense mechanism, has a responsibility and provides attack surface reduction for the next layer. Each layer assumes that the "layer in front of it can be compromised."
                clause "7.3"
                page "31"
            sha256 "13d0e45d11483410415a8e6163a59d7ccd10eb51716735e23c97bb37771242f5"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-3"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-3"
            parent_id null
            group_id "IEC-62443-4-1:2020/SD-3[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed for conducting design reviews to identify, characterize and track to closure security-related issues associated with each significant revision of the secure design including but not limited to:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "1c264b91107e62f331917ebeb126d6b9f50744bd7697a57e3a5ac2b6d9bfc550"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-3/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-3"
            parent_id "IEC-62443-4-1:2020/SD-3"
            group_id "IEC-62443-4-1:2020/SD-3[p32]"
            seq 2
            normative true
            text_normative "A process shall be employed for conducting design reviews to identify, characterize and track to closure security-related issues associated with each significant revision of the secure design including but not limited to: a) security requirements (see Clause 6, Practice 2 – Specification of security requirements) that were not adequately addressed by the design;"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SD-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security design review"
                rationale "This process is required to ensure that the secure design addresses the requirements and threats (see Clause 6) defined for the product, and that design best practices have been followed (see 7.5). All discovered security-related issues are to be documented and tracked through the processes defined by 7.4 and 10.5." Having this process means that each version of the design is reviewed to determine: a) whether any product security requirements have not been adequately addressed by the defense in depth strategy; and b) whether there are threat vectors (paths for threats to follow) that bypass the defense in depth strategy or that are otherwise capable of breaching the defense in depth strategy. In either case, the threat model is to be updated to reflect security-related issues discovered as a result of the review process."
                clause "7.4"
                page "32"
            sha256 "dec251de4e98316e66d50c51c615974ae6a5440e489b3498942854d7f94a4179"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-3/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-3"
            parent_id "IEC-62443-4-1:2020/SD-3"
            group_id "IEC-62443-4-1:2020/SD-3[p32]"
            seq 3
            normative true
            text_normative "A process shall be employed for conducting design reviews to identify, characterize and track to closure security-related issues associated with each significant revision of the secure design including but not limited to: b) threats and their ability to exploit product interfaces, trust boundaries, and assets ( see 7.2, SD-1: Secure design principles); and"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SD-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security design review"
                rationale "This process is required to ensure that the secure design addresses the requirements and threats (see Clause 6) defined for the product, and that design best practices have been followed (see 7.5). All discovered security-related issues are to be documented and tracked through the processes defined by 7.4 and 10.5." Having this process means that each version of the design is reviewed to determine: a) whether any product security requirements have not been adequately addressed by the defense in depth strategy; and b) whether there are threat vectors (paths for threats to follow) that bypass the defense in depth strategy or that are otherwise capable of breaching the defense in depth strategy. In either case, the threat model is to be updated to reflect security-related issues discovered as a result of the review process."
                clause "7.4"
                page "32"
            sha256 "4c7d2ee7a9d124851c13b6930db4cf4bd6b188c8adc76e4eed28e1def6666f44"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-3/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-3"
            parent_id "IEC-62443-4-1:2020/SD-3"
            group_id "IEC-62443-4-1:2020/SD-3[p32]"
            seq 4
            normative true
            text_normative "A process shall be employed for conducting design reviews to identify, characterize and track to closure security-related issues associated with each significant revision of the secure design including but not limited to: c) identification of secure design practices (see 7.5, SD-4: Secure design best practices) that were not followed (for example, failure to apply principle of least privilege)."
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/SD-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security design review"
                rationale "This process is required to ensure that the secure design addresses the requirements and threats (see Clause 6) defined for the product, and that design best practices have been followed (see 7.5). All discovered security-related issues are to be documented and tracked through the processes defined by 7.4 and 10.5." Having this process means that each version of the design is reviewed to determine: a) whether any product security requirements have not been adequately addressed by the defense in depth strategy; and b) whether there are threat vectors (paths for threats to follow) that bypass the defense in depth strategy or that are otherwise capable of breaching the defense in depth strategy. In either case, the threat model is to be updated to reflect security-related issues discovered as a result of the review process."
                clause "7.4"
                page "32"
            sha256 "7e7103154ec37fcba16a60e3186f036f7c9706c4d4df26b95f682e9cadbe0ed5"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-4"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-4"
            parent_id null
            group_id "IEC-62443-4-1:2020/SD-4[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed to ensure that secure design best practices are documented and applied to the design process. These practices shall be periodically reviewed and updated. Secure design practices include but are not be limited to:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "0a0af18afee484465da52d1bbfc2c4696686ccacf9f7516d052d8001ee2642ec"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-4/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-4"
            parent_id "IEC-62443-4-1:2020/SD-4"
            group_id "IEC-62443-4-1:2020/SD-4[p32]"
            seq 2
            normative true
            text_normative "A process shall be employed to ensure that secure design best practices are documented and applied to the design process. These practices shall be periodically reviewed and updated. Secure design practices include but are not be limited to: a) least privilege (granting only the privileges to users/software necessary to perform intended operations)"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SD-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure design best practices"
                rationale "This process is required to ensure that guidance is provided to developers to help them avoid common pitfalls during design that could lead to later security issues. Having this process means that the product supplier has a list of security best practices that is maintained and followed during the development of the secure design for the product. These best practices should be based commonly accepted security best practices in industry for the type of product being developed. It is completely up to the supplier to determine which practices they consider to be most appropriate for their design practices. These practices are kept current as a result of both changes in the industry and the application of lessons learned by the product supplier. Note that these practices apply to both hardware and software design."
                clause "7.5"
                page "32"
            sha256 "4e9ab39548c19110df53b811401f5b0eb0c56730aa2f68b83a3b88b9602ee469"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-4/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-4"
            parent_id "IEC-62443-4-1:2020/SD-4"
            group_id "IEC-62443-4-1:2020/SD-4[p32]"
            seq 3
            normative true
            text_normative "A process shall be employed to ensure that secure design best practices are documented and applied to the design process. These practices shall be periodically reviewed and updated. Secure design practices include but are not be limited to: b) using proven secure components/designs where possible;"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SD-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure design best practices"
                rationale "This process is required to ensure that guidance is provided to developers to help them avoid common pitfalls during design that could lead to later security issues. Having this process means that the product supplier has a list of security best practices that is maintained and followed during the development of the secure design for the product. These best practices should be based commonly accepted security best practices in industry for the type of product being developed. It is completely up to the supplier to determine which practices they consider to be most appropriate for their design practices. These practices are kept current as a result of both changes in the industry and the application of lessons learned by the product supplier. Note that these practices apply to both hardware and software design."
                clause "7.5"
                page "32"
            sha256 "641cebfd3e24a608fec2f5abd7573028ce859ddce6b841983eab9fc3fe5abc45"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-4/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-4"
            parent_id "IEC-62443-4-1:2020/SD-4"
            group_id "IEC-62443-4-1:2020/SD-4[p32]"
            seq 4
            normative true
            text_normative "A process shall be employed to ensure that secure design best practices are documented and applied to the design process. These practices shall be periodically reviewed and updated. Secure design practices include but are not be limited to: c) economy of mechanism (striving for simple designs);"
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/SD-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure design best practices"
                rationale "This process is required to ensure that guidance is provided to developers to help them avoid common pitfalls during design that could lead to later security issues. Having this process means that the product supplier has a list of security best practices that is maintained and followed during the development of the secure design for the product. These best practices should be based commonly accepted security best practices in industry for the type of product being developed. It is completely up to the supplier to determine which practices they consider to be most appropriate for their design practices. These practices are kept current as a result of both changes in the industry and the application of lessons learned by the product supplier. Note that these practices apply to both hardware and software design."
                clause "7.5"
                page "32"
            sha256 "f087b1d6134bb35b4e7ce56d9af7e30598ef4e14156b4f0873a455174f98eed2"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-4/d"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-4"
            parent_id "IEC-62443-4-1:2020/SD-4"
            group_id "IEC-62443-4-1:2020/SD-4[p32]"
            seq 5
            normative true
            text_normative "A process shall be employed to ensure that secure design best practices are documented and applied to the design process. These practices shall be periodically reviewed and updated. Secure design practices include but are not be limited to: d) using secure design patterns;"
            ordinal "d"
            inherits_from "IEC-62443-4-1:2020/SD-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure design best practices"
                rationale "This process is required to ensure that guidance is provided to developers to help them avoid common pitfalls during design that could lead to later security issues. Having this process means that the product supplier has a list of security best practices that is maintained and followed during the development of the secure design for the product. These best practices should be based commonly accepted security best practices in industry for the type of product being developed. It is completely up to the supplier to determine which practices they consider to be most appropriate for their design practices. These practices are kept current as a result of both changes in the industry and the application of lessons learned by the product supplier. Note that these practices apply to both hardware and software design."
                clause "7.5"
                page "32"
            sha256 "9620bb7cc433ec5cc557376b0a87b5a49940d4957d065b3c5479298d514146e5"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-4/e"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-4"
            parent_id "IEC-62443-4-1:2020/SD-4"
            group_id "IEC-62443-4-1:2020/SD-4[p32]"
            seq 6
            normative true
            text_normative "A process shall be employed to ensure that secure design best practices are documented and applied to the design process. These practices shall be periodically reviewed and updated. Secure design practices include but are not be limited to: e) attack surface reduction;"
            ordinal "e"
            inherits_from "IEC-62443-4-1:2020/SD-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure design best practices"
                rationale "This process is required to ensure that guidance is provided to developers to help them avoid common pitfalls during design that could lead to later security issues. Having this process means that the product supplier has a list of security best practices that is maintained and followed during the development of the secure design for the product. These best practices should be based commonly accepted security best practices in industry for the type of product being developed. It is completely up to the supplier to determine which practices they consider to be most appropriate for their design practices. These practices are kept current as a result of both changes in the industry and the application of lessons learned by the product supplier. Note that these practices apply to both hardware and software design."
                clause "7.5"
                page "32"
            sha256 "e41436790e73fbde7778d2914d7e42d6613a312064e17a31174f4f695c29705f"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-4/f"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-4"
            parent_id "IEC-62443-4-1:2020/SD-4"
            group_id "IEC-62443-4-1:2020/SD-4[p32]"
            seq 7
            normative true
            text_normative "A process shall be employed to ensure that secure design best practices are documented and applied to the design process. These practices shall be periodically reviewed and updated. Secure design practices include but are not be limited to: f) all trust boundaries are documented as part of the design; and"
            ordinal "f"
            inherits_from "IEC-62443-4-1:2020/SD-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure design best practices"
                rationale "This process is required to ensure that guidance is provided to developers to help them avoid common pitfalls during design that could lead to later security issues. Having this process means that the product supplier has a list of security best practices that is maintained and followed during the development of the secure design for the product. These best practices should be based commonly accepted security best practices in industry for the type of product being developed. It is completely up to the supplier to determine which practices they consider to be most appropriate for their design practices. These practices are kept current as a result of both changes in the industry and the application of lessons learned by the product supplier. Note that these practices apply to both hardware and software design."
                clause "7.5"
                page "32"
            sha256 "b55d583c996f62951a86d6a235169f81e9444caa28ed525725f3458f359dbe8b"
        { 
            chunk_id "IEC-62443-4-1:2020/SD-4/g"
            doc_id "IEC-62443-4-1:2020"
            section_path "SD-4"
            parent_id "IEC-62443-4-1:2020/SD-4"
            group_id "IEC-62443-4-1:2020/SD-4[p32]"
            seq 8
            normative true
            text_normative "A process shall be employed to ensure that secure design best practices are documented and applied to the design process. These practices shall be periodically reviewed and updated. Secure design practices include but are not be limited to: g) removing debug ports, headers and traces from circuit boards used during development from production hardware or documenting their presence and the need to protect them from unauthorized access."
            ordinal "g"
            inherits_from "IEC-62443-4-1:2020/SD-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure design best practices"
                rationale "This process is required to ensure that guidance is provided to developers to help them avoid common pitfalls during design that could lead to later security issues. Having this process means that the product supplier has a list of security best practices that is maintained and followed during the development of the secure design for the product. These best practices should be based commonly accepted security best practices in industry for the type of product being developed. It is completely up to the supplier to determine which practices they consider to be most appropriate for their design practices. These practices are kept current as a result of both changes in the industry and the application of lessons learned by the product supplier. Note that these practices apply to both hardware and software design."
                clause "7.5"
                page "32"
            sha256 "4e7ad6e3a76d9eca6da7217b260c16e1759d1906e88ea8d3dda5bc854051cccc"
        { 
            chunk_id "IEC-62443-4-1:2020/SI-1"
            doc_id "IEC-62443-4-1:2020"
            section_path "SI-1"
            parent_id null
            group_id "IEC-62443-4-1:2020/SI-1[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed to ensure that implementation reviews are performed for identifying, characterizing and tracking to closure security-related issues associated with the implementation of the secure design including:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "48b19117be74922baadef76e9444a61c39e210588dc06b1f631c9e9b059669e1"
        { 
            chunk_id "IEC-62443-4-1:2020/SI-1/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SI-1"
            parent_id "IEC-62443-4-1:2020/SI-1"
            group_id "IEC-62443-4-1:2020/SI-1[p32]"
            seq 2
            normative true
            text_normative "A process shall be employed to ensure that implementation reviews are performed for identifying, characterizing and tracking to closure security-related issues associated with the implementation of the secure design including: a) identification of security requirements that were not adequately addressed by the implementation;"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SI-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security implementation review"
                rationale "This process is required to ensure that the implementation properly addresses (implements) the secure design and its associated security requirements and follows implementation best practices. Having this process means that the product supplier conducts a comprehensive set of security reviews of the implementation and its design. Different types of reviews will typically be used to address different objectives. For example, manual reviews are typically conducted against the implementation design to verify that requirements are being met and that the implementation will adequately protect against threats expected to be present. In addition, manual source code reviews may be used to examine source code for adherence to best practices (see 8.4), and automated static source code analysis may be used to identify anomalies, including security vulnerabilities in the code as well as non-conformities with given programming rules."
                clause "8.3"
                page "32"
            sha256 "46085f92ea8c418480b5d762804ea222083d292b86f7c38692b06d9b178bad73"
        { 
            chunk_id "IEC-62443-4-1:2020/SI-1/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SI-1"
            parent_id "IEC-62443-4-1:2020/SI-1"
            group_id "IEC-62443-4-1:2020/SI-1[p32]"
            seq 3
            normative true
            text_normative "A process shall be employed to ensure that implementation reviews are performed for identifying, characterizing and tracking to closure security-related issues associated with the implementation of the secure design including: b) identification of secure coding standards that were not followed;"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SI-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security implementation review"
                rationale "This process is required to ensure that the implementation properly addresses (implements) the secure design and its associated security requirements and follows implementation best practices. Having this process means that the product supplier conducts a comprehensive set of security reviews of the implementation and its design. Different types of reviews will typically be used to address different objectives. For example, manual reviews are typically conducted against the implementation design to verify that requirements are being met and that the implementation will adequately protect against threats expected to be present. In addition, manual source code reviews may be used to examine source code for adherence to best practices (see 8.4), and automated static source code analysis may be used to identify anomalies, including security vulnerabilities in the code as well as non-conformities with given programming rules."
                clause "8.3"
                page "32"
            sha256 "f6a10b0256a9b73a5154d76a89dcbf4d926c1b40e002e40b97763ded20881946"
        { 
            chunk_id "IEC-62443-4-1:2020/SI-1/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "SI-1"
            parent_id "IEC-62443-4-1:2020/SI-1"
            group_id "IEC-62443-4-1:2020/SI-1[p32]"
            seq 4
            normative true
            text_normative "A process shall be employed to ensure that implementation reviews are performed for identifying, characterizing and tracking to closure security-related issues associated with the implementation of the secure design including: c) Static Code Analysis (SCA) for source code to determine security coding errors such as buffer overflows, null pointer dereferencing, etc. using the secure coding standard for the supported programming language. SCA shall be done using a tool if one is available for the language used. In addition, static code analysis shall be done on all source code changes including new source code."
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/SI-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security implementation review"
                rationale "This process is required to ensure that the implementation properly addresses (implements) the secure design and its associated security requirements and follows implementation best practices. Having this process means that the product supplier conducts a comprehensive set of security reviews of the implementation and its design. Different types of reviews will typically be used to address different objectives. For example, manual reviews are typically conducted against the implementation design to verify that requirements are being met and that the implementation will adequately protect against threats expected to be present. In addition, manual source code reviews may be used to examine source code for adherence to best practices (see 8.4), and automated static source code analysis may be used to identify anomalies, including security vulnerabilities in the code as well as non-conformities with given programming rules."
                clause "8.3"
                page "32"
            sha256 "19e1a7b286abd396ac49b540f460e4e124177229924e21bb3cf28a1c6450af23"
        { 
            chunk_id "IEC-62443-4-1:2020/SI-1/d"
            doc_id "IEC-62443-4-1:2020"
            section_path "SI-1"
            parent_id "IEC-62443-4-1:2020/SI-1"
            group_id "IEC-62443-4-1:2020/SI-1[p32]"
            seq 5
            normative true
            text_normative "A process shall be employed to ensure that implementation reviews are performed for identifying, characterizing and tracking to closure security-related issues associated with the implementation of the secure design including: d) review of the implementation and its traceability to the security capabilities defined to support the security design; and"
            ordinal "d"
            inherits_from "IEC-62443-4-1:2020/SI-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security implementation review"
                rationale "This process is required to ensure that the implementation properly addresses (implements) the secure design and its associated security requirements and follows implementation best practices. Having this process means that the product supplier conducts a comprehensive set of security reviews of the implementation and its design. Different types of reviews will typically be used to address different objectives. For example, manual reviews are typically conducted against the implementation design to verify that requirements are being met and that the implementation will adequately protect against threats expected to be present. In addition, manual source code reviews may be used to examine source code for adherence to best practices (see 8.4), and automated static source code analysis may be used to identify anomalies, including security vulnerabilities in the code as well as non-conformities with given programming rules."
                clause "8.3"
                page "32"
            sha256 "11affc9c38acbc2de10936d0fc54c27f0b45bb2353f042dffe3423eac11084aa"
        { 
            chunk_id "IEC-62443-4-1:2020/SI-1/e"
            doc_id "IEC-62443-4-1:2020"
            section_path "SI-1"
            parent_id "IEC-62443-4-1:2020/SI-1"
            group_id "IEC-62443-4-1:2020/SI-1[p32]"
            seq 6
            normative true
            text_normative "A process shall be employed to ensure that implementation reviews are performed for identifying, characterizing and tracking to closure security-related issues associated with the implementation of the secure design including: e) examination of threats and their ability to exploit implementation interfaces, trust boundaries and assets."
            ordinal "e"
            inherits_from "IEC-62443-4-1:2020/SI-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security implementation review"
                rationale "This process is required to ensure that the implementation properly addresses (implements) the secure design and its associated security requirements and follows implementation best practices. Having this process means that the product supplier conducts a comprehensive set of security reviews of the implementation and its design. Different types of reviews will typically be used to address different objectives. For example, manual reviews are typically conducted against the implementation design to verify that requirements are being met and that the implementation will adequately protect against threats expected to be present. In addition, manual source code reviews may be used to examine source code for adherence to best practices (see 8.4), and automated static source code analysis may be used to identify anomalies, including security vulnerabilities in the code as well as non-conformities with given programming rules."
                clause "8.3"
                page "32"
            sha256 "87a5b8281c307e9601705152ff128985d7917bdaa0ca798b51801b33d9f5ad34"
        { 
            chunk_id "IEC-62443-4-1:2020/SI-2"
            doc_id "IEC-62443-4-1:2020"
            section_path "SI-2"
            parent_id null
            group_id "IEC-62443-4-1:2020/SI-2[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "The implementation processes shall incorporate security coding standards that are periodically reviewed and updated and include at a minimum:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "d4d171bc7a84f888335b14cd7eb4b52c808c0a94958138689af4844532cc8787"
        { 
            chunk_id "IEC-62443-4-1:2020/SI-2/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SI-2"
            parent_id "IEC-62443-4-1:2020/SI-2"
            group_id "IEC-62443-4-1:2020/SI-2[p32]"
            seq 2
            normative true
            text_normative "The implementation processes shall incorporate security coding standards that are periodically reviewed and updated and include at a minimum: a) avoidance of potentially exploitable implementation constructs – implementation design patterns that are known to have security weaknesses;"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SI-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure coding standards"
                rationale "This process is required to ensure that guidance is provided to developers to help them avoid common pitfalls during implementation that could lead to later security issues. Having this process means that the product supplier has a list of security best practices that it maintains and follows during the implementation of a product. These best practices should be based on commonly accepted security best practices in industry for the type of product being developed. It is completely up to the supplier to determine which practices they consider to be most appropriate for their design and coding standard. These practices are kept current as a result of both changes in the industry and the application of lessons learned by the product supplier."
                clause "8.4"
                page "32"
            sha256 "329f31c16f955e5fa984ac949c39bed2bc024f72613724c384752b1e393b6562"
        { 
            chunk_id "IEC-62443-4-1:2020/SI-2/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SI-2"
            parent_id "IEC-62443-4-1:2020/SI-2"
            group_id "IEC-62443-4-1:2020/SI-2[p32]"
            seq 3
            normative true
            text_normative "The implementation processes shall incorporate security coding standards that are periodically reviewed and updated and include at a minimum: b) avoidance of banned functions and coding constructs/design patterns – software functions and design patterns that should not be used because they have known security weaknesses;"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SI-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure coding standards"
                rationale "This process is required to ensure that guidance is provided to developers to help them avoid common pitfalls during implementation that could lead to later security issues. Having this process means that the product supplier has a list of security best practices that it maintains and follows during the implementation of a product. These best practices should be based on commonly accepted security best practices in industry for the type of product being developed. It is completely up to the supplier to determine which practices they consider to be most appropriate for their design and coding standard. These practices are kept current as a result of both changes in the industry and the application of lessons learned by the product supplier."
                clause "8.4"
                page "32"
            sha256 "f975cbc4d46a5ec1a8cd17e019fce633590818fd0ff909ca0da000c0c3dcf04f"
        { 
            chunk_id "IEC-62443-4-1:2020/SI-2/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "SI-2"
            parent_id "IEC-62443-4-1:2020/SI-2"
            group_id "IEC-62443-4-1:2020/SI-2[p32]"
            seq 4
            normative true
            text_normative "The implementation processes shall incorporate security coding standards that are periodically reviewed and updated and include at a minimum: c) automated tool use and settings (for example, for static analysis tools);"
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/SI-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure coding standards"
                rationale "This process is required to ensure that guidance is provided to developers to help them avoid common pitfalls during implementation that could lead to later security issues. Having this process means that the product supplier has a list of security best practices that it maintains and follows during the implementation of a product. These best practices should be based on commonly accepted security best practices in industry for the type of product being developed. It is completely up to the supplier to determine which practices they consider to be most appropriate for their design and coding standard. These practices are kept current as a result of both changes in the industry and the application of lessons learned by the product supplier."
                clause "8.4"
                page "32"
            sha256 "28d3e3bca6d2f9a5d89e71b283c1c7a076276454608e7f7b7ed537dc53723e3e"
        { 
            chunk_id "IEC-62443-4-1:2020/SI-2/d"
            doc_id "IEC-62443-4-1:2020"
            section_path "SI-2"
            parent_id "IEC-62443-4-1:2020/SI-2"
            group_id "IEC-62443-4-1:2020/SI-2[p32]"
            seq 5
            normative true
            text_normative "The implementation processes shall incorporate security coding standards that are periodically reviewed and updated and include at a minimum: d) secure coding practices;"
            ordinal "d"
            inherits_from "IEC-62443-4-1:2020/SI-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure coding standards"
                rationale "This process is required to ensure that guidance is provided to developers to help them avoid common pitfalls during implementation that could lead to later security issues. Having this process means that the product supplier has a list of security best practices that it maintains and follows during the implementation of a product. These best practices should be based on commonly accepted security best practices in industry for the type of product being developed. It is completely up to the supplier to determine which practices they consider to be most appropriate for their design and coding standard. These practices are kept current as a result of both changes in the industry and the application of lessons learned by the product supplier."
                clause "8.4"
                page "32"
            sha256 "a6601bc6fae787891cad5923b5f8834d3328cdad43d077193d2d96ce4dfebcf7"
        { 
            chunk_id "IEC-62443-4-1:2020/SI-2/e"
            doc_id "IEC-62443-4-1:2020"
            section_path "SI-2"
            parent_id "IEC-62443-4-1:2020/SI-2"
            group_id "IEC-62443-4-1:2020/SI-2[p32]"
            seq 6
            normative true
            text_normative "The implementation processes shall incorporate security coding standards that are periodically reviewed and updated and include at a minimum: e) validation of all inputs that cross trust boundary."
            ordinal "e"
            inherits_from "IEC-62443-4-1:2020/SI-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure coding standards"
                rationale "This process is required to ensure that guidance is provided to developers to help them avoid common pitfalls during implementation that could lead to later security issues. Having this process means that the product supplier has a list of security best practices that it maintains and follows during the implementation of a product. These best practices should be based on commonly accepted security best practices in industry for the type of product being developed. It is completely up to the supplier to determine which practices they consider to be most appropriate for their design and coding standard. These practices are kept current as a result of both changes in the industry and the application of lessons learned by the product supplier."
                clause "8.4"
                page "32"
            sha256 "7dc897d237d22db48b7ee370e400c15df0967655804921e45057d0b9debaac0a"
        { 
            chunk_id "IEC-62443-4-1:2020/SI-2/f"
            doc_id "IEC-62443-4-1:2020"
            section_path "SI-2"
            parent_id "IEC-62443-4-1:2020/SI-2"
            group_id "IEC-62443-4-1:2020/SI-2[p32]"
            seq 7
            normative true
            text_normative "The implementation processes shall incorporate security coding standards that are periodically reviewed and updated and include at a minimum: f) error handling"
            ordinal "f"
            inherits_from "IEC-62443-4-1:2020/SI-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure coding standards"
                rationale "This process is required to ensure that guidance is provided to developers to help them avoid common pitfalls during implementation that could lead to later security issues. Having this process means that the product supplier has a list of security best practices that it maintains and follows during the implementation of a product. These best practices should be based on commonly accepted security best practices in industry for the type of product being developed. It is completely up to the supplier to determine which practices they consider to be most appropriate for their design and coding standard. These practices are kept current as a result of both changes in the industry and the application of lessons learned by the product supplier."
                clause "8.4"
                page "32"
            sha256 "4bc2c5c7aaa0ed23d6a559d870dcae274303037dda53108cd1a23edd275bda86"
        { 
            chunk_id "IEC-62443-4-1:2020/SVV-1"
            doc_id "IEC-62443-4-1:2020"
            section_path "SVV-1"
            parent_id null
            group_id "IEC-62443-4-1:2020/SVV-1[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed for verifying the product security functions meet the security requirements and that the product handles error scenarios and invalid input correctly. Types of testing shall include:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "9445af85e502b5013a337d00012c38dc5738f72f4ab3f5240d4cfb9f7a1b5e5d"
        { 
            chunk_id "IEC-62443-4-1:2020/SVV-1/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SVV-1"
            parent_id "IEC-62443-4-1:2020/SVV-1"
            group_id "IEC-62443-4-1:2020/SVV-1[p32]"
            seq 2
            normative true
            text_normative "A process shall be employed for verifying the product security functions meet the security requirements and that the product handles error scenarios and invalid input correctly. Types of testing shall include: a) functional testing of security requirements;"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SVV-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security requirements testing"
                rationale "This process is required to ensure that the product meets the security requirements defined for it (see Clause 6). Having this process means that the product supplier verifies through testing that the product meets its documented security requirements. Examples of the types of functionality in scope for security requirements include: a) general security capabilities (features); b) API (application programming interface); c) permission delegation; d) anti-tampering and integrity functionality; e) signed image verification; and f) secure storage of secrets."
                clause "9.1"
                page "32"
            sha256 "7009e8018719867bbca96b4dea58f2f9b47a5f4743f68fd76cab8ea32111130e"
        { 
            chunk_id "IEC-62443-4-1:2020/SVV-1/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SVV-1"
            parent_id "IEC-62443-4-1:2020/SVV-1"
            group_id "IEC-62443-4-1:2020/SVV-1[p32]"
            seq 3
            normative true
            text_normative "A process shall be employed for verifying the product security functions meet the security requirements and that the product handles error scenarios and invalid input correctly. Types of testing shall include: b) performance and scalability testing;"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SVV-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security requirements testing"
                rationale "This process is required to ensure that the product meets the security requirements defined for it (see Clause 6). Having this process means that the product supplier verifies through testing that the product meets its documented security requirements. Examples of the types of functionality in scope for security requirements include: a) general security capabilities (features); b) API (application programming interface); c) permission delegation; d) anti-tampering and integrity functionality; e) signed image verification; and f) secure storage of secrets."
                clause "9.1"
                page "32"
            sha256 "bebb194b921dff9748b4cba09a1882c5b0c02511ba98bcc61af6f38cf136ad2d"
        { 
            chunk_id "IEC-62443-4-1:2020/SVV-1/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "SVV-1"
            parent_id "IEC-62443-4-1:2020/SVV-1"
            group_id "IEC-62443-4-1:2020/SVV-1[p32]"
            seq 4
            normative true
            text_normative "A process shall be employed for verifying the product security functions meet the security requirements and that the product handles error scenarios and invalid input correctly. Types of testing shall include: c) boundary/edge condition, stress and malformed or unexpected input tests not specifically targeted at security."
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/SVV-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security requirements testing"
                rationale "This process is required to ensure that the product meets the security requirements defined for it (see Clause 6). Having this process means that the product supplier verifies through testing that the product meets its documented security requirements. Examples of the types of functionality in scope for security requirements include: a) general security capabilities (features); b) API (application programming interface); c) permission delegation; d) anti-tampering and integrity functionality; e) signed image verification; and f) secure storage of secrets."
                clause "9.1"
                page "32"
            sha256 "ea35e44e3f798d5c5fe858c3f75fb98d7a488bd9b73e15f095f76d437db65551"
        { 
            chunk_id "IEC-62443-4-1:2020/SVV-2"
            doc_id "IEC-62443-4-1:2020"
            section_path "SVV-2"
            parent_id null
            group_id "IEC-62443-4-1:2020/SVV-2[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed for testing the effectiveness of the mitigation for the threats identified and validated in the threat model. Activities shall include:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "f993dd547a1ab450ab2899df2e7f308eb66e4b5392509cdd4ffe79cf5739c81b"
        { 
            chunk_id "IEC-62443-4-1:2020/SVV-2/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SVV-2"
            parent_id "IEC-62443-4-1:2020/SVV-2"
            group_id "IEC-62443-4-1:2020/SVV-2[p32]"
            seq 2
            normative true
            text_normative "A process shall be employed for testing the effectiveness of the mitigation for the threats identified and validated in the threat model. Activities shall include: a) creating and executing plans to ensure that each mitigation implemented to address a specific threat has been adequately tested to ensure the mitigation works as designed and"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SVV-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Threat mitigation testing"
                rationale "The effectiveness of mitigations to threats identified by the threat model are tested as part of this practice. Examples of threat mitigation testing include attempts to thwart mitigations identified using the spoofing, tampering, repudiation, information disclosure, denial of service and e levation of privilege (STRIDE). For example, if STRIDE identified authentication as a mitigation for spoofing threat mitigation tests would focus on bypassing authentication. If a layered defense strategy is used as a mitigation, then the effectiveness of each layer would be tested. For example, if the product employs the combination of authentication, authorization and audit logs as a layered defense strategy to thwart tampering, then each layer will be tested for its contribution to this mitigation strategy. this process is required to ensure that the product’s defense in depth and threat mitigation strategies and capabilities are effecti ve."
                clause "9.3"
                page "32"
            sha256 "5abb1679ebf0a477e8e459e14a7002afeefe475ade2442e11e3ef9c1bacfacd2"
        { 
            chunk_id "IEC-62443-4-1:2020/SVV-2/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SVV-2"
            parent_id "IEC-62443-4-1:2020/SVV-2"
            group_id "IEC-62443-4-1:2020/SVV-2[p32]"
            seq 3
            normative true
            text_normative "A process shall be employed for testing the effectiveness of the mitigation for the threats identified and validated in the threat model. Activities shall include: b) creating and executing plans for attempting to thwart each mitigation."
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SVV-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Threat mitigation testing"
                rationale "The effectiveness of mitigations to threats identified by the threat model are tested as part of this practice. Examples of threat mitigation testing include attempts to thwart mitigations identified using the spoofing, tampering, repudiation, information disclosure, denial of service and e levation of privilege (STRIDE). For example, if STRIDE identified authentication as a mitigation for spoofing threat mitigation tests would focus on bypassing authentication. If a layered defense strategy is used as a mitigation, then the effectiveness of each layer would be tested. For example, if the product employs the combination of authentication, authorization and audit logs as a layered defense strategy to thwart tampering, then each layer will be tested for its contribution to this mitigation strategy. this process is required to ensure that the product’s defense in depth and threat mitigation strategies and capabilities are effecti ve."
                clause "9.3"
                page "32"
            sha256 "09a4c6f7686102ea55fb33d6cc46829e1e57806bf1a4105b8982d2cdcd0c95d8"
        { 
            chunk_id "IEC-62443-4-1:2020/SVV-3"
            doc_id "IEC-62443-4-1:2020"
            section_path "SVV-3"
            parent_id null
            group_id "IEC-62443-4-1:2020/SVV-3[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed for performing tests that focus on identifying and characterizing potential security vulnerabilities in the product. Known vulnerability testing shall be based upon, at a minimum, recent contents of an established, industry-recognized, public source for known vulnerabilities. Testing shall include:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "3af63c1e9ba09ab7d4a48f04454f5b45bfcc8cda6db16558691449dfec5b2795"
        { 
            chunk_id "IEC-62443-4-1:2020/SVV-3/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SVV-3"
            parent_id "IEC-62443-4-1:2020/SVV-3"
            group_id "IEC-62443-4-1:2020/SVV-3[p32]"
            seq 2
            normative true
            text_normative "A process shall be employed for performing tests that focus on identifying and characterizing potential security vulnerabilities in the product. Known vulnerability testing shall be based upon, at a minimum, recent contents of an established, industry-recognized, public source for known vulnerabilities. Testing shall include: a) abuse case or malformed or unexpected input testing focused on uncovering security issues (fuzz testing and network traffic load)."
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SVV-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Vulnerability testing"
                rationale "Void."
                clause "9.4"
                page "32"
            sha256 "8ea2f539ebb64fe257b3d715c3486e338a520574719a4bcf349408aaeb71f508"
        { 
            chunk_id "IEC-62443-4-1:2020/SVV-3/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SVV-3"
            parent_id "IEC-62443-4-1:2020/SVV-3"
            group_id "IEC-62443-4-1:2020/SVV-3[p32]"
            seq 3
            normative true
            text_normative "A process shall be employed for performing tests that focus on identifying and characterizing potential security vulnerabilities in the product. Known vulnerability testing shall be based upon, at a minimum, recent contents of an established, industry-recognized, public source for known vulnerabilities. Testing shall include: b) attack surface."
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SVV-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Vulnerability testing"
                rationale "Void."
                clause "9.4"
                page "32"
            sha256 "7acd1ff33f545fefb8d31de35dc142959c7fc0f69bb884c2c19c25164fc4babd"
        { 
            chunk_id "IEC-62443-4-1:2020/SVV-3/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "SVV-3"
            parent_id "IEC-62443-4-1:2020/SVV-3"
            group_id "IEC-62443-4-1:2020/SVV-3[p32]"
            seq 4
            normative true
            text_normative "A process shall be employed for performing tests that focus on identifying and characterizing potential security vulnerabilities in the product. Known vulnerability testing shall be based upon, at a minimum, recent contents of an established, industry-recognized, public source for known vulnerabilities. Testing shall include: c) black box known vulnerability scanning focused on detecting known vulnerabilities in the product hardware, host or software components"
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/SVV-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Vulnerability testing"
                rationale "Void."
                clause "9.4"
                page "32"
            sha256 "d5997b637e33fac8c67c388c70f4b5bee72b2df934fca50a9116da65fb77fd09"
        { 
            chunk_id "IEC-62443-4-1:2020/SVV-3/d"
            doc_id "IEC-62443-4-1:2020"
            section_path "SVV-3"
            parent_id "IEC-62443-4-1:2020/SVV-3"
            group_id "IEC-62443-4-1:2020/SVV-3[p32]"
            seq 5
            normative true
            text_normative "A process shall be employed for performing tests that focus on identifying and characterizing potential security vulnerabilities in the product. Known vulnerability testing shall be based upon, at a minimum, recent contents of an established, industry-recognized, public source for known vulnerabilities. Testing shall include: d) for compiled software, software composition analysis on all binary executable files, including embedded firmware, delivered by the supplier to be installed for a product."
            ordinal "d"
            inherits_from "IEC-62443-4-1:2020/SVV-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Vulnerability testing"
                rationale "Void."
                clause "9.4"
                page "32"
            sha256 "9ac41b6483fd1ea159e0972f0b081c15219117852bccb769a464de2a023cd7a0"
        { 
            chunk_id "IEC-62443-4-1:2020/SVV-3/e"
            doc_id "IEC-62443-4-1:2020"
            section_path "SVV-3"
            parent_id "IEC-62443-4-1:2020/SVV-3"
            group_id "IEC-62443-4-1:2020/SVV-3[p32]"
            seq 6
            normative true
            text_normative "A process shall be employed for performing tests that focus on identifying and characterizing potential security vulnerabilities in the product. Known vulnerability testing shall be based upon, at a minimum, recent contents of an established, industry-recognized, public source for known vulnerabilities. Testing shall include: e) dynamic runtime resource management testing that detects flaws not visible under static code analysis, including but not limited to denial of service conditions (e.g., memory leaks)."
            ordinal "e"
            inherits_from "IEC-62443-4-1:2020/SVV-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Vulnerability testing"
                rationale "Void."
                clause "9.4"
                page "32"
            sha256 "e49710d59dfd3167a97e1f292b81293fa9a34273ca13e1af0e473ce3b2b9d507"
        { 
            chunk_id "IEC-62443-4-1:2020/SVV-4"
            doc_id "IEC-62443-4-1:2020"
            section_path "SVV-4"
            parent_id null
            group_id "IEC-62443-4-1:2020/SVV-4[p32]"
            seq 1
            normative true
            informative false
            text_normative "A process shall be employed to identify and characterize security-related issues via tests that focus on discovering and exploiting security vulnerabilities in the product."
            context_note null
            { context
                name "Penetration testing"
                rationale "Penetration testing focuses specifically on compromising the confidentiality, integrity or availability of the product. It can involve defeating multiple aspects of the defense in depth design. For example, bypassing authentication to access the product, using elevation of privilege to gain administrative access and then compromising confidentiality by breaking encryption. As this example shows, penetration testing involves approaching testing like an attacker and often involves exploiting chained vulnerabilities in a product. This process is required to ensure that efforts have been taken to discover security-related issues in the product or product documentation that could allow the product to be exploited. Having this process means that the product supplier attempts to breach the security of the product through penetration testing. Penetration testing consists of confirm ing that vulnerabilities in any product capability or the defense in depth strategy can be exploited and used to compromise security of the product. It requires in depth knowledge of the type of product being tested along with security testing tools and techniques. Penetration testing can involve the use of manual techniques, test tools or combinations of the two."
                clause "9.5"
                page "32"
            sha256 "42b4aa89cbbe164e964d9a8dc7299de10acc555f3e5fe37035f064d6d706925d"
        { 
            chunk_id "IEC-62443-4-1:2020/SVV-5"
            doc_id "IEC-62443-4-1:2020"
            section_path "SVV-5"
            parent_id null
            group_id "IEC-62443-4-1:2020/SVV-5[p32]"
            seq 1
            normative true
            informative false
            text_normative "A process shall be employed to ensure that individuals performing testing are independent from the developers who designed and implemented the product according to Table 3. Table 3 – Required level of independence of testers from developers Test type | Reference | Level of independence Security requirements testing | SVV-1 – security requirements testing | Independent department Threat mitigation testing | SVV-2 – Threat mitigation testing | Independent department Abuse case testing | SVV-3 – vulnerability testing | Independent person Static code analysis | SI-1 – Security implementation review | None Attack surface analysis | SVV-3 – vulnerability testing | Independent person Known vulnerability scanning | SVV-3 – vulnerability testing | Independent person Software composition analysis | SVV-3 – vulnerability testing | None Penetration testing | SVV-4 – Penetration testing | Independent department or organization The levels of independence are defined as follows: None – no independence required. Developer can perform the testing. Independent person – the person who performs the testing cannot be one of the developers of the product. Independent department – the person who performs the testing cannot report to the same fi rst line manager as any developers of the product. Al ternatively, they could be a member of a qua l ity assurance (QA) department. Independent organization – the person who performs the testing cannot be part of the same organization as any developers of the product. An organization can be a separate l egal en ti ty, a d i vi s ion of a company or a departmen t of a company that reports to a different executive such as a vice president or s im i lar level."
            context_note null
            { context
                name "Independence of testers"
                rationale "An independent tester can often find out more, other and different defects than a tester working within a programming team – or a tester who is by profession a programmer. Such a tester brings a different set of assumptions to testing and to reviews, which often helps in exposing the hidden defects and problems. In addition, an independent tester who reports to senior management can report his results honestly and without any concern for reprisal that might result from pointing out problems in co-workers’ or, worse yet, the manager’s work. Add itional security defects can often be found when a tester’s black-box level knowledge of the product is supplemented with whi te-box level knowledge of a developer acting as an advisor to the tester."
                clause "9.6"
                page "32"
            sha256 "c9f478849faa0428d22a4cdeedeb80c74dbf70085b4c8e5da5520794e6b702ee"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-1"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-1"
            parent_id null
            group_id "IEC-62443-4-1:2020/DM-1[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall exist for receiving and tracking to closure security-related issues in the product reported by internal and external sources including at a minimum:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "5bb2dab1dab9d39cc19620c6eb483d32a6f938a2c78bbc21e59f83e4d0a3e997"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-1/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-1"
            parent_id "IEC-62443-4-1:2020/DM-1"
            group_id "IEC-62443-4-1:2020/DM-1[p32]"
            seq 2
            normative true
            text_normative "A process shall exist for receiving and tracking to closure security-related issues in the product reported by internal and external sources including at a minimum: a) security verification and validation testers;"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/DM-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Receiving notifications of security-related issues"
                rationale "This process is required to ensure that security-related issues/defects discovered by any organization within the product supplier or external organizations (for example, product users and security researchers) can be reported to the product supplier and tracked to closure. Having this process means that the product supplier defined instructions for reporting security-related issues (see ISO/IEC 30111[23]) to it. For reports from external entities, the product supplier will have incident response processes such as those identified in ISO/IEC 291 47 [22] for receiving vulnerability reports about supported products and interacting with the entity that reported the issue. Guidelines for reporting security-related issues are to be readily accessible to each of the potential internal and external sources of these reports. Awareness training, product documentation and support websites are all potential ways to communicate this information. These guidelines include: a) in formation needed to facilitate validation; b) how to protect the confidential ity of and access to the in formation being reported; c) the degree of communications with the enti ty that reported the security-related issue; d) timelines for reporting internally d i scovered security-related issues in released products; and e) a strategy for handling third-party component vulnerabilities discovered internally."
                clause "10.2"
                page "32"
            sha256 "981475234a111f6c2dea70172ffdbaa75792274efa9906922cd53dd6de4d3b1d"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-1/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-1"
            parent_id "IEC-62443-4-1:2020/DM-1"
            group_id "IEC-62443-4-1:2020/DM-1[p32]"
            seq 3
            normative true
            text_normative "A process shall exist for receiving and tracking to closure security-related issues in the product reported by internal and external sources including at a minimum: b) suppliers of third-party components used in the product;"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/DM-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Receiving notifications of security-related issues"
                rationale "This process is required to ensure that security-related issues/defects discovered by any organization within the product supplier or external organizations (for example, product users and security researchers) can be reported to the product supplier and tracked to closure. Having this process means that the product supplier defined instructions for reporting security-related issues (see ISO/IEC 30111[23]) to it. For reports from external entities, the product supplier will have incident response processes such as those identified in ISO/IEC 291 47 [22] for receiving vulnerability reports about supported products and interacting with the entity that reported the issue. Guidelines for reporting security-related issues are to be readily accessible to each of the potential internal and external sources of these reports. Awareness training, product documentation and support websites are all potential ways to communicate this information. These guidelines include: a) in formation needed to facilitate validation; b) how to protect the confidential ity of and access to the in formation being reported; c) the degree of communications with the enti ty that reported the security-related issue; d) timelines for reporting internally d i scovered security-related issues in released products; and e) a strategy for handling third-party component vulnerabilities discovered internally."
                clause "10.2"
                page "32"
            sha256 "fcf525bbcd1fe3a605e70315b4204470c364d8e781ffb456679446beb01ccf94"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-1/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-1"
            parent_id "IEC-62443-4-1:2020/DM-1"
            group_id "IEC-62443-4-1:2020/DM-1[p32]"
            seq 4
            normative true
            text_normative "A process shall exist for receiving and tracking to closure security-related issues in the product reported by internal and external sources including at a minimum: c) product developers and testers; and"
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/DM-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Receiving notifications of security-related issues"
                rationale "This process is required to ensure that security-related issues/defects discovered by any organization within the product supplier or external organizations (for example, product users and security researchers) can be reported to the product supplier and tracked to closure. Having this process means that the product supplier defined instructions for reporting security-related issues (see ISO/IEC 30111[23]) to it. For reports from external entities, the product supplier will have incident response processes such as those identified in ISO/IEC 291 47 [22] for receiving vulnerability reports about supported products and interacting with the entity that reported the issue. Guidelines for reporting security-related issues are to be readily accessible to each of the potential internal and external sources of these reports. Awareness training, product documentation and support websites are all potential ways to communicate this information. These guidelines include: a) in formation needed to facilitate validation; b) how to protect the confidential ity of and access to the in formation being reported; c) the degree of communications with the enti ty that reported the security-related issue; d) timelines for reporting internally d i scovered security-related issues in released products; and e) a strategy for handling third-party component vulnerabilities discovered internally."
                clause "10.2"
                page "32"
            sha256 "280da844d33946fe3e1d8939f8efa7b9aa0f4e0d0a552a87d619013789cb2e99"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-1/d"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-1"
            parent_id "IEC-62443-4-1:2020/DM-1"
            group_id "IEC-62443-4-1:2020/DM-1[p32]"
            seq 5
            normative true
            text_normative "A process shall exist for receiving and tracking to closure security-related issues in the product reported by internal and external sources including at a minimum: d) product users including integrators, asset owners, and maintenance personnel."
            ordinal "d"
            inherits_from "IEC-62443-4-1:2020/DM-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Receiving notifications of security-related issues"
                rationale "This process is required to ensure that security-related issues/defects discovered by any organization within the product supplier or external organizations (for example, product users and security researchers) can be reported to the product supplier and tracked to closure. Having this process means that the product supplier defined instructions for reporting security-related issues (see ISO/IEC 30111[23]) to it. For reports from external entities, the product supplier will have incident response processes such as those identified in ISO/IEC 291 47 [22] for receiving vulnerability reports about supported products and interacting with the entity that reported the issue. Guidelines for reporting security-related issues are to be readily accessible to each of the potential internal and external sources of these reports. Awareness training, product documentation and support websites are all potential ways to communicate this information. These guidelines include: a) in formation needed to facilitate validation; b) how to protect the confidential ity of and access to the in formation being reported; c) the degree of communications with the enti ty that reported the security-related issue; d) timelines for reporting internally d i scovered security-related issues in released products; and e) a strategy for handling third-party component vulnerabilities discovered internally."
                clause "10.2"
                page "32"
            sha256 "f8a1ff8f3b66aafd0ae9fa0435c925c087ed2a89111d728dafc5e2b1d336707c"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-2"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-2"
            parent_id null
            group_id "IEC-62443-4-1:2020/DM-2[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall exist for ensuring that reported security-related issues are investigated in a timely manner to determine their:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "5927a3d6a4614635f9f29aed550db830315bc0a6201a83948beb62fb65883812"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-2/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-2"
            parent_id "IEC-62443-4-1:2020/DM-2"
            group_id "IEC-62443-4-1:2020/DM-2[p32]"
            seq 2
            normative true
            text_normative "A process shall exist for ensuring that reported security-related issues are investigated in a timely manner to determine their: a) applicability to the product;"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/DM-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Reviewing security-related issues"
                rationale "This process is required to ensure that security-related issues reported to the product supplier are examined to determine that they are applicable to the product, are verifiable, and that the cause of the issue (such as the threat(s)) is understood. Having this process means that the product supplier verifies all security issues reported to it. Perceived security-related issues can be unsubstan tiated or not applicable to the product, so there needs to be a process to verify and exam ine reported vulnerabilities (see ISO/IEC 301 1 1). For security-related issues in components maintained by the product developer, this process can involve such activities as attempting to reproduce the reported vulnerability or examining the third-party embedded source code’s usage within the product. For security-related issues in components maintained by a third-party, this process can be as stra igh tforward as comparing the version of the third-party binary with the versions to which the patch applies."
                clause "10.3"
                page "32"
            sha256 "2cbba9ca7dc7f6f8ab32f49133524d8c571cc1a121118093803394c8c23f038a"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-2/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-2"
            parent_id "IEC-62443-4-1:2020/DM-2"
            group_id "IEC-62443-4-1:2020/DM-2[p32]"
            seq 3
            normative true
            text_normative "A process shall exist for ensuring that reported security-related issues are investigated in a timely manner to determine their: b) verifiability; and"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/DM-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Reviewing security-related issues"
                rationale "This process is required to ensure that security-related issues reported to the product supplier are examined to determine that they are applicable to the product, are verifiable, and that the cause of the issue (such as the threat(s)) is understood. Having this process means that the product supplier verifies all security issues reported to it. Perceived security-related issues can be unsubstan tiated or not applicable to the product, so there needs to be a process to verify and exam ine reported vulnerabilities (see ISO/IEC 301 1 1). For security-related issues in components maintained by the product developer, this process can involve such activities as attempting to reproduce the reported vulnerability or examining the third-party embedded source code’s usage within the product. For security-related issues in components maintained by a third-party, this process can be as stra igh tforward as comparing the version of the third-party binary with the versions to which the patch applies."
                clause "10.3"
                page "32"
            sha256 "7f456f6cba2c824dcadb063e62ecac5b3f16529f5ce321937dd45159e19fe853"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-2/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-2"
            parent_id "IEC-62443-4-1:2020/DM-2"
            group_id "IEC-62443-4-1:2020/DM-2[p32]"
            seq 4
            normative true
            text_normative "A process shall exist for ensuring that reported security-related issues are investigated in a timely manner to determine their: c) threats that trigger the issue."
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/DM-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Reviewing security-related issues"
                rationale "This process is required to ensure that security-related issues reported to the product supplier are examined to determine that they are applicable to the product, are verifiable, and that the cause of the issue (such as the threat(s)) is understood. Having this process means that the product supplier verifies all security issues reported to it. Perceived security-related issues can be unsubstan tiated or not applicable to the product, so there needs to be a process to verify and exam ine reported vulnerabilities (see ISO/IEC 301 1 1). For security-related issues in components maintained by the product developer, this process can involve such activities as attempting to reproduce the reported vulnerability or examining the third-party embedded source code’s usage within the product. For security-related issues in components maintained by a third-party, this process can be as stra igh tforward as comparing the version of the third-party binary with the versions to which the patch applies."
                clause "10.3"
                page "32"
            sha256 "194214c1bff71ef9cb765e74a5ff993977ed7a8c3b2aa46dc28b6975b306ae82"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-3"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-3"
            parent_id null
            group_id "IEC-62443-4-1:2020/DM-3[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed for analysing security-related issues in the product to include:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "7683e547df24432e2b82fd9072c30487353b817c382621d0f4ac1a47c09736a1"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-3/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-3"
            parent_id "IEC-62443-4-1:2020/DM-3"
            group_id "IEC-62443-4-1:2020/DM-3[p32]"
            seq 2
            normative true
            text_normative "A process shall be employed for analysing security-related issues in the product to include: a) assessing their impact with respect to:"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/DM-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Assessing security-related issues"
                rationale "This process is required to ensure that the potential impact of security-related design issues is examined and understood to support decis ions related to how they will be addressed. Having this process means that the product supplier assesses the potential impact and severity of each security-related issue, determines whether the issues exist in other products or versions (for example, by using the same or similar components) and identifies the root causes of the issue. Completing such an assessment provides the basis for determining how to address the issue (see 1 0.5), and which development life-cycle processes, such as redesign activi ti es and threat model updates, may be involved in the resolution. Verifiable security-related issues can vary widely in their security impact and their distribution within the product, so there needs to be a process for characterizing each issue so that an appropriate resolution can be determined. It is recommended that the process identify conditions that would exit the security defect management process such as duplicate, non-security, and third-party security-related issues (see ISO/IEC 301 1 1). The impact assessment should also take into consideration additional factors such as the scope of affected product users, the potential for collateral damage, the availability of exploits and (for control systems) the potential impact to essential functions (see IEC 62443-3-3). The impact assessment may be as simple as a qualitative rating (for example, low, medium and high), a more quantitative method based on likelihood and consequence or a standardized method such as the CVSS. A security-related issue that is associated with a widely used design pattern or implementation method can be symptomatic of a larger problem. In such a situation, the impact assessment associated with the vulnerability should address the combined impact of all instances rather than dealing with each instance in isolation."
                clause "10.4"
                page "32"
            sha256 "90bd7141c20b488f835eef1ea77e4dd58960d8f38a022202f44e59c702fcc0e8"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-3/1"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-3"
            parent_id "IEC-62443-4-1:2020/DM-3"
            group_id "IEC-62443-4-1:2020/DM-3[p32]"
            seq 3
            normative true
            text_normative "A process shall be employed for analysing security-related issues in the product to include: 1) the actual security context in which they were discovered;"
            ordinal "1"
            inherits_from "IEC-62443-4-1:2020/DM-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Assessing security-related issues"
                rationale "This process is required to ensure that the potential impact of security-related design issues is examined and understood to support decis ions related to how they will be addressed. Having this process means that the product supplier assesses the potential impact and severity of each security-related issue, determines whether the issues exist in other products or versions (for example, by using the same or similar components) and identifies the root causes of the issue. Completing such an assessment provides the basis for determining how to address the issue (see 1 0.5), and which development life-cycle processes, such as redesign activi ti es and threat model updates, may be involved in the resolution. Verifiable security-related issues can vary widely in their security impact and their distribution within the product, so there needs to be a process for characterizing each issue so that an appropriate resolution can be determined. It is recommended that the process identify conditions that would exit the security defect management process such as duplicate, non-security, and third-party security-related issues (see ISO/IEC 301 1 1). The impact assessment should also take into consideration additional factors such as the scope of affected product users, the potential for collateral damage, the availability of exploits and (for control systems) the potential impact to essential functions (see IEC 62443-3-3). The impact assessment may be as simple as a qualitative rating (for example, low, medium and high), a more quantitative method based on likelihood and consequence or a standardized method such as the CVSS. A security-related issue that is associated with a widely used design pattern or implementation method can be symptomatic of a larger problem. In such a situation, the impact assessment associated with the vulnerability should address the combined impact of all instances rather than dealing with each instance in isolation."
                clause "10.4"
                page "32"
            sha256 "fb68b675988600bb6c353238635785cb998e5494f124fa5837b8d5477c01a58a"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-3/2"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-3"
            parent_id "IEC-62443-4-1:2020/DM-3"
            group_id "IEC-62443-4-1:2020/DM-3[p32]"
            seq 4
            normative true
            text_normative "A process shall be employed for analysing security-related issues in the product to include: 2) the product’s security context; and"
            ordinal "2"
            inherits_from "IEC-62443-4-1:2020/DM-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Assessing security-related issues"
                rationale "This process is required to ensure that the potential impact of security-related design issues is examined and understood to support decis ions related to how they will be addressed. Having this process means that the product supplier assesses the potential impact and severity of each security-related issue, determines whether the issues exist in other products or versions (for example, by using the same or similar components) and identifies the root causes of the issue. Completing such an assessment provides the basis for determining how to address the issue (see 1 0.5), and which development life-cycle processes, such as redesign activi ti es and threat model updates, may be involved in the resolution. Verifiable security-related issues can vary widely in their security impact and their distribution within the product, so there needs to be a process for characterizing each issue so that an appropriate resolution can be determined. It is recommended that the process identify conditions that would exit the security defect management process such as duplicate, non-security, and third-party security-related issues (see ISO/IEC 301 1 1). The impact assessment should also take into consideration additional factors such as the scope of affected product users, the potential for collateral damage, the availability of exploits and (for control systems) the potential impact to essential functions (see IEC 62443-3-3). The impact assessment may be as simple as a qualitative rating (for example, low, medium and high), a more quantitative method based on likelihood and consequence or a standardized method such as the CVSS. A security-related issue that is associated with a widely used design pattern or implementation method can be symptomatic of a larger problem. In such a situation, the impact assessment associated with the vulnerability should address the combined impact of all instances rather than dealing with each instance in isolation."
                clause "10.4"
                page "32"
            sha256 "7759e5c8f8590f8f81df976fff8443c2d7ccf97153e5b5ace7577a26e3f9e53e"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-3/3"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-3"
            parent_id "IEC-62443-4-1:2020/DM-3"
            group_id "IEC-62443-4-1:2020/DM-3[p32]"
            seq 5
            normative true
            text_normative "A process shall be employed for analysing security-related issues in the product to include: 3) the product’s defense in depth strategy ;"
            ordinal "3"
            inherits_from "IEC-62443-4-1:2020/DM-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Assessing security-related issues"
                rationale "This process is required to ensure that the potential impact of security-related design issues is examined and understood to support decis ions related to how they will be addressed. Having this process means that the product supplier assesses the potential impact and severity of each security-related issue, determines whether the issues exist in other products or versions (for example, by using the same or similar components) and identifies the root causes of the issue. Completing such an assessment provides the basis for determining how to address the issue (see 1 0.5), and which development life-cycle processes, such as redesign activi ti es and threat model updates, may be involved in the resolution. Verifiable security-related issues can vary widely in their security impact and their distribution within the product, so there needs to be a process for characterizing each issue so that an appropriate resolution can be determined. It is recommended that the process identify conditions that would exit the security defect management process such as duplicate, non-security, and third-party security-related issues (see ISO/IEC 301 1 1). The impact assessment should also take into consideration additional factors such as the scope of affected product users, the potential for collateral damage, the availability of exploits and (for control systems) the potential impact to essential functions (see IEC 62443-3-3). The impact assessment may be as simple as a qualitative rating (for example, low, medium and high), a more quantitative method based on likelihood and consequence or a standardized method such as the CVSS. A security-related issue that is associated with a widely used design pattern or implementation method can be symptomatic of a larger problem. In such a situation, the impact assessment associated with the vulnerability should address the combined impact of all instances rather than dealing with each instance in isolation."
                clause "10.4"
                page "32"
            sha256 "34d2fc4681bc3a76563c246c17c878cac07a1832dcac49c9d07313f21d9cf0e1"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-3/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-3"
            parent_id "IEC-62443-4-1:2020/DM-3"
            group_id "IEC-62443-4-1:2020/DM-3[p32]"
            seq 6
            normative true
            text_normative "A process shall be employed for analysing security-related issues in the product to include: b) severity as defined by a vulnerability scoring system (for example, CVSS);"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/DM-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Assessing security-related issues"
                rationale "This process is required to ensure that the potential impact of security-related design issues is examined and understood to support decis ions related to how they will be addressed. Having this process means that the product supplier assesses the potential impact and severity of each security-related issue, determines whether the issues exist in other products or versions (for example, by using the same or similar components) and identifies the root causes of the issue. Completing such an assessment provides the basis for determining how to address the issue (see 1 0.5), and which development life-cycle processes, such as redesign activi ti es and threat model updates, may be involved in the resolution. Verifiable security-related issues can vary widely in their security impact and their distribution within the product, so there needs to be a process for characterizing each issue so that an appropriate resolution can be determined. It is recommended that the process identify conditions that would exit the security defect management process such as duplicate, non-security, and third-party security-related issues (see ISO/IEC 301 1 1). The impact assessment should also take into consideration additional factors such as the scope of affected product users, the potential for collateral damage, the availability of exploits and (for control systems) the potential impact to essential functions (see IEC 62443-3-3). The impact assessment may be as simple as a qualitative rating (for example, low, medium and high), a more quantitative method based on likelihood and consequence or a standardized method such as the CVSS. A security-related issue that is associated with a widely used design pattern or implementation method can be symptomatic of a larger problem. In such a situation, the impact assessment associated with the vulnerability should address the combined impact of all instances rather than dealing with each instance in isolation."
                clause "10.4"
                page "32"
            sha256 "4d1651dc050219a1a2646f8041bf88d78dfdeb916014f971152be5b5d7c0ffe8"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-3/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-3"
            parent_id "IEC-62443-4-1:2020/DM-3"
            group_id "IEC-62443-4-1:2020/DM-3[p32]"
            seq 7
            normative true
            text_normative "A process shall be employed for analysing security-related issues in the product to include: c) identifying all other products/product versions containing the security-related issue (if any);"
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/DM-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Assessing security-related issues"
                rationale "This process is required to ensure that the potential impact of security-related design issues is examined and understood to support decis ions related to how they will be addressed. Having this process means that the product supplier assesses the potential impact and severity of each security-related issue, determines whether the issues exist in other products or versions (for example, by using the same or similar components) and identifies the root causes of the issue. Completing such an assessment provides the basis for determining how to address the issue (see 1 0.5), and which development life-cycle processes, such as redesign activi ti es and threat model updates, may be involved in the resolution. Verifiable security-related issues can vary widely in their security impact and their distribution within the product, so there needs to be a process for characterizing each issue so that an appropriate resolution can be determined. It is recommended that the process identify conditions that would exit the security defect management process such as duplicate, non-security, and third-party security-related issues (see ISO/IEC 301 1 1). The impact assessment should also take into consideration additional factors such as the scope of affected product users, the potential for collateral damage, the availability of exploits and (for control systems) the potential impact to essential functions (see IEC 62443-3-3). The impact assessment may be as simple as a qualitative rating (for example, low, medium and high), a more quantitative method based on likelihood and consequence or a standardized method such as the CVSS. A security-related issue that is associated with a widely used design pattern or implementation method can be symptomatic of a larger problem. In such a situation, the impact assessment associated with the vulnerability should address the combined impact of all instances rather than dealing with each instance in isolation."
                clause "10.4"
                page "32"
            sha256 "bd31565a195ea7e79ba059febbd24e8675f5eed538635cfe1e64e91e98890e2e"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-3/d"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-3"
            parent_id "IEC-62443-4-1:2020/DM-3"
            group_id "IEC-62443-4-1:2020/DM-3[p32]"
            seq 8
            normative true
            text_normative "A process shall be employed for analysing security-related issues in the product to include: d) identifying the root causes of the issue; and"
            ordinal "d"
            inherits_from "IEC-62443-4-1:2020/DM-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Assessing security-related issues"
                rationale "This process is required to ensure that the potential impact of security-related design issues is examined and understood to support decis ions related to how they will be addressed. Having this process means that the product supplier assesses the potential impact and severity of each security-related issue, determines whether the issues exist in other products or versions (for example, by using the same or similar components) and identifies the root causes of the issue. Completing such an assessment provides the basis for determining how to address the issue (see 1 0.5), and which development life-cycle processes, such as redesign activi ti es and threat model updates, may be involved in the resolution. Verifiable security-related issues can vary widely in their security impact and their distribution within the product, so there needs to be a process for characterizing each issue so that an appropriate resolution can be determined. It is recommended that the process identify conditions that would exit the security defect management process such as duplicate, non-security, and third-party security-related issues (see ISO/IEC 301 1 1). The impact assessment should also take into consideration additional factors such as the scope of affected product users, the potential for collateral damage, the availability of exploits and (for control systems) the potential impact to essential functions (see IEC 62443-3-3). The impact assessment may be as simple as a qualitative rating (for example, low, medium and high), a more quantitative method based on likelihood and consequence or a standardized method such as the CVSS. A security-related issue that is associated with a widely used design pattern or implementation method can be symptomatic of a larger problem. In such a situation, the impact assessment associated with the vulnerability should address the combined impact of all instances rather than dealing with each instance in isolation."
                clause "10.4"
                page "32"
            sha256 "3347e9135f5a889812b5e0bb6220e00ee5ea02b9f54fb3e75adfa6f0a91aa0c5"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-3/e"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-3"
            parent_id "IEC-62443-4-1:2020/DM-3"
            group_id "IEC-62443-4-1:2020/DM-3[p32]"
            seq 9
            normative true
            text_normative "A process shall be employed for analysing security-related issues in the product to include: e) identifying related security issues."
            ordinal "e"
            inherits_from "IEC-62443-4-1:2020/DM-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Assessing security-related issues"
                rationale "This process is required to ensure that the potential impact of security-related design issues is examined and understood to support decis ions related to how they will be addressed. Having this process means that the product supplier assesses the potential impact and severity of each security-related issue, determines whether the issues exist in other products or versions (for example, by using the same or similar components) and identifies the root causes of the issue. Completing such an assessment provides the basis for determining how to address the issue (see 1 0.5), and which development life-cycle processes, such as redesign activi ti es and threat model updates, may be involved in the resolution. Verifiable security-related issues can vary widely in their security impact and their distribution within the product, so there needs to be a process for characterizing each issue so that an appropriate resolution can be determined. It is recommended that the process identify conditions that would exit the security defect management process such as duplicate, non-security, and third-party security-related issues (see ISO/IEC 301 1 1). The impact assessment should also take into consideration additional factors such as the scope of affected product users, the potential for collateral damage, the availability of exploits and (for control systems) the potential impact to essential functions (see IEC 62443-3-3). The impact assessment may be as simple as a qualitative rating (for example, low, medium and high), a more quantitative method based on likelihood and consequence or a standardized method such as the CVSS. A security-related issue that is associated with a widely used design pattern or implementation method can be symptomatic of a larger problem. In such a situation, the impact assessment associated with the vulnerability should address the combined impact of all instances rather than dealing with each instance in isolation."
                clause "10.4"
                page "32"
            sha256 "72f6d326bcc0174e4691d82bd7dc15692e9942ef9f28407b1412c399f518e9a0"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-4"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-4"
            parent_id null
            group_id "IEC-62443-4-1:2020/DM-4[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed for addressing security-related issues and determining whether to report them based on the results of the impact assessment. The supplier shall establish an acceptable level of residual risk that shall be applied when determining appropriate way to address each issue. Options include one or more of the following:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "cab74e4ea52f5151e52594d87c73fe07dd4fccfe6e2b8104f1a21e1e93ab8fc8"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-4/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-4"
            parent_id "IEC-62443-4-1:2020/DM-4"
            group_id "IEC-62443-4-1:2020/DM-4[p32]"
            seq 2
            normative true
            text_normative "A process shall be employed for addressing security-related issues and determining whether to report them based on the results of the impact assessment. The supplier shall establish an acceptable level of residual risk that shall be applied when determining appropriate way to address each issue. Options include one or more of the following: a) fixing the issue through one or more of the following:"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/DM-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Addressing security-related issues"
                rationale "This process is required to ensure that a determination is made for how to handle (address) each security-related issue and that no security-related issue is inadvertently overlooked or ignored. Having this process means that the product supplier reviews the potential residual risk of each security-related issue and makes a justifiable decision for how to handle (address) it. Residual risk can be determined using many different methods. An example would be to start with CVSS score, but then add other security controls and countermeasures not accounted for in CVSS such as whether the issue is applicable to the product’s security context. The process for deciding upon and implementing a resolution to a security-related issue needs to address these considerations (see ISO/IEC 301 1 1) because of their potential impact: a) a proposed resolution can violate a premise of the secure design that other aspects of the product rely upon; b) a proposed resolution can be unnecessary because of a m ismatch between the reporting entity’ s security context and the product security context; c) a proposed resolution can only partially reduce the impact of the security-related issue, may take an unacceptably long time to implement because of its complexi ty, or may be so unusable that it is likely to be disabled; and d) a proposed resolution can introduce side-effects that are unacceptable. Timeliness for determining and implementing a resolution based on the impact of the security-related issue will typically align with market forces and may drive establishment of clear interfaces to related organizational processes (for example, legal, customer service and public relations) to avoid unnecessary delays."
                clause "10.5"
                page "32"
            sha256 "a98e6d445b4164b7cc4e24eb96e883cbb51f21fad1f8047858e1ba875b6a8e07"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-4/1"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-4"
            parent_id "IEC-62443-4-1:2020/DM-4"
            group_id "IEC-62443-4-1:2020/DM-4[p32]"
            seq 3
            normative true
            text_normative "A process shall be employed for addressing security-related issues and determining whether to report them based on the results of the impact assessment. The supplier shall establish an acceptable level of residual risk that shall be applied when determining appropriate way to address each issue. Options include one or more of the following: 1) defense in depth strategy or design change;"
            ordinal "1"
            inherits_from "IEC-62443-4-1:2020/DM-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Addressing security-related issues"
                rationale "This process is required to ensure that a determination is made for how to handle (address) each security-related issue and that no security-related issue is inadvertently overlooked or ignored. Having this process means that the product supplier reviews the potential residual risk of each security-related issue and makes a justifiable decision for how to handle (address) it. Residual risk can be determined using many different methods. An example would be to start with CVSS score, but then add other security controls and countermeasures not accounted for in CVSS such as whether the issue is applicable to the product’s security context. The process for deciding upon and implementing a resolution to a security-related issue needs to address these considerations (see ISO/IEC 301 1 1) because of their potential impact: a) a proposed resolution can violate a premise of the secure design that other aspects of the product rely upon; b) a proposed resolution can be unnecessary because of a m ismatch between the reporting entity’ s security context and the product security context; c) a proposed resolution can only partially reduce the impact of the security-related issue, may take an unacceptably long time to implement because of its complexi ty, or may be so unusable that it is likely to be disabled; and d) a proposed resolution can introduce side-effects that are unacceptable. Timeliness for determining and implementing a resolution based on the impact of the security-related issue will typically align with market forces and may drive establishment of clear interfaces to related organizational processes (for example, legal, customer service and public relations) to avoid unnecessary delays."
                clause "10.5"
                page "32"
            sha256 "10367e5ad219fa49c05c30857dca5cb3c2493a0263475ceb966978c4f30ddc67"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-4/2"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-4"
            parent_id "IEC-62443-4-1:2020/DM-4"
            group_id "IEC-62443-4-1:2020/DM-4[p32]"
            seq 4
            normative true
            text_normative "A process shall be employed for addressing security-related issues and determining whether to report them based on the results of the impact assessment. The supplier shall establish an acceptable level of residual risk that shall be applied when determining appropriate way to address each issue. Options include one or more of the following: 2) addition of one or more security requirements and/or capabilities;"
            ordinal "2"
            inherits_from "IEC-62443-4-1:2020/DM-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Addressing security-related issues"
                rationale "This process is required to ensure that a determination is made for how to handle (address) each security-related issue and that no security-related issue is inadvertently overlooked or ignored. Having this process means that the product supplier reviews the potential residual risk of each security-related issue and makes a justifiable decision for how to handle (address) it. Residual risk can be determined using many different methods. An example would be to start with CVSS score, but then add other security controls and countermeasures not accounted for in CVSS such as whether the issue is applicable to the product’s security context. The process for deciding upon and implementing a resolution to a security-related issue needs to address these considerations (see ISO/IEC 301 1 1) because of their potential impact: a) a proposed resolution can violate a premise of the secure design that other aspects of the product rely upon; b) a proposed resolution can be unnecessary because of a m ismatch between the reporting entity’ s security context and the product security context; c) a proposed resolution can only partially reduce the impact of the security-related issue, may take an unacceptably long time to implement because of its complexi ty, or may be so unusable that it is likely to be disabled; and d) a proposed resolution can introduce side-effects that are unacceptable. Timeliness for determining and implementing a resolution based on the impact of the security-related issue will typically align with market forces and may drive establishment of clear interfaces to related organizational processes (for example, legal, customer service and public relations) to avoid unnecessary delays."
                clause "10.5"
                page "32"
            sha256 "20bbb31d638e3dd837f50e0b6f9a0e44df7426b11577cc8193bce6144188db9e"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-4/3"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-4"
            parent_id "IEC-62443-4-1:2020/DM-4"
            group_id "IEC-62443-4-1:2020/DM-4[p32]"
            seq 5
            normative true
            text_normative "A process shall be employed for addressing security-related issues and determining whether to report them based on the results of the impact assessment. The supplier shall establish an acceptable level of residual risk that shall be applied when determining appropriate way to address each issue. Options include one or more of the following: 3) use of compensating mechanisms; and/or"
            ordinal "3"
            inherits_from "IEC-62443-4-1:2020/DM-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Addressing security-related issues"
                rationale "This process is required to ensure that a determination is made for how to handle (address) each security-related issue and that no security-related issue is inadvertently overlooked or ignored. Having this process means that the product supplier reviews the potential residual risk of each security-related issue and makes a justifiable decision for how to handle (address) it. Residual risk can be determined using many different methods. An example would be to start with CVSS score, but then add other security controls and countermeasures not accounted for in CVSS such as whether the issue is applicable to the product’s security context. The process for deciding upon and implementing a resolution to a security-related issue needs to address these considerations (see ISO/IEC 301 1 1) because of their potential impact: a) a proposed resolution can violate a premise of the secure design that other aspects of the product rely upon; b) a proposed resolution can be unnecessary because of a m ismatch between the reporting entity’ s security context and the product security context; c) a proposed resolution can only partially reduce the impact of the security-related issue, may take an unacceptably long time to implement because of its complexi ty, or may be so unusable that it is likely to be disabled; and d) a proposed resolution can introduce side-effects that are unacceptable. Timeliness for determining and implementing a resolution based on the impact of the security-related issue will typically align with market forces and may drive establishment of clear interfaces to related organizational processes (for example, legal, customer service and public relations) to avoid unnecessary delays."
                clause "10.5"
                page "32"
            sha256 "9bcf55b107920756b90c38ca545a8abd1a4200dfd611cdb4c83adf3d73322dec"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-4/4"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-4"
            parent_id "IEC-62443-4-1:2020/DM-4"
            group_id "IEC-62443-4-1:2020/DM-4[p32]"
            seq 6
            normative true
            text_normative "A process shall be employed for addressing security-related issues and determining whether to report them based on the results of the impact assessment. The supplier shall establish an acceptable level of residual risk that shall be applied when determining appropriate way to address each issue. Options include one or more of the following: 4) disabling or removing features;"
            ordinal "4"
            inherits_from "IEC-62443-4-1:2020/DM-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Addressing security-related issues"
                rationale "This process is required to ensure that a determination is made for how to handle (address) each security-related issue and that no security-related issue is inadvertently overlooked or ignored. Having this process means that the product supplier reviews the potential residual risk of each security-related issue and makes a justifiable decision for how to handle (address) it. Residual risk can be determined using many different methods. An example would be to start with CVSS score, but then add other security controls and countermeasures not accounted for in CVSS such as whether the issue is applicable to the product’s security context. The process for deciding upon and implementing a resolution to a security-related issue needs to address these considerations (see ISO/IEC 301 1 1) because of their potential impact: a) a proposed resolution can violate a premise of the secure design that other aspects of the product rely upon; b) a proposed resolution can be unnecessary because of a m ismatch between the reporting entity’ s security context and the product security context; c) a proposed resolution can only partially reduce the impact of the security-related issue, may take an unacceptably long time to implement because of its complexi ty, or may be so unusable that it is likely to be disabled; and d) a proposed resolution can introduce side-effects that are unacceptable. Timeliness for determining and implementing a resolution based on the impact of the security-related issue will typically align with market forces and may drive establishment of clear interfaces to related organizational processes (for example, legal, customer service and public relations) to avoid unnecessary delays."
                clause "10.5"
                page "32"
            sha256 "506532b61fc8e53874c9fceacb9790bcf96188aae690f4393c807f648c80a9bc"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-4/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-4"
            parent_id "IEC-62443-4-1:2020/DM-4"
            group_id "IEC-62443-4-1:2020/DM-4[p32]"
            seq 7
            normative true
            text_normative "A process shall be employed for addressing security-related issues and determining whether to report them based on the results of the impact assessment. The supplier shall establish an acceptable level of residual risk that shall be applied when determining appropriate way to address each issue. Options include one or more of the following: b) creating a remediation plan to fix the problem;"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/DM-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Addressing security-related issues"
                rationale "This process is required to ensure that a determination is made for how to handle (address) each security-related issue and that no security-related issue is inadvertently overlooked or ignored. Having this process means that the product supplier reviews the potential residual risk of each security-related issue and makes a justifiable decision for how to handle (address) it. Residual risk can be determined using many different methods. An example would be to start with CVSS score, but then add other security controls and countermeasures not accounted for in CVSS such as whether the issue is applicable to the product’s security context. The process for deciding upon and implementing a resolution to a security-related issue needs to address these considerations (see ISO/IEC 301 1 1) because of their potential impact: a) a proposed resolution can violate a premise of the secure design that other aspects of the product rely upon; b) a proposed resolution can be unnecessary because of a m ismatch between the reporting entity’ s security context and the product security context; c) a proposed resolution can only partially reduce the impact of the security-related issue, may take an unacceptably long time to implement because of its complexi ty, or may be so unusable that it is likely to be disabled; and d) a proposed resolution can introduce side-effects that are unacceptable. Timeliness for determining and implementing a resolution based on the impact of the security-related issue will typically align with market forces and may drive establishment of clear interfaces to related organizational processes (for example, legal, customer service and public relations) to avoid unnecessary delays."
                clause "10.5"
                page "32"
            sha256 "e8e3a7a5fd44532415e61ecba7d91364725a7edd715a7c02fc16d50b1f055c99"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-4/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-4"
            parent_id "IEC-62443-4-1:2020/DM-4"
            group_id "IEC-62443-4-1:2020/DM-4[p32]"
            seq 8
            normative true
            text_normative "A process shall be employed for addressing security-related issues and determining whether to report them based on the results of the impact assessment. The supplier shall establish an acceptable level of residual risk that shall be applied when determining appropriate way to address each issue. Options include one or more of the following: c) deferring the problem for future resolution (reapply this requirement at some time in the future) and specifying the reason(s) and associated risk(s);"
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/DM-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Addressing security-related issues"
                rationale "This process is required to ensure that a determination is made for how to handle (address) each security-related issue and that no security-related issue is inadvertently overlooked or ignored. Having this process means that the product supplier reviews the potential residual risk of each security-related issue and makes a justifiable decision for how to handle (address) it. Residual risk can be determined using many different methods. An example would be to start with CVSS score, but then add other security controls and countermeasures not accounted for in CVSS such as whether the issue is applicable to the product’s security context. The process for deciding upon and implementing a resolution to a security-related issue needs to address these considerations (see ISO/IEC 301 1 1) because of their potential impact: a) a proposed resolution can violate a premise of the secure design that other aspects of the product rely upon; b) a proposed resolution can be unnecessary because of a m ismatch between the reporting entity’ s security context and the product security context; c) a proposed resolution can only partially reduce the impact of the security-related issue, may take an unacceptably long time to implement because of its complexi ty, or may be so unusable that it is likely to be disabled; and d) a proposed resolution can introduce side-effects that are unacceptable. Timeliness for determining and implementing a resolution based on the impact of the security-related issue will typically align with market forces and may drive establishment of clear interfaces to related organizational processes (for example, legal, customer service and public relations) to avoid unnecessary delays."
                clause "10.5"
                page "32"
            sha256 "1526e09e16e8fd065e1aa7a04d12880f1942e6b8985a83307d159cb03cf9a1c8"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-4/d"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-4"
            parent_id "IEC-62443-4-1:2020/DM-4"
            group_id "IEC-62443-4-1:2020/DM-4[p32]"
            seq 9
            normative true
            text_normative "A process shall be employed for addressing security-related issues and determining whether to report them based on the results of the impact assessment. The supplier shall establish an acceptable level of residual risk that shall be applied when determining appropriate way to address each issue. Options include one or more of the following: d) not fixing the problem if the residual risk is below the established acceptable level of residual risk."
            ordinal "d"
            inherits_from "IEC-62443-4-1:2020/DM-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Addressing security-related issues"
                rationale "This process is required to ensure that a determination is made for how to handle (address) each security-related issue and that no security-related issue is inadvertently overlooked or ignored. Having this process means that the product supplier reviews the potential residual risk of each security-related issue and makes a justifiable decision for how to handle (address) it. Residual risk can be determined using many different methods. An example would be to start with CVSS score, but then add other security controls and countermeasures not accounted for in CVSS such as whether the issue is applicable to the product’s security context. The process for deciding upon and implementing a resolution to a security-related issue needs to address these considerations (see ISO/IEC 301 1 1) because of their potential impact: a) a proposed resolution can violate a premise of the secure design that other aspects of the product rely upon; b) a proposed resolution can be unnecessary because of a m ismatch between the reporting entity’ s security context and the product security context; c) a proposed resolution can only partially reduce the impact of the security-related issue, may take an unacceptably long time to implement because of its complexi ty, or may be so unusable that it is likely to be disabled; and d) a proposed resolution can introduce side-effects that are unacceptable. Timeliness for determining and implementing a resolution based on the impact of the security-related issue will typically align with market forces and may drive establishment of clear interfaces to related organizational processes (for example, legal, customer service and public relations) to avoid unnecessary delays."
                clause "10.5"
                page "32"
            sha256 "5c097b6a0c7d5ea7477073ca48250cd0f49e49f43ab11a0cc18dca8759312ef9"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-4/e.a"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-4"
            parent_id "IEC-62443-4-1:2020/DM-4"
            group_id "IEC-62443-4-1:2020/DM-4[p32]"
            seq 10
            normative true
            text_normative "A process shall be employed for addressing security-related issues and determining whether to report them based on the results of the impact assessment. The supplier shall establish an acceptable level of residual risk that shall be applied when determining appropriate way to address each issue. Options include one or more of the following: e.a) inform other processes of the issue or related issue(s), including processes for other products/product revisions;"
            ordinal "e.a"
            inherits_from "IEC-62443-4-1:2020/DM-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Addressing security-related issues"
                rationale "This process is required to ensure that a determination is made for how to handle (address) each security-related issue and that no security-related issue is inadvertently overlooked or ignored. Having this process means that the product supplier reviews the potential residual risk of each security-related issue and makes a justifiable decision for how to handle (address) it. Residual risk can be determined using many different methods. An example would be to start with CVSS score, but then add other security controls and countermeasures not accounted for in CVSS such as whether the issue is applicable to the product’s security context. The process for deciding upon and implementing a resolution to a security-related issue needs to address these considerations (see ISO/IEC 301 1 1) because of their potential impact: a) a proposed resolution can violate a premise of the secure design that other aspects of the product rely upon; b) a proposed resolution can be unnecessary because of a m ismatch between the reporting entity’ s security context and the product security context; c) a proposed resolution can only partially reduce the impact of the security-related issue, may take an unacceptably long time to implement because of its complexi ty, or may be so unusable that it is likely to be disabled; and d) a proposed resolution can introduce side-effects that are unacceptable. Timeliness for determining and implementing a resolution based on the impact of the security-related issue will typically align with market forces and may drive establishment of clear interfaces to related organizational processes (for example, legal, customer service and public relations) to avoid unnecessary delays."
                clause "10.5"
                page "32"
            sha256 "d9065a1f5c9d6658d81d8e91e4d0a9a8f00ee897dbfd43a46b50caea9f1f819d"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-4/e.b"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-4"
            parent_id "IEC-62443-4-1:2020/DM-4"
            group_id "IEC-62443-4-1:2020/DM-4[p32]"
            seq 11
            normative true
            text_normative "A process shall be employed for addressing security-related issues and determining whether to report them based on the results of the impact assessment. The supplier shall establish an acceptable level of residual risk that shall be applied when determining appropriate way to address each issue. Options include one or more of the following: e.b) Inform third parties if problems found in included third-party source code"
            ordinal "e.b"
            inherits_from "IEC-62443-4-1:2020/DM-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Addressing security-related issues"
                rationale "This process is required to ensure that a determination is made for how to handle (address) each security-related issue and that no security-related issue is inadvertently overlooked or ignored. Having this process means that the product supplier reviews the potential residual risk of each security-related issue and makes a justifiable decision for how to handle (address) it. Residual risk can be determined using many different methods. An example would be to start with CVSS score, but then add other security controls and countermeasures not accounted for in CVSS such as whether the issue is applicable to the product’s security context. The process for deciding upon and implementing a resolution to a security-related issue needs to address these considerations (see ISO/IEC 301 1 1) because of their potential impact: a) a proposed resolution can violate a premise of the secure design that other aspects of the product rely upon; b) a proposed resolution can be unnecessary because of a m ismatch between the reporting entity’ s security context and the product security context; c) a proposed resolution can only partially reduce the impact of the security-related issue, may take an unacceptably long time to implement because of its complexi ty, or may be so unusable that it is likely to be disabled; and d) a proposed resolution can introduce side-effects that are unacceptable. Timeliness for determining and implementing a resolution based on the impact of the security-related issue will typically align with market forces and may drive establishment of clear interfaces to related organizational processes (for example, legal, customer service and public relations) to avoid unnecessary delays."
                clause "10.5"
                page "32"
            sha256 "895befda2fb02339b03a3bb29cff7d1147219babb1c9cdab9d247812b675c488"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-5"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-5"
            parent_id null
            group_id "IEC-62443-4-1:2020/DM-5[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed for informing product users about reportable security-related issues in supported products in a timely manner with content that includes but is not limited to the following information:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "f3ef5c51b4c479ef4c6fa8d3581b9a1ba064eb63a7162cf692dc96d42b3320f4"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-5/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-5"
            parent_id "IEC-62443-4-1:2020/DM-5"
            group_id "IEC-62443-4-1:2020/DM-5[p32]"
            seq 2
            normative true
            text_normative "A process shall be employed for informing product users about reportable security-related issues in supported products in a timely manner with content that includes but is not limited to the following information: a) issue description, vulnerability score as per CVSS or a similar system for ranking vulnerabilities, and affected product version(s); and"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/DM-5"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Disclosing security-related issues"
                rationale "This process is required to ensure that product users are in formed of resolved security-related issues that have been designated as reportable. Reportable resolutions are typically those that are related to released products and whose issue severity is deemed high enough to report by the product supplier. Product users need this in formation to make in formed security assessments about their operations, and service providers use this in formation to handle vulnerabilities as part of their event management capability (see IEC 62443-2-4). Having this process means that the product supplier has procedures for determining which security issues are reportable, and reporting resolutions for reportable issues to the users of the product. The disclosure process will typically include provisions for informational alerts in addition to vulnerability notices. For example, in formational alerts can be used to notify product users of compensating mechanisms in response to current cybersecurity activity or to inform product users that the product is not susceptible to a highly publicized vulnerability. See IEC 291 47 [22] for in formation regarding content of notifications."
                clause "10.6"
                page "32"
            sha256 "8e93bec16656a114258c3b1f69dd3eac812652f84893a8c0f864e850ad1d727a"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-5/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-5"
            parent_id "IEC-62443-4-1:2020/DM-5"
            group_id "IEC-62443-4-1:2020/DM-5[p32]"
            seq 3
            normative true
            text_normative "A process shall be employed for informing product users about reportable security-related issues in supported products in a timely manner with content that includes but is not limited to the following information: b) description of the resolution."
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/DM-5"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Disclosing security-related issues"
                rationale "This process is required to ensure that product users are in formed of resolved security-related issues that have been designated as reportable. Reportable resolutions are typically those that are related to released products and whose issue severity is deemed high enough to report by the product supplier. Product users need this in formation to make in formed security assessments about their operations, and service providers use this in formation to handle vulnerabilities as part of their event management capability (see IEC 62443-2-4). Having this process means that the product supplier has procedures for determining which security issues are reportable, and reporting resolutions for reportable issues to the users of the product. The disclosure process will typically include provisions for informational alerts in addition to vulnerability notices. For example, in formational alerts can be used to notify product users of compensating mechanisms in response to current cybersecurity activity or to inform product users that the product is not susceptible to a highly publicized vulnerability. See IEC 291 47 [22] for in formation regarding content of notifications."
                clause "10.6"
                page "32"
            sha256 "ecab2ea84ce8620146b5824ea5bd05effcfb1a3e65db204359d773b41e0d844a"
        { 
            chunk_id "IEC-62443-4-1:2020/DM-6"
            doc_id "IEC-62443-4-1:2020"
            section_path "DM-6"
            parent_id null
            group_id "IEC-62443-4-1:2020/DM-6[p32]"
            seq 1
            normative true
            informative false
            text_normative "A process shall be employed for conducting periodic reviews of the security-related issue management process. Periodic reviews of the process shall, at a minimum, examine security-related issues managed through the process since the last periodic review to determine if the management process was complete, efficient, and led to the resolution of each security-related issue. Periodic reviews of the security-related issue management process shall be conducted at least annually."
            context_note null
            { context
                name "Periodic review of security defect management practice"
                rationale "This process is required for continuous improvement of the issue management practice."
                clause "10.7"
                page "32"
            sha256 "62c667f996a5c0fdf55aaf1be99eca508eda886f126c22b5c79738910d23758e"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-1"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-1"
            parent_id null
            group_id "IEC-62443-4-1:2020/SUM-1[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed for verifying"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "95ec4758a4e800f4b08c14fe13572196e8e6dc7328c7b6955834f968c1cefcd8"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-1/(1"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-1"
            parent_id "IEC-62443-4-1:2020/SUM-1"
            group_id "IEC-62443-4-1:2020/SUM-1[p32]"
            seq 2
            normative true
            text_normative "A process shall be employed for verifying (1) security updates created by the product developer address the intended security vulnerabilities"
            ordinal "(1"
            inherits_from "IEC-62443-4-1:2020/SUM-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security update qualification"
                rationale "This process is required to ensure that patches applicable to the product are evaluated to ensure that they do not adversely affect operation of the product. Having this process means that qualification of patches (typically via testing) is performed to verify that patches applicable to the product do not directly or indirectly (for example, via side effects) compromise the product’s operation or defense in depth strategy (see Clause 7). Documentation about this process may be used by the service provider to address the patch management requirements of IEC 62443-2-4."
                clause "11.2"
                page "32"
            sha256 "dad9ad44ba86240fc7d5cf1a810dbdfcb992e9b93f929696a5e23af5f6aa3c36"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-1/(2"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-1"
            parent_id "IEC-62443-4-1:2020/SUM-1"
            group_id "IEC-62443-4-1:2020/SUM-1[p32]"
            seq 3
            normative true
            text_normative "A process shall be employed for verifying (2) security updates do not introduce regressions, including but not limited to patches created by:"
            ordinal "(2"
            inherits_from "IEC-62443-4-1:2020/SUM-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security update qualification"
                rationale "This process is required to ensure that patches applicable to the product are evaluated to ensure that they do not adversely affect operation of the product. Having this process means that qualification of patches (typically via testing) is performed to verify that patches applicable to the product do not directly or indirectly (for example, via side effects) compromise the product’s operation or defense in depth strategy (see Clause 7). Documentation about this process may be used by the service provider to address the patch management requirements of IEC 62443-2-4."
                clause "11.2"
                page "32"
            sha256 "c5e71b4b50994ac9fd8a89830385acd634e36083dfd594c8c5530c0d547501a8"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-1/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-1"
            parent_id "IEC-62443-4-1:2020/SUM-1"
            group_id "IEC-62443-4-1:2020/SUM-1[p32]"
            seq 4
            normative true
            text_normative "A process shall be employed for verifying a) the product developer;"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SUM-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security update qualification"
                rationale "This process is required to ensure that patches applicable to the product are evaluated to ensure that they do not adversely affect operation of the product. Having this process means that qualification of patches (typically via testing) is performed to verify that patches applicable to the product do not directly or indirectly (for example, via side effects) compromise the product’s operation or defense in depth strategy (see Clause 7). Documentation about this process may be used by the service provider to address the patch management requirements of IEC 62443-2-4."
                clause "11.2"
                page "32"
            sha256 "db46d9c0c3a1a95975df502a3f7cb7dcce390d9aec693587d5bdc1714d65a3d2"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-1/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-1"
            parent_id "IEC-62443-4-1:2020/SUM-1"
            group_id "IEC-62443-4-1:2020/SUM-1[p32]"
            seq 5
            normative true
            text_normative "A process shall be employed for verifying b) suppliers of components used in the product; and"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SUM-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security update qualification"
                rationale "This process is required to ensure that patches applicable to the product are evaluated to ensure that they do not adversely affect operation of the product. Having this process means that qualification of patches (typically via testing) is performed to verify that patches applicable to the product do not directly or indirectly (for example, via side effects) compromise the product’s operation or defense in depth strategy (see Clause 7). Documentation about this process may be used by the service provider to address the patch management requirements of IEC 62443-2-4."
                clause "11.2"
                page "32"
            sha256 "9c9d73434c676dc8f05d3a9fcc783cb4d96c4b64db2c76526c1962fe390dad7b"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-1/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-1"
            parent_id "IEC-62443-4-1:2020/SUM-1"
            group_id "IEC-62443-4-1:2020/SUM-1[p32]"
            seq 6
            normative true
            text_normative "A process shall be employed for verifying c) suppliers of components or platforms on which the product depends ."
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/SUM-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security update qualification"
                rationale "This process is required to ensure that patches applicable to the product are evaluated to ensure that they do not adversely affect operation of the product. Having this process means that qualification of patches (typically via testing) is performed to verify that patches applicable to the product do not directly or indirectly (for example, via side effects) compromise the product’s operation or defense in depth strategy (see Clause 7). Documentation about this process may be used by the service provider to address the patch management requirements of IEC 62443-2-4."
                clause "11.2"
                page "32"
            sha256 "98bbf13922f8781a453d74819bd5a7d80f3fa279bf17055e6a25cdfcb6e643d4"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-2"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-2"
            parent_id null
            group_id "IEC-62443-4-1:2020/SUM-2[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed to ensure that documentation about product security updates is made available to product users that includes but is not limited to:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "40622040f00c7404429048210d85cc67c52ce5f74d2958479eb2ff33edcb1ec7"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-2/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-2"
            parent_id "IEC-62443-4-1:2020/SUM-2"
            group_id "IEC-62443-4-1:2020/SUM-2[p32]"
            seq 2
            normative true
            text_normative "A process shall be employed to ensure that documentation about product security updates is made available to product users that includes but is not limited to: a) the product version number(s) to which the security patch applies;"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SUM-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security update documentation"
                rationale "This process is required to ensure that security patches are documented to allow approved patches to be installed and non-approved patches to be remediated. Having this process means that the product supplier provides or otherwise makes documentation available that identifies and describes applicable security patches, how to install approved patches, how to determine patch status (whether a patch has been applied) of components and how to mediate non-approved patches. See the patch management requirements of IEC 62443-2-4 for more in formation."
                clause "11.3"
                page "32"
            sha256 "3b48abc2bb5f5371351907446f7bcbcd63c9510d2ec40242b0e3472513fb5f19"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-2/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-2"
            parent_id "IEC-62443-4-1:2020/SUM-2"
            group_id "IEC-62443-4-1:2020/SUM-2[p32]"
            seq 3
            normative true
            text_normative "A process shall be employed to ensure that documentation about product security updates is made available to product users that includes but is not limited to: b) instructions on how to apply approved patches manually and via an automated process;"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SUM-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security update documentation"
                rationale "This process is required to ensure that security patches are documented to allow approved patches to be installed and non-approved patches to be remediated. Having this process means that the product supplier provides or otherwise makes documentation available that identifies and describes applicable security patches, how to install approved patches, how to determine patch status (whether a patch has been applied) of components and how to mediate non-approved patches. See the patch management requirements of IEC 62443-2-4 for more in formation."
                clause "11.3"
                page "32"
            sha256 "72b770735f648f43492c4bdce59285c4a695224f765a7bfd56c0555d71169ce9"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-2/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-2"
            parent_id "IEC-62443-4-1:2020/SUM-2"
            group_id "IEC-62443-4-1:2020/SUM-2[p32]"
            seq 4
            normative true
            text_normative "A process shall be employed to ensure that documentation about product security updates is made available to product users that includes but is not limited to: c) description of any impacts that applying the patch to the product, including reboot;"
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/SUM-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security update documentation"
                rationale "This process is required to ensure that security patches are documented to allow approved patches to be installed and non-approved patches to be remediated. Having this process means that the product supplier provides or otherwise makes documentation available that identifies and describes applicable security patches, how to install approved patches, how to determine patch status (whether a patch has been applied) of components and how to mediate non-approved patches. See the patch management requirements of IEC 62443-2-4 for more in formation."
                clause "11.3"
                page "32"
            sha256 "462a2fa340047616bb633ed60e5eae035c2fd9cbdd1bbb274bf1fa4971f3766c"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-2/d"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-2"
            parent_id "IEC-62443-4-1:2020/SUM-2"
            group_id "IEC-62443-4-1:2020/SUM-2[p32]"
            seq 5
            normative true
            text_normative "A process shall be employed to ensure that documentation about product security updates is made available to product users that includes but is not limited to: d) instructions on how to verify that an approved patch has been applied; and"
            ordinal "d"
            inherits_from "IEC-62443-4-1:2020/SUM-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security update documentation"
                rationale "This process is required to ensure that security patches are documented to allow approved patches to be installed and non-approved patches to be remediated. Having this process means that the product supplier provides or otherwise makes documentation available that identifies and describes applicable security patches, how to install approved patches, how to determine patch status (whether a patch has been applied) of components and how to mediate non-approved patches. See the patch management requirements of IEC 62443-2-4 for more in formation."
                clause "11.3"
                page "32"
            sha256 "0d1cb78c86f643a8535db8f27a7cb220fd522eb9e38fa18d529c50da8807356b"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-2/e"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-2"
            parent_id "IEC-62443-4-1:2020/SUM-2"
            group_id "IEC-62443-4-1:2020/SUM-2[p32]"
            seq 6
            normative true
            text_normative "A process shall be employed to ensure that documentation about product security updates is made available to product users that includes but is not limited to: e) risks of not applying the patch and mediations that can be used for patches that are not approved or deployed by the asset owner."
            ordinal "e"
            inherits_from "IEC-62443-4-1:2020/SUM-2"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security update documentation"
                rationale "This process is required to ensure that security patches are documented to allow approved patches to be installed and non-approved patches to be remediated. Having this process means that the product supplier provides or otherwise makes documentation available that identifies and describes applicable security patches, how to install approved patches, how to determine patch status (whether a patch has been applied) of components and how to mediate non-approved patches. See the patch management requirements of IEC 62443-2-4 for more in formation."
                clause "11.3"
                page "32"
            sha256 "dd8f2ea57e92791d24e1754d185830e5ac6bb925dac6f5fdf2da1216e52170e2"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-3"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-3"
            parent_id null
            group_id "IEC-62443-4-1:2020/SUM-3[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed to ensure that documentation about dependent component or operating system security updates is made available to product users that includes but is not limited to:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "d89c1e9703c8d51a6c51f6a5a88e4b85c551b26c98d8751fbf3cfa8b74b65c07"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-3/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-3"
            parent_id "IEC-62443-4-1:2020/SUM-3"
            group_id "IEC-62443-4-1:2020/SUM-3[p32]"
            seq 2
            normative true
            text_normative "A process shall be employed to ensure that documentation about dependent component or operating system security updates is made available to product users that includes but is not limited to: a) stating whether the product is compatible with the dependent com ponent or operating system security update; and"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SUM-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Dependent component or operating system security update documentation"
                rationale "End users are hesitant to install software in an IACS that might upset operations. As a result, vendors need to provide in formation to the users about whether a particular security update of the operating system is compatible with the product."
                clause "11.4"
                page "32"
            sha256 "52c828f67e83b8833fb51c99164496c1b72af604de7849c1bb50653206ca4b4f"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-3/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-3"
            parent_id "IEC-62443-4-1:2020/SUM-3"
            group_id "IEC-62443-4-1:2020/SUM-3[p32]"
            seq 3
            normative true
            text_normative "A process shall be employed to ensure that documentation about dependent component or operating system security updates is made available to product users that includes but is not limited to: b) for security updates that are unapproved by the product vendor, the mitigations that can be used in lieu of not applying the update."
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SUM-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Dependent component or operating system security update documentation"
                rationale "End users are hesitant to install software in an IACS that might upset operations. As a result, vendors need to provide in formation to the users about whether a particular security update of the operating system is compatible with the product."
                clause "11.4"
                page "32"
            sha256 "c047343f40bf333a1d860c2cf2da46d7252981f31697ce09d5442cf7ada46790"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-4"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-4"
            parent_id null
            group_id "IEC-62443-4-1:2020/SUM-4[p32]"
            seq 1
            normative true
            informative false
            text_normative "A process shall be employed to ensure that security updates for all supported products and product versions are made available to product users in a manner that facilitates verification that the security patch is authentic."
            context_note null
            { context
                name "Security update delivery"
                rationale "This process is required to ensure that product users can obtain applicable security patches for the product in a timely manner and to reduce the possibility that the security patches are fraudulent (see Clause 1 1). Having this process means that the product supplier provides a mechanism or technique that allows product users to verify the authenticity of patches. Concurrent release of patches for all supported versions can reduce the time window between awareness of the vulnerability and the availability of patches."
                clause "11.5"
                page "32"
            sha256 "54df3957d4aa97040820dc21a8e695f20f20330160ca25eff0834b403b035562"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-5"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-5"
            parent_id null
            group_id "IEC-62443-4-1:2020/SUM-5[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed to define a policy that specifies the timeframes for delivering and qualifying security updates to product users and to ensure that this policy is followed. At a minimum, this policy shall consider the following factors:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "01760daf82460d241c47f5f8d67e51483b19e399cd2c2445949c71400b849daa"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-5/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-5"
            parent_id "IEC-62443-4-1:2020/SUM-5"
            group_id "IEC-62443-4-1:2020/SUM-5[p32]"
            seq 2
            normative true
            text_normative "A process shall be employed to define a policy that specifies the timeframes for delivering and qualifying security updates to product users and to ensure that this policy is followed. At a minimum, this policy shall consider the following factors: a) The potential impact of the vulnerability;"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SUM-5"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Timely delivery of security patches"
                rationale "Security updates typically have target release timing which is based on the factors listed in this requirement. For example, some companies classify patches as required to be addressed within 30 days, 60 days or 90 days or longer of being found."
                clause "11.6"
                page "32"
            sha256 "cfc25c8876b0d271de76fb260179e91a8b82c03871128fc878a7716501e85e33"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-5/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-5"
            parent_id "IEC-62443-4-1:2020/SUM-5"
            group_id "IEC-62443-4-1:2020/SUM-5[p32]"
            seq 3
            normative true
            text_normative "A process shall be employed to define a policy that specifies the timeframes for delivering and qualifying security updates to product users and to ensure that this policy is followed. At a minimum, this policy shall consider the following factors: b) Public knowledge of the vulnerability;"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SUM-5"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Timely delivery of security patches"
                rationale "Security updates typically have target release timing which is based on the factors listed in this requirement. For example, some companies classify patches as required to be addressed within 30 days, 60 days or 90 days or longer of being found."
                clause "11.6"
                page "32"
            sha256 "f8c24d8aa38a1182ac31c101c818d1fb5b12afe0988683e95d3bb72f8f396c49"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-5/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-5"
            parent_id "IEC-62443-4-1:2020/SUM-5"
            group_id "IEC-62443-4-1:2020/SUM-5[p32]"
            seq 4
            normative true
            text_normative "A process shall be employed to define a policy that specifies the timeframes for delivering and qualifying security updates to product users and to ensure that this policy is followed. At a minimum, this policy shall consider the following factors: c) Whether published exploits exist for the vulnerability;"
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/SUM-5"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Timely delivery of security patches"
                rationale "Security updates typically have target release timing which is based on the factors listed in this requirement. For example, some companies classify patches as required to be addressed within 30 days, 60 days or 90 days or longer of being found."
                clause "11.6"
                page "32"
            sha256 "65f6c90c03ac983c842cceb287611f4a7501a161d0941bca9e0ea653c7a60d84"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-5/d"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-5"
            parent_id "IEC-62443-4-1:2020/SUM-5"
            group_id "IEC-62443-4-1:2020/SUM-5[p32]"
            seq 5
            normative true
            text_normative "A process shall be employed to define a policy that specifies the timeframes for delivering and qualifying security updates to product users and to ensure that this policy is followed. At a minimum, this policy shall consider the following factors: d) The volume of deployed products that are affected; and"
            ordinal "d"
            inherits_from "IEC-62443-4-1:2020/SUM-5"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Timely delivery of security patches"
                rationale "Security updates typically have target release timing which is based on the factors listed in this requirement. For example, some companies classify patches as required to be addressed within 30 days, 60 days or 90 days or longer of being found."
                clause "11.6"
                page "32"
            sha256 "3ea504528dbd26be11e4867dbc50e8e9572eaf2679dfa4dd73730fecd765500a"
        { 
            chunk_id "IEC-62443-4-1:2020/SUM-5/e"
            doc_id "IEC-62443-4-1:2020"
            section_path "SUM-5"
            parent_id "IEC-62443-4-1:2020/SUM-5"
            group_id "IEC-62443-4-1:2020/SUM-5[p32]"
            seq 6
            normative true
            text_normative "A process shall be employed to define a policy that specifies the timeframes for delivering and qualifying security updates to product users and to ensure that this policy is followed. At a minimum, this policy shall consider the following factors: e) The availability of an effective mitigation in lieu of the patch."
            ordinal "e"
            inherits_from "IEC-62443-4-1:2020/SUM-5"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Timely delivery of security patches"
                rationale "Security updates typically have target release timing which is based on the factors listed in this requirement. For example, some companies classify patches as required to be addressed within 30 days, 60 days or 90 days or longer of being found."
                clause "11.6"
                page "32"
            sha256 "d39abf2838b9173d9a69fe747d150f8ea0fb761a09327e3febd9d24894dcbf20"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-1"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-1"
            parent_id null
            group_id "IEC-62443-4-1:2020/SG-1[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall exist to create product user documentation that describes the security defense in depth strategy for the product to support installation, operation and maintenance that includes:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "4ae0f51e5690c0c2834f5da7aed2edbd9ede0e71833a49ad05664f4db723999a"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-1/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-1"
            parent_id "IEC-62443-4-1:2020/SG-1"
            group_id "IEC-62443-4-1:2020/SG-1[p32]"
            seq 2
            normative true
            text_normative "A process shall exist to create product user documentation that describes the security defense in depth strategy for the product to support installation, operation and maintenance that includes: a) security capabilities implemented by the product and their role in the defense in depth strategy;"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SG-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Product defense in depth"
                rationale "This process is required to ensure that documentation for the defense in depth strategy is produced to support hardening of the product at the customer site. Such documentation is required by IEC 62443-2-4, that defines security requirements for IACS installation and maintenance service providers. Having this process means that the product supplier documents various aspects of the defense in depth strategy necessary to harden the product during installation and keep it hardened during its lifetime of use. Aspects of the defense in depth strategy to be documented include the residual threats that are expected to be present and capable of attacking the product, the security capabilities of the product to safeguard it against these threats and any compensating security controls/mitigations that can be used with the product to further protect the product."
                clause "12.2"
                page "32"
            sha256 "ec809040b4123ca681730c13ae14fa27b2db9350525e5061fa0f8ff5ab9bb9a2"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-1/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-1"
            parent_id "IEC-62443-4-1:2020/SG-1"
            group_id "IEC-62443-4-1:2020/SG-1[p32]"
            seq 3
            normative true
            text_normative "A process shall exist to create product user documentation that describes the security defense in depth strategy for the product to support installation, operation and maintenance that includes: b) threats addressed by the defense in depth strategy; and"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SG-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Product defense in depth"
                rationale "This process is required to ensure that documentation for the defense in depth strategy is produced to support hardening of the product at the customer site. Such documentation is required by IEC 62443-2-4, that defines security requirements for IACS installation and maintenance service providers. Having this process means that the product supplier documents various aspects of the defense in depth strategy necessary to harden the product during installation and keep it hardened during its lifetime of use. Aspects of the defense in depth strategy to be documented include the residual threats that are expected to be present and capable of attacking the product, the security capabilities of the product to safeguard it against these threats and any compensating security controls/mitigations that can be used with the product to further protect the product."
                clause "12.2"
                page "32"
            sha256 "71cb4f8b34643b39ffe9184d903df796070e0dc2c19a707d6f9aa54a98b73517"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-1/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-1"
            parent_id "IEC-62443-4-1:2020/SG-1"
            group_id "IEC-62443-4-1:2020/SG-1[p32]"
            seq 4
            normative true
            text_normative "A process shall exist to create product user documentation that describes the security defense in depth strategy for the product to support installation, operation and maintenance that includes: c) product user mitigation strategies for known security risks associated with the product, including risks associated with legacy code."
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/SG-1"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Product defense in depth"
                rationale "This process is required to ensure that documentation for the defense in depth strategy is produced to support hardening of the product at the customer site. Such documentation is required by IEC 62443-2-4, that defines security requirements for IACS installation and maintenance service providers. Having this process means that the product supplier documents various aspects of the defense in depth strategy necessary to harden the product during installation and keep it hardened during its lifetime of use. Aspects of the defense in depth strategy to be documented include the residual threats that are expected to be present and capable of attacking the product, the security capabilities of the product to safeguard it against these threats and any compensating security controls/mitigations that can be used with the product to further protect the product."
                clause "12.2"
                page "32"
            sha256 "3e1c295b768f2e3683872df0ff4df6928b6fd32126e12fef3fae7dbe686a5fad"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-2"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-2"
            parent_id null
            group_id "IEC-62443-4-1:2020/SG-2[p32]"
            seq 1
            normative true
            informative false
            text_normative "A process shall be employed to create product user documentation that describes the security defense in depth measures expected to be provided by the external environment in which the product is to be used (see Clause 6)."
            context_note null
            { context
                name "Defense in depth measures expected in the environment"
                rationale "This process is required to ensure that documentation for the defense in depth strategy is produced to support hardening of the product at the customer site. Such documentation is required by IEC 62443-2-4, that defines security requirements for IACS installation and maintenance service providers. Having this process means that the product supplier documents various aspects of the defense in depth strategy necessary to harden the product during installation and keep it hardened during its lifetime of use."
                clause "12.3"
                page "32"
            sha256 "61f3e1f465914bbdd6c356ca9a5cd5b9ff27a982b4bcbd6f1b4c53bcfeca0b53"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-3"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-3"
            parent_id null
            group_id "IEC-62443-4-1:2020/SG-3[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed to create product user documentation that includes guidelines for hardening the product when installing and maintaining the product. The guidelines shall include, but are not limited to, instructions, rationale and recommendations for the following:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "1701ed5a3decec02b86a6231d3b0839c64ba128a39d816cac58c9e97f9cf9a10"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-3/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-3"
            parent_id "IEC-62443-4-1:2020/SG-3"
            group_id "IEC-62443-4-1:2020/SG-3[p32]"
            seq 2
            normative true
            text_normative "A process shall be employed to create product user documentation that includes guidelines for hardening the product when installing and maintaining the product. The guidelines shall include, but are not limited to, instructions, rationale and recommendations for the following: a) integration of the product, including third-party components, with its product security context;"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SG-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security hardening guidelines"
                rationale "This process is required to ensure that instructions that describe how to harden the product and keep it hardened are documented. Such documentation is required by IEC 62443-2-4 that defines security requirements for IACS installation and maintenance service providers. Having this process means that the product supplier creates user documentation that provides directions for hardening the product during installation and for keeping it hardened during the lifetime of the product use. This requirement recognizes that the security policies and requirements for customer sites are often different, and as a result, instructions for securely integrating the product in to the customer site, configuring it appropriately and maintaining its security are necessary."
                clause "12.4"
                page "32"
            sha256 "218ea1a735923c703a288f694907cd3c8f753edb4022217154017b2129e33358"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-3/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-3"
            parent_id "IEC-62443-4-1:2020/SG-3"
            group_id "IEC-62443-4-1:2020/SG-3[p32]"
            seq 3
            normative true
            text_normative "A process shall be employed to create product user documentation that includes guidelines for hardening the product when installing and maintaining the product. The guidelines shall include, but are not limited to, instructions, rationale and recommendations for the following: b) integration of the product’s application programming interfaces/protocols with user applications;"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SG-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security hardening guidelines"
                rationale "This process is required to ensure that instructions that describe how to harden the product and keep it hardened are documented. Such documentation is required by IEC 62443-2-4 that defines security requirements for IACS installation and maintenance service providers. Having this process means that the product supplier creates user documentation that provides directions for hardening the product during installation and for keeping it hardened during the lifetime of the product use. This requirement recognizes that the security policies and requirements for customer sites are often different, and as a result, instructions for securely integrating the product in to the customer site, configuring it appropriately and maintaining its security are necessary."
                clause "12.4"
                page "32"
            sha256 "d8618e0c6d6fc5ecb1565217cb782004974adfa2af977a1fc39627a8c323bda0"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-3/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-3"
            parent_id "IEC-62443-4-1:2020/SG-3"
            group_id "IEC-62443-4-1:2020/SG-3[p32]"
            seq 4
            normative true
            text_normative "A process shall be employed to create product user documentation that includes guidelines for hardening the product when installing and maintaining the product. The guidelines shall include, but are not limited to, instructions, rationale and recommendations for the following: c) applying and maintaining the product’s defense in depth strategy;"
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/SG-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security hardening guidelines"
                rationale "This process is required to ensure that instructions that describe how to harden the product and keep it hardened are documented. Such documentation is required by IEC 62443-2-4 that defines security requirements for IACS installation and maintenance service providers. Having this process means that the product supplier creates user documentation that provides directions for hardening the product during installation and for keeping it hardened during the lifetime of the product use. This requirement recognizes that the security policies and requirements for customer sites are often different, and as a result, instructions for securely integrating the product in to the customer site, configuring it appropriately and maintaining its security are necessary."
                clause "12.4"
                page "32"
            sha256 "0470b5d9639e2113be765c07ed3a6da2e8063bb6dd72cbcd01632a82c3ca9a84"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-3/d"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-3"
            parent_id "IEC-62443-4-1:2020/SG-3"
            group_id "IEC-62443-4-1:2020/SG-3[p32]"
            seq 5
            normative true
            text_normative "A process shall be employed to create product user documentation that includes guidelines for hardening the product when installing and maintaining the product. The guidelines shall include, but are not limited to, instructions, rationale and recommendations for the following: d) configuration and use of security options/capabilities in support of local security policies, and for each security option/capability:"
            ordinal "d"
            inherits_from "IEC-62443-4-1:2020/SG-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security hardening guidelines"
                rationale "This process is required to ensure that instructions that describe how to harden the product and keep it hardened are documented. Such documentation is required by IEC 62443-2-4 that defines security requirements for IACS installation and maintenance service providers. Having this process means that the product supplier creates user documentation that provides directions for hardening the product during installation and for keeping it hardened during the lifetime of the product use. This requirement recognizes that the security policies and requirements for customer sites are often different, and as a result, instructions for securely integrating the product in to the customer site, configuring it appropriately and maintaining its security are necessary."
                clause "12.4"
                page "32"
            sha256 "0e25385fc3d4fab280d9fda46b884d1473a6b751d635bfc44cef12ae397ecc17"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-3/1"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-3"
            parent_id "IEC-62443-4-1:2020/SG-3"
            group_id "IEC-62443-4-1:2020/SG-3[p32]"
            seq 6
            normative true
            text_normative "A process shall be employed to create product user documentation that includes guidelines for hardening the product when installing and maintaining the product. The guidelines shall include, but are not limited to, instructions, rationale and recommendations for the following: 1) its contribution to the product’s defense in depth strategy;"
            ordinal "1"
            inherits_from "IEC-62443-4-1:2020/SG-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security hardening guidelines"
                rationale "This process is required to ensure that instructions that describe how to harden the product and keep it hardened are documented. Such documentation is required by IEC 62443-2-4 that defines security requirements for IACS installation and maintenance service providers. Having this process means that the product supplier creates user documentation that provides directions for hardening the product during installation and for keeping it hardened during the lifetime of the product use. This requirement recognizes that the security policies and requirements for customer sites are often different, and as a result, instructions for securely integrating the product in to the customer site, configuring it appropriately and maintaining its security are necessary."
                clause "12.4"
                page "32"
            sha256 "a5fcee72de08622347c2ebfe4b7381bf0f8819bfd3908c07d5fe96e47209a1e2"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-3/2"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-3"
            parent_id "IEC-62443-4-1:2020/SG-3"
            group_id "IEC-62443-4-1:2020/SG-3[p32]"
            seq 7
            normative true
            text_normative "A process shall be employed to create product user documentation that includes guidelines for hardening the product when installing and maintaining the product. The guidelines shall include, but are not limited to, instructions, rationale and recommendations for the following: 2) descriptions of configurable and default values that includes how each affects security along with any potential impact each has on work practices;"
            ordinal "2"
            inherits_from "IEC-62443-4-1:2020/SG-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security hardening guidelines"
                rationale "This process is required to ensure that instructions that describe how to harden the product and keep it hardened are documented. Such documentation is required by IEC 62443-2-4 that defines security requirements for IACS installation and maintenance service providers. Having this process means that the product supplier creates user documentation that provides directions for hardening the product during installation and for keeping it hardened during the lifetime of the product use. This requirement recognizes that the security policies and requirements for customer sites are often different, and as a result, instructions for securely integrating the product in to the customer site, configuring it appropriately and maintaining its security are necessary."
                clause "12.4"
                page "32"
            sha256 "dff7e4c61c7514c61cd1b30a54346f0366cfa1e033f63bdcf21124691e550f9e"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-3/3"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-3"
            parent_id "IEC-62443-4-1:2020/SG-3"
            group_id "IEC-62443-4-1:2020/SG-3[p32]"
            seq 8
            normative true
            text_normative "A process shall be employed to create product user documentation that includes guidelines for hardening the product when installing and maintaining the product. The guidelines shall include, but are not limited to, instructions, rationale and recommendations for the following: 3) setting/changing/deleting its value;"
            ordinal "3"
            inherits_from "IEC-62443-4-1:2020/SG-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security hardening guidelines"
                rationale "This process is required to ensure that instructions that describe how to harden the product and keep it hardened are documented. Such documentation is required by IEC 62443-2-4 that defines security requirements for IACS installation and maintenance service providers. Having this process means that the product supplier creates user documentation that provides directions for hardening the product during installation and for keeping it hardened during the lifetime of the product use. This requirement recognizes that the security policies and requirements for customer sites are often different, and as a result, instructions for securely integrating the product in to the customer site, configuring it appropriately and maintaining its security are necessary."
                clause "12.4"
                page "32"
            sha256 "531496678e5068bf69ca17ee6146c3e0a9f2abeeb7ed68f6cc4f0a8568ef43d9"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-3/e"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-3"
            parent_id "IEC-62443-4-1:2020/SG-3"
            group_id "IEC-62443-4-1:2020/SG-3[p32]"
            seq 9
            normative true
            text_normative "A process shall be employed to create product user documentation that includes guidelines for hardening the product when installing and maintaining the product. The guidelines shall include, but are not limited to, instructions, rationale and recommendations for the following: e) instructions and recommendations for the use of all security-related tools and utilities that support administration, monitoring, incident handling and evaluation of the security of the product;"
            ordinal "e"
            inherits_from "IEC-62443-4-1:2020/SG-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security hardening guidelines"
                rationale "This process is required to ensure that instructions that describe how to harden the product and keep it hardened are documented. Such documentation is required by IEC 62443-2-4 that defines security requirements for IACS installation and maintenance service providers. Having this process means that the product supplier creates user documentation that provides directions for hardening the product during installation and for keeping it hardened during the lifetime of the product use. This requirement recognizes that the security policies and requirements for customer sites are often different, and as a result, instructions for securely integrating the product in to the customer site, configuring it appropriately and maintaining its security are necessary."
                clause "12.4"
                page "32"
            sha256 "651a57b3cbb69b6874931de3725e428eb455213276525767e6d653ca13e9bdbc"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-3/f"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-3"
            parent_id "IEC-62443-4-1:2020/SG-3"
            group_id "IEC-62443-4-1:2020/SG-3[p32]"
            seq 10
            normative true
            text_normative "A process shall be employed to create product user documentation that includes guidelines for hardening the product when installing and maintaining the product. The guidelines shall include, but are not limited to, instructions, rationale and recommendations for the following: f) instructions and recommendations for periodic security maintenance activities;"
            ordinal "f"
            inherits_from "IEC-62443-4-1:2020/SG-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security hardening guidelines"
                rationale "This process is required to ensure that instructions that describe how to harden the product and keep it hardened are documented. Such documentation is required by IEC 62443-2-4 that defines security requirements for IACS installation and maintenance service providers. Having this process means that the product supplier creates user documentation that provides directions for hardening the product during installation and for keeping it hardened during the lifetime of the product use. This requirement recognizes that the security policies and requirements for customer sites are often different, and as a result, instructions for securely integrating the product in to the customer site, configuring it appropriately and maintaining its security are necessary."
                clause "12.4"
                page "32"
            sha256 "8e2116a4470a4c1ed92a71d942d18556dacae08b249f8e536b0096f24feb48d4"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-3/g"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-3"
            parent_id "IEC-62443-4-1:2020/SG-3"
            group_id "IEC-62443-4-1:2020/SG-3[p32]"
            seq 11
            normative true
            text_normative "A process shall be employed to create product user documentation that includes guidelines for hardening the product when installing and maintaining the product. The guidelines shall include, but are not limited to, instructions, rationale and recommendations for the following: g) instructions for reporting security incidents for the product to the product supplier; and"
            ordinal "g"
            inherits_from "IEC-62443-4-1:2020/SG-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security hardening guidelines"
                rationale "This process is required to ensure that instructions that describe how to harden the product and keep it hardened are documented. Such documentation is required by IEC 62443-2-4 that defines security requirements for IACS installation and maintenance service providers. Having this process means that the product supplier creates user documentation that provides directions for hardening the product during installation and for keeping it hardened during the lifetime of the product use. This requirement recognizes that the security policies and requirements for customer sites are often different, and as a result, instructions for securely integrating the product in to the customer site, configuring it appropriately and maintaining its security are necessary."
                clause "12.4"
                page "32"
            sha256 "f6b7cecf7b8ca4ac8973606cfdd17cf7d5e0e3afeaa4aa827f148862b151bce0"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-3/h"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-3"
            parent_id "IEC-62443-4-1:2020/SG-3"
            group_id "IEC-62443-4-1:2020/SG-3[p32]"
            seq 12
            normative true
            text_normative "A process shall be employed to create product user documentation that includes guidelines for hardening the product when installing and maintaining the product. The guidelines shall include, but are not limited to, instructions, rationale and recommendations for the following: h) description of the security best practices for maintenance and administration of the product."
            ordinal "h"
            inherits_from "IEC-62443-4-1:2020/SG-3"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Security hardening guidelines"
                rationale "This process is required to ensure that instructions that describe how to harden the product and keep it hardened are documented. Such documentation is required by IEC 62443-2-4 that defines security requirements for IACS installation and maintenance service providers. Having this process means that the product supplier creates user documentation that provides directions for hardening the product during installation and for keeping it hardened during the lifetime of the product use. This requirement recognizes that the security policies and requirements for customer sites are often different, and as a result, instructions for securely integrating the product in to the customer site, configuring it appropriately and maintaining its security are necessary."
                clause "12.4"
                page "32"
            sha256 "8108c72bb57628390b3216dbd9fe29cbb05cbbf84fd5c1826207954a58b3b19b"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-4"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-4"
            parent_id null
            group_id "IEC-62443-4-1:2020/SG-4[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed to create product user documentation that includes guidelines for removing the product from use. The guidelines shall include, but is not limited to instructions and recommendations for the following:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "33c5ad0edb38732e284b25e4e289de4cba180ef282172261d98006b8b6f2b209"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-4/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-4"
            parent_id "IEC-62443-4-1:2020/SG-4"
            group_id "IEC-62443-4-1:2020/SG-4[p32]"
            seq 2
            normative true
            text_normative "A process shall be employed to create product user documentation that includes guidelines for removing the product from use. The guidelines shall include, but is not limited to instructions and recommendations for the following: a) removing the product from its intended environment;"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SG-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure disposal guidelines"
                rationale "This process is required to ensure that instructions that describe how to securely take the product out of use (decommission it) are documented. Such documentation is required by IEC 62443-2-4, that defines security requirements for IACS installation and maintenance service providers. Having this process means that the product supplier creates user documentation that provides directions for sanitizing the product of sensitive, confidential and/or proprietary data and software."
                clause "12.5"
                page "32"
            sha256 "7c3b4e9386dc9e934714da5da5556b9c2fb7659fc13e6d25dfaccb1c556df260"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-4/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-4"
            parent_id "IEC-62443-4-1:2020/SG-4"
            group_id "IEC-62443-4-1:2020/SG-4[p32]"
            seq 3
            normative true
            text_normative "A process shall be employed to create product user documentation that includes guidelines for removing the product from use. The guidelines shall include, but is not limited to instructions and recommendations for the following: b) including recommendations for removing references and configuration data store ed within the environment;"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SG-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure disposal guidelines"
                rationale "This process is required to ensure that instructions that describe how to securely take the product out of use (decommission it) are documented. Such documentation is required by IEC 62443-2-4, that defines security requirements for IACS installation and maintenance service providers. Having this process means that the product supplier creates user documentation that provides directions for sanitizing the product of sensitive, confidential and/or proprietary data and software."
                clause "12.5"
                page "32"
            sha256 "e623d090106668fe28d4eb0ef143115170b468ec1912f30d0017bc5d2c3cc8a8"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-4/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-4"
            parent_id "IEC-62443-4-1:2020/SG-4"
            group_id "IEC-62443-4-1:2020/SG-4[p32]"
            seq 4
            normative true
            text_normative "A process shall be employed to create product user documentation that includes guidelines for removing the product from use. The guidelines shall include, but is not limited to instructions and recommendations for the following: c) secure removal of data stored in the product;"
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/SG-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure disposal guidelines"
                rationale "This process is required to ensure that instructions that describe how to securely take the product out of use (decommission it) are documented. Such documentation is required by IEC 62443-2-4, that defines security requirements for IACS installation and maintenance service providers. Having this process means that the product supplier creates user documentation that provides directions for sanitizing the product of sensitive, confidential and/or proprietary data and software."
                clause "12.5"
                page "32"
            sha256 "15d0848a04f8de8c21afd64bcb8590d45f7f8529e40af78d4895d3d3ad348163"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-4/d"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-4"
            parent_id "IEC-62443-4-1:2020/SG-4"
            group_id "IEC-62443-4-1:2020/SG-4[p32]"
            seq 5
            normative true
            text_normative "A process shall be employed to create product user documentation that includes guidelines for removing the product from use. The guidelines shall include, but is not limited to instructions and recommendations for the following: d) secure disposal of the product to prevent potential disclosure of data contained in the product that could not be removed as described in c) above."
            ordinal "d"
            inherits_from "IEC-62443-4-1:2020/SG-4"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure disposal guidelines"
                rationale "This process is required to ensure that instructions that describe how to securely take the product out of use (decommission it) are documented. Such documentation is required by IEC 62443-2-4, that defines security requirements for IACS installation and maintenance service providers. Having this process means that the product supplier creates user documentation that provides directions for sanitizing the product of sensitive, confidential and/or proprietary data and software."
                clause "12.5"
                page "32"
            sha256 "e63ddcdc5221e581ccffd20530764cd6be057eff8f7dc3698f1d7f453b2ff828"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-5"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-5"
            parent_id null
            group_id "IEC-62443-4-1:2020/SG-5[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed to create product user documentation that describes:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "c0bdf472fcffbf48b49ddb1fe482ff1f883e82b0a836e850dbd402f9b720c33f"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-5/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-5"
            parent_id "IEC-62443-4-1:2020/SG-5"
            group_id "IEC-62443-4-1:2020/SG-5[p32]"
            seq 2
            normative true
            text_normative "A process shall be employed to create product user documentation that describes: a) responsibilities and actions necessary for users, including administrators, to securely operate the product; and"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SG-5"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure operation guidelines"
                rationale "This process is required to ensure that instructions that describe the secure use of the product during its operation and administration are included in the security guidelines. Having this process means that the product supplier creates user/administrator documentation that provides instructions for using the product securely. In general, this represents a set of best practices for the secure use of the product. For example, this could include guidelines for certificate management, password management and other authentication mechanisms."
                clause "12.6"
                page "32"
            sha256 "294d360df9437fdce2a9e997f28af2e4d43f366b817db9f554fe0fb70bf7d393"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-5/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-5"
            parent_id "IEC-62443-4-1:2020/SG-5"
            group_id "IEC-62443-4-1:2020/SG-5[p32]"
            seq 3
            normative true
            text_normative "A process shall be employed to create product user documentation that describes: b) assumptions regarding the behavior of the user/administrator and their relationship to the secure operation of the product."
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SG-5"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Secure operation guidelines"
                rationale "This process is required to ensure that instructions that describe the secure use of the product during its operation and administration are included in the security guidelines. Having this process means that the product supplier creates user/administrator documentation that provides instructions for using the product securely. In general, this represents a set of best practices for the secure use of the product. For example, this could include guidelines for certificate management, password management and other authentication mechanisms."
                clause "12.6"
                page "32"
            sha256 "387402fa534083f8eeb1bacba39cc903301c845002cb771e4a2779773abc4ff8"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-6"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-6"
            parent_id null
            group_id "IEC-62443-4-1:2020/SG-6[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed to create product user documentation that defines user account requirements and recommendations associated with the use of the product that includes, but is not limited to:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "754a05a2b90024687f1c04ffde56a14b37a9b4fc50f64edc2277ed16ded0ffde"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-6/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-6"
            parent_id "IEC-62443-4-1:2020/SG-6"
            group_id "IEC-62443-4-1:2020/SG-6[p32]"
            seq 2
            normative true
            text_normative "A process shall be employed to create product user documentation that defines user account requirements and recommendations associated with the use of the product that includes, but is not limited to: a) user account permissions (access control) and privileges (user rights) needed to use the product, including, but not limited to operating system accounts, control system accounts and data base accounts; and"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SG-6"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Account management guidelines"
                rationale "This process is required to ensure that requirements for the user accounts necessary to use the product are defined and documented. Having this process means that the product supplier creates documentation that defines accounts and their settings, including default accounts, that are needed to use the product."
                clause "12.7"
                page "32"
            sha256 "acb34690bc4f592207a69d8d00537c6cb5303c3400c0a924a677133f84cc6b87"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-6/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-6"
            parent_id "IEC-62443-4-1:2020/SG-6"
            group_id "IEC-62443-4-1:2020/SG-6[p32]"
            seq 3
            normative true
            text_normative "A process shall be employed to create product user documentation that defines user account requirements and recommendations associated with the use of the product that includes, but is not limited to: b) default accounts used by the product (for example, service accounts) and instructions for changing default account names and passwords."
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SG-6"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Account management guidelines"
                rationale "This process is required to ensure that requirements for the user accounts necessary to use the product are defined and documented. Having this process means that the product supplier creates documentation that defines accounts and their settings, including default accounts, that are needed to use the product."
                clause "12.7"
                page "32"
            sha256 "c06beb8c1b12efcbb027acc4581f2d1a4bdbea4acca8bd7ad5740b1a875b0817"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-7"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-7"
            parent_id null
            group_id "IEC-62443-4-1:2020/SG-7[p32]"
            seq 1
            normative false
            informative false
            role "preamble"
            scope_condition "A process shall be employed to identify, characterize and track to closure errors and omissions in all user manuals including the security guidelines to include:"
            modal_verb "in scope_condition (TODO: split)"
            aggregation "all_of"
            sha256 "9cb71547f70a5c5ab8fa95ae21ab2978f99d281feef9c2e4c54109fccfb753ba"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-7/a"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-7"
            parent_id "IEC-62443-4-1:2020/SG-7"
            group_id "IEC-62443-4-1:2020/SG-7[p32]"
            seq 2
            normative true
            text_normative "A process shall be employed to identify, characterize and track to closure errors and omissions in all user manuals including the security guidelines to include: a) coverage of the product’s security capabilities;"
            ordinal "a"
            inherits_from "IEC-62443-4-1:2020/SG-7"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Documentation review"
                rationale "This process is required to ensure that the security-related documentation for the product is accurate and complete and that non-secure practices are not documented in other user documentation. Having this process means that the product's security-related documentation is reviewed to determine whether any product security capabilities have not been correctly or adequately addressed, and whether the documentation adequately describes how the product's defense in depth strategy is to be integrated with the product security context; and if discrepancies are found, that a process exists for addressing them."
                clause "12.8"
                page "32"
            sha256 "09e3dc6738a6fe9056f4eed37338dc5b32ec00f3f59624910e8c90e69aabbc2d"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-7/b"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-7"
            parent_id "IEC-62443-4-1:2020/SG-7"
            group_id "IEC-62443-4-1:2020/SG-7[p32]"
            seq 3
            normative true
            text_normative "A process shall be employed to identify, characterize and track to closure errors and omissions in all user manuals including the security guidelines to include: b) integration of the product with its intended environment; and"
            ordinal "b"
            inherits_from "IEC-62443-4-1:2020/SG-7"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Documentation review"
                rationale "This process is required to ensure that the security-related documentation for the product is accurate and complete and that non-secure practices are not documented in other user documentation. Having this process means that the product's security-related documentation is reviewed to determine whether any product security capabilities have not been correctly or adequately addressed, and whether the documentation adequately describes how the product's defense in depth strategy is to be integrated with the product security context; and if discrepancies are found, that a process exists for addressing them."
                clause "12.8"
                page "32"
            sha256 "f0e4255342e20c754219a703642b1c0a1c1c68c1eb6b74b285dad293733314c2"
        { 
            chunk_id "IEC-62443-4-1:2020/SG-7/c"
            doc_id "IEC-62443-4-1:2020"
            section_path "SG-7"
            parent_id "IEC-62443-4-1:2020/SG-7"
            group_id "IEC-62443-4-1:2020/SG-7[p32]"
            seq 4
            normative true
            text_normative "A process shall be employed to identify, characterize and track to closure errors and omissions in all user manuals including the security guidelines to include: c) assurance that all documented practices are secure."
            ordinal "c"
            inherits_from "IEC-62443-4-1:2020/SG-7"
            [ inherited_fields
                "scope_condition" 
                "modal_verb" 
            { context
                name "Documentation review"
                rationale "This process is required to ensure that the security-related documentation for the product is accurate and complete and that non-secure practices are not documented in other user documentation. Having this process means that the product's security-related documentation is reviewed to determine whether any product security capabilities have not been correctly or adequately addressed, and whether the documentation adequately describes how the product's defense in depth strategy is to be integrated with the product security context; and if discrepancies are found, that a process exists for addressing them."
                clause "12.8"
                page "32"
            sha256 "90a4d2f4aada7a20db080588134bf0982491dd45e317532052033cd7ce9a0f43"