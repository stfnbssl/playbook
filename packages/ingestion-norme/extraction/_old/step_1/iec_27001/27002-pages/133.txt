ISO/IEC 27002:2022(E)
c)	
configuring development tools, such as integrated development environments (IDE), to help enforce 
the creation of secure code;
d)	 following guidance issued by the providers of development tools and execution environments as 
applicable;
e)	 maintenance and use of updated development tools (e.g. compilers);
f)	
qualification of developers in writing secure code;
g)	 secure design and architecture, including threat modelling;
h)	 secure coding standards and where relevant mandating their use;
i)	
use of controlled environments for development.
During coding
Considerations during coding should include:
a)	 secure coding practices specific to the programming languages and techniques being used;
b)	 using secure programming techniques, such as pair programming, refactoring, peer review, 
security iterations and test-driven development;
c)	
using structured programming techniques;
d)	 documenting code and removing programming defects, which can allow information security 
vulnerabilities to be exploited;
e)	 prohibiting the use of insecure design techniques (e.g. the use of hard-coded passwords, unapproved 
code samples and unauthenticated web services).
Testing should be conducted during and after development (see 8.29). Static application security testing 
(SAST) processes can identify security vulnerabilities in software.
Before software is made operational, the following should be evaluated:
a)	 attack surface and the principle of least privilege;
b)	 conducting an analysis of the most common programming errors and documenting that these have 
been mitigated.
Review and maintenance
After code has been made operational:
a)	 updates should be securely packaged and deployed;
b)	 reported information security vulnerabilities should be handled (see 8.8);
c)	
errors and suspected attacks should be logged and logs regularly reviewed to make adjustments to 
the code as necessary;
d)	 source code should be protected against unauthorized access and tampering (e.g. by using 
configuration management tools, which typically provide features such as access control and 
version control).
If using external tools and libraries, the organization should consider:
a)	 ensuring that external libraries are managed (e.g. by maintaining an inventory of libraries used 
and their versions) and regularly updated with release cycles;
© ISO/IEC 2022 – All rights reserved	
﻿
﻿
123
