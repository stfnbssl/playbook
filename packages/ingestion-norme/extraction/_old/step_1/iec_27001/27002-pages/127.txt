ISO/IEC 27002:2022(E)
Other information
The authenticity of public keys is usually addressed by public key management processes using 
certificate authorities and public key certificates, but it is also possible to address it by using 
technologies such as applying manual processes for small number keys.
Cryptography can be used to achieve different information security objectives, for example:
a)	 confidentiality: using encryption of information to protect sensitive or critical information, either 
stored or transmitted;
b)	 integrity or authenticity: using digital signatures or message authentication codes to verify the 
authenticity or integrity of stored or transmitted sensitive or critical information. Using algorithms 
for the purpose of file integrity checking;
c)	
non-repudiation: using cryptographic techniques to provide evidence of the occurrence or non-
occurrence of an event or action;
d)	 authentication: using cryptographic techniques to authenticate users and other system entities 
requesting access to or transacting with system users, entities and resources.
The ISO/IEC 11770 series provides further information on key management.
8.25	Secure development life cycle
Control type
Information
security properties
Cybersecurity
concepts
Operational
capabilities
Security domains
#Preventive
#Confidentiality
#Integrity
#Availability
#Protect
#Application_security
#System_and_net­
work_security
#Protection
Control
Rules for the secure development of software and systems should be established and applied.
Purpose
To ensure information security is designed and implemented within the secure development life cycle 
of software and systems.
Guidance
Secure development is a requirement to build up a secure service, architecture, software and system. 
To achieve this, the following aspects should be considered:
a)	 separation of development, test and production environments (see 8.31);
b)	 guidance on the security in the software development life cycle:
1)	 security in the software development methodology (see 8.28 and 8.27);
2)	 secure coding guidelines for each programming language used (see 8.28);
c)	
security requirements in the specification and design phase (see 5.8);
d)	 security checkpoints in projects (see 5.8);
e)	 system and security testing, such as regression testing, code scan and penetration tests (see 8.29);
f)	
secure repositories for source code and configuration (see 8.4 and 8.9);
g)	 security in the version control (see 8.32);
© ISO/IEC 2022 – All rights reserved	
﻿
﻿
117
